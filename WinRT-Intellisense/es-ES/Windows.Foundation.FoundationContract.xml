<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Windows. Foundation. FoundationContract</name>
  </assembly>
  <members>
    <member name="T:Windows.Foundation.AsyncActionCompletedHandler">
      <summary>Representa un método que controla el evento completado de una acción asincrónica.</summary>
      <param name="asyncInfo">La acción asincrónica.</param>
      <param name="asyncStatus">Uno de los valores de la enumeración.</param>
    </member>
    <member name="T:Windows.Foundation.AsyncActionProgressHandler`1">
      <summary>Representa un método que controla los eventos de actualización de progreso de una acción asincrónica que proporciona actualizaciones de progreso.</summary>
      <typeparam name="TProgress">
      </typeparam>
      <param name="asyncInfo">La acción asincrónica.</param>
      <param name="progressInfo">Información de progreso.</param>
    </member>
    <member name="T:Windows.Foundation.AsyncActionWithProgressCompletedHandler`1">
      <summary>Representa un método que controla el evento completado de una acción asincrónica que proporciona actualizaciones de progreso.</summary>
      <typeparam name="TProgress">
      </typeparam>
      <param name="asyncInfo">La acción asincrónica.</param>
      <param name="asyncStatus">Uno de los valores de la enumeración.</param>
    </member>
    <member name="T:Windows.Foundation.AsyncOperationCompletedHandler`1">
      <summary>Representa un método que controla el evento completado de una operación asincrónica.</summary>
      <typeparam name="TResult">
      </typeparam>
      <param name="asyncInfo">Operación asincrónica.</param>
      <param name="asyncStatus">Uno de los valores de la enumeración.</param>
    </member>
    <member name="T:Windows.Foundation.AsyncOperationProgressHandler`2">
      <summary>Representa un método que controla los eventos de actualización de progreso de una operación asincrónica que proporciona actualizaciones de progreso.</summary>
      <typeparam name="TResult">
      </typeparam>
      <typeparam name="TProgress">
      </typeparam>
      <param name="asyncInfo">Operación asincrónica.</param>
      <param name="progressInfo">Información de progreso.</param>
    </member>
    <member name="T:Windows.Foundation.AsyncOperationWithProgressCompletedHandler`2">
      <summary>Representa un método que controla el evento completado de una operación asincrónica que proporciona actualizaciones de progreso.</summary>
      <typeparam name="TResult">
      </typeparam>
      <typeparam name="TProgress">
      </typeparam>
      <param name="asyncInfo">Operación asincrónica.</param>
      <param name="asyncStatus">Uno de los valores de la enumeración.</param>
    </member>
    <member name="T:Windows.Foundation.AsyncStatus">
      <summary>Especifica el estado de una operación asincrónica.</summary>
    </member>
    <member name="F:Windows.Foundation.AsyncStatus.Canceled">
      <summary>Se canceló la operación.</summary>
    </member>
    <member name="F:Windows.Foundation.AsyncStatus.Completed">
      <summary>La operación se ha completado.</summary>
    </member>
    <member name="F:Windows.Foundation.AsyncStatus.Error">
      <summary>La operación ha encontrado un error.</summary>
    </member>
    <member name="F:Windows.Foundation.AsyncStatus.Started">
      <summary>La operación se ha iniciado.</summary>
    </member>
    <member name="T:Windows.Foundation.DateTime">
      <summary>Representa un instante de tiempo, normalmente expresado en forma de fecha y hora del día.</summary>
    </member>
    <member name="F:Windows.Foundation.DateTime.UniversalTime">
      <summary>Entero de 64 bits con signo que representa un punto en el tiempo como el número de intervalos de 100 segundos antes o después de la medianoche del 1 de enero de 1601 (según el calendario gregoriano).</summary>
    </member>
    <member name="T:Windows.Foundation.Deferral">
      <summary>Almacena un DeferralCompletedHandler que se invocará al completarse el aplazamiento y manipulará el estado del aplazamiento.</summary>
    </member>
    <member name="M:Windows.Foundation.Deferral.#ctor(Windows.Foundation.DeferralCompletedHandler)">
      <summary>Inicializa un nuevo objeto de aplazamiento y especifica el DeferralCompletedHandler que se va a llamar cuando se complete el aplazamiento.</summary>
      <param name="handler">DeferralCompletedHandler que se va a llamar al finalizar el aplazamiento.</param>
    </member>
    <member name="M:Windows.Foundation.Deferral.Close">
      <summary>Si el DeferralCompletedHandler todavía no se ha invocado, lo llamará y quitará la referencia al delegado.</summary>
    </member>
    <member name="M:Windows.Foundation.Deferral.Complete">
      <summary>Si el DeferralCompletedHandler todavía no se ha invocado, lo llamará y quitará la referencia al delegado.</summary>
    </member>
    <member name="T:Windows.Foundation.DeferralCompletedHandler">
      <summary>Representa un método que controla el evento completado de una acción diferida.</summary>
    </member>
    <member name="T:Windows.Foundation.EventHandler`1">
      <summary>Representa un método que controla eventos generales.</summary>
      <typeparam name="T">
      </typeparam>
      <param name="sender">El origen del evento.</param>
      <param name="args">Datos del evento.</param>
    </member>
    <member name="T:Windows.Foundation.EventRegistrationToken">
      <summary>Representa una referencia a un delegado que recibe notificaciones de cambios.</summary>
    </member>
    <member name="F:Windows.Foundation.EventRegistrationToken.Value">
      <summary>Referencia al delegado.</summary>
    </member>
    <member name="T:Windows.Foundation.FoundationContract">
      <summary>
      </summary>
    </member>
    <member name="T:Windows.Foundation.HResult">
      <summary>Representa un error Windows Runtime.</summary>
    </member>
    <member name="F:Windows.Foundation.HResult.Value">
      <summary>Un entero que describe un error.</summary>
    </member>
    <member name="T:Windows.Foundation.IAsyncAction">
      <summary>Representa una acción asincrónica. Este es el tipo de valor devuelto para muchos Windows Runtime métodos asincrónicos que no tienen un objeto de resultado y no notifican el progreso en curso.</summary>
    </member>
    <member name="P:Windows.Foundation.IAsyncAction.Completed">
      <summary>Obtiene o establece el método que controla la notificación de acción completada.</summary>
      <returns>Método que controla la notificación.</returns>
    </member>
    <member name="M:Windows.Foundation.IAsyncAction.GetResults">
      <summary>Devuelve los resultados de la acción.</summary>
    </member>
    <member name="T:Windows.Foundation.IAsyncActionWithProgress`1">
      <summary>Representa una acción asincrónica que puede informar de las actualizaciones de progreso a los llamadores. Este es el tipo de valor devuelto para todos los métodos asincrónicos Windows Runtime que no tienen un objeto de resultado, pero que notifican el progreso a los agentes de escucha de devolución de llamada.</summary>
      <typeparam name="TProgress">
      </typeparam>
    </member>
    <member name="P:Windows.Foundation.IAsyncActionWithProgress`1.Completed">
      <summary>Obtiene o establece el método que controla la notificación de acción completada.</summary>
      <returns>Método que controla la notificación.</returns>
    </member>
    <member name="P:Windows.Foundation.IAsyncActionWithProgress`1.Progress">
      <summary>Obtiene o establece el método de devolución de llamada que recibe la notificación de progreso.</summary>
      <returns>Referencia al método de devolución de llamada que controla las notificaciones de progreso. Implemente el delegado AsyncActionProgressHandler (TProgress) para definir la devolución de llamada. * TProgress * define el tipo de unidad de progreso, que varía según la implementación del método.</returns>
    </member>
    <member name="M:Windows.Foundation.IAsyncActionWithProgress`1.GetResults">
      <summary>Devuelve los resultados de la acción.</summary>
    </member>
    <member name="T:Windows.Foundation.IAsyncInfo">
      <summary>Admite acciones y operaciones asincrónicas. IAsyncInfo es una interfaz base para IAsyncAction, IAsyncActionWithProgress &lt; TProgress &gt;, IAsyncOperation &lt; TResult &gt; y IAsyncOperationWithProgress &lt; TResult, TProgress &gt;, cada una de las cuales admite combinaciones de tipo de valor devuelto y progreso. para un método asincrónico.</summary>
    </member>
    <member name="P:Windows.Foundation.IAsyncInfo.ErrorCode">
      <summary>Obtiene una cadena que describe una condición de error de la operación asincrónica.</summary>
      <returns>La cadena de error.</returns>
    </member>
    <member name="P:Windows.Foundation.IAsyncInfo.Id">
      <summary>Obtiene el identificador de la operación asincrónica.</summary>
      <returns>Identificador de la operación asincrónica.</returns>
    </member>
    <member name="P:Windows.Foundation.IAsyncInfo.Status">
      <summary>Obtiene un valor que indica el estado de la operación asincrónica.</summary>
      <returns>Estado de la operación, como un valor de la enumeración. Un valor de * * completado * * indica que el método ha devuelto. El valor * * Inicio * * representa un estado de transición antes de que cualquiera de los otros 3 resultados finales (* * completado * *, * * error * *, * * cancelado * *) se puede determinar mediante la invocación del método.</returns>
    </member>
    <member name="M:Windows.Foundation.IAsyncInfo.Cancel">
      <summary>Cancela la operación asincrónica.</summary>
    </member>
    <member name="M:Windows.Foundation.IAsyncInfo.Close">
      <summary>Cierra la operación asincrónica.</summary>
    </member>
    <member name="T:Windows.Foundation.IAsyncOperation`1">
      <summary>Representa una operación asincrónica, que devuelve un resultado al finalizar. Este es el tipo de valor devuelto para muchos Windows Runtime métodos asincrónicos que tienen resultados pero que no notifican el progreso.</summary>
      <typeparam name="TResult">
      </typeparam>
    </member>
    <member name="P:Windows.Foundation.IAsyncOperation`1.Completed">
      <summary>Obtiene o establece el método que controla la notificación de operación completada.</summary>
      <returns>Método que controla la notificación.</returns>
    </member>
    <member name="M:Windows.Foundation.IAsyncOperation`1.GetResults">
      <summary>Devuelve los resultados de la operación.</summary>
      <returns>Los resultados de la operación.</returns>
    </member>
    <member name="T:Windows.Foundation.IAsyncOperationWithProgress`2">
      <summary>Representa una operación asincrónica que puede informar de las actualizaciones de progreso a los llamadores. Este es el tipo de valor devuelto para muchos Windows Runtime métodos asincrónicos que tienen resultados y también notifican el progreso.</summary>
      <typeparam name="TResult">
      </typeparam>
      <typeparam name="TProgress">
      </typeparam>
    </member>
    <member name="P:Windows.Foundation.IAsyncOperationWithProgress`2.Completed">
      <summary>Obtiene o establece el método que controla la notificación de operación completada.</summary>
      <returns>Método que controla la notificación.</returns>
    </member>
    <member name="P:Windows.Foundation.IAsyncOperationWithProgress`2.Progress">
      <summary>Obtiene o establece el método que controla las notificaciones de progreso.</summary>
      <returns>Referencia al método de devolución de llamada que controla las notificaciones de progreso. Implemente el delegado AsyncOperationProgressHandler &lt; TResult, TProgress &gt; para definir la devolución de llamada. * TProgress * define el tipo de unidad de progreso, que varía según la implementación del método.</returns>
    </member>
    <member name="M:Windows.Foundation.IAsyncOperationWithProgress`2.GetResults">
      <summary>Devuelve los resultados de la operación.</summary>
      <returns>Los resultados de la operación.</returns>
    </member>
    <member name="T:Windows.Foundation.IClosable">
      <summary>Define un método para liberar los recursos asignados.</summary>
    </member>
    <member name="M:Windows.Foundation.IClosable.Close">
      <summary>Libera los recursos del sistema que expone un objeto Windows Runtime.</summary>
    </member>
    <member name="T:Windows.Foundation.IPropertyValue">
      <summary>Representa un valor en un almacén de propiedades. No se puede implementar esta interfaz; vea la sección Comentarios.</summary>
    </member>
    <member name="P:Windows.Foundation.IPropertyValue.IsNumericScalar">
      <summary>Obtiene un valor que indica si el valor de la propiedad es un valor escalar.</summary>
      <returns>True si el valor es escalar; en caso contrario, false.</returns>
    </member>
    <member name="P:Windows.Foundation.IPropertyValue.Type">
      <summary>Devuelve el tipo almacenado en el valor de propiedad.</summary>
      <returns>Tipo almacenado en el valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetBoolean">
      <summary>Devuelve el valor booleano almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetBooleanArray(System.Boolean[]@)">
      <summary>Devuelve la matriz de valores booleanos almacenada como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetChar16">
      <summary>Devuelve el carácter Unicode almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetChar16Array(System.Char[]@)">
      <summary>Devuelve la matriz de caracteres Unicode almacenada como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetDateTime">
      <summary>Devuelve el valor de fecha y hora almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetDateTimeArray(Windows.Foundation.DateTime[]@)">
      <summary>Devuelve la matriz de valores de fecha y hora almacenada como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetDouble">
      <summary>Devuelve el valor de punto flotante almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetDoubleArray(System.Double[]@)">
      <summary>Devuelve la matriz de valores de punto flotante almacenada como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetGuid">
      <summary>Devuelve el valor GUID almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetGuidArray(System.Guid[]@)">
      <summary>Devuelve la matriz de valores GUID almacenados como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetInspectableArray(System.Object[]@)">
      <summary>Devuelve la matriz de objetos inspeccionables almacenada como un valor de propiedad.</summary>
      <param name="value">Matriz de objetos.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetInt16">
      <summary>Devuelve el valor entero almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetInt16Array(System.Int16[]@)">
      <summary>Devuelve la matriz de valores enteros almacenada como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetInt32">
      <summary>Devuelve el valor entero almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetInt32Array(System.Int32[]@)">
      <summary>Devuelve la matriz de valores enteros almacenada como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetInt64">
      <summary>Devuelve el valor entero almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetInt64Array(System.Int64[]@)">
      <summary>Devuelve la matriz de valores enteros almacenada como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetPoint">
      <summary>Devuelve la estructura de punto almacenada como un valor de propiedad.</summary>
      <returns>Estructura.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetPointArray(Windows.Foundation.Point[]@)">
      <summary>Devuelve la matriz de estructuras de punto almacenada como un valor de propiedad.</summary>
      <param name="value">Matriz de estructuras.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetRect">
      <summary>Devuelve la estructura del rectángulo almacenada como un valor de propiedad.</summary>
      <returns>Estructura.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetRectArray(Windows.Foundation.Rect[]@)">
      <summary>Devuelve la matriz de estructuras de rectángulo almacenada como un valor de propiedad.</summary>
      <param name="value">Matriz de estructuras.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetSingle">
      <summary>Devuelve el valor de punto flotante almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetSingleArray(System.Single[]@)">
      <summary>Devuelve la matriz de valores de punto flotante almacenada como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetSize">
      <summary>Devuelve la estructura de tamaño almacenada como un valor de propiedad.</summary>
      <returns>Estructura.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetSizeArray(Windows.Foundation.Size[]@)">
      <summary>Devuelve la matriz de estructuras de tamaño almacenada como un valor de propiedad.</summary>
      <param name="value">Matriz de estructuras.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetString">
      <summary>Devuelve el valor de cadena almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetStringArray(System.String[]@)">
      <summary>Devuelve la matriz de valores de cadena almacenada como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetTimeSpan">
      <summary>Devuelve el valor del intervalo de tiempo almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetTimeSpanArray(Windows.Foundation.TimeSpan[]@)">
      <summary>Devuelve la matriz de valores de intervalo de tiempo almacenados como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetUInt16">
      <summary>Devuelve el valor entero sin signo almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetUInt16Array(System.UInt16[]@)">
      <summary>Devuelve la matriz de valores enteros sin signo almacenados como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetUInt32">
      <summary>Devuelve el valor entero sin signo almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetUInt32Array(System.UInt32[]@)">
      <summary>Devuelve la matriz de valores enteros sin signo almacenados como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetUInt64">
      <summary>Devuelve el valor entero sin signo almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetUInt64Array(System.UInt64[]@)">
      <summary>Devuelve la matriz de valores enteros sin signo almacenados como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetUInt8">
      <summary>Devuelve el valor de bytes almacenado como un valor de propiedad.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="M:Windows.Foundation.IPropertyValue.GetUInt8Array(System.Byte[]@)">
      <summary>Devuelve la matriz de valores de byte almacenados como un valor de propiedad.</summary>
      <param name="value">Matriz de valores.</param>
    </member>
    <member name="T:Windows.Foundation.IReference`1">
      <summary>Permite utilizar enumeraciones, estructuras y tipos de delegado arbitrarios como valores de propiedad.</summary>
      <typeparam name="T">
      </typeparam>
    </member>
    <member name="P:Windows.Foundation.IReference`1.Value">
      <summary>Obtiene el tipo que se representa como IPropertyValue.</summary>
      <returns>Tipo.</returns>
    </member>
    <member name="T:Windows.Foundation.IReferenceArray`1">
      <summary>Permite utilizar enumeraciones, estructuras y tipos de delegado arbitrarios como una matriz de valores de propiedad. No se puede implementar esta interfaz; vea la sección Comentarios.</summary>
      <typeparam name="T">
      </typeparam>
    </member>
    <member name="P:Windows.Foundation.IReferenceArray`1.Value">
      <summary>Obtiene el tipo que se representa como una matriz IPropertyValue.</summary>
      <returns>Tipo.</returns>
    </member>
    <member name="T:Windows.Foundation.IStringable">
      <summary>Proporciona una manera de representar el objeto actual como una cadena.</summary>
    </member>
    <member name="M:Windows.Foundation.IStringable.ToString">
      <summary>Obtiene una cadena que representa el objeto actual.</summary>
      <returns>Cadena que representa el objeto actual.</returns>
    </member>
    <member name="T:Windows.Foundation.Point">
      <summary>Representa valores de coordenada x e y que definen un punto en un plano bidimensional.</summary>
    </member>
    <member name="F:Windows.Foundation.Point.X">
      <summary>Posición horizontal del punto.</summary>
    </member>
    <member name="F:Windows.Foundation.Point.Y">
      <summary>Posición vertical del punto.</summary>
    </member>
    <member name="T:Windows.Foundation.PropertyType">
      <summary>Especifica los tipos de valor de propiedad.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Boolean">
      <summary>Valor que solo puede ser true o false.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.BooleanArray">
      <summary>Matriz de valores booleanos.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Char16">
      <summary>Punto de código de 16 bits sin signo (2 bytes).</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Char16Array">
      <summary>Matriz de valores char.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.DateTime">
      <summary>Instante en el tiempo, normalmente expresado en forma de fecha y hora del día.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.DateTimeArray">
      <summary>Matriz de valores DateTime.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Double">
      <summary>Número de punto flotante de 64 bits con signo (8 bytes).</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.DoubleArray">
      <summary>Matriz de valores double.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Empty">
      <summary>No se ha especificado ningún tipo.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Guid">
      <summary>Identificador único global.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.GuidArray">
      <summary>Matriz de valores GUID.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Inspectable">
      <summary>Objeto que implementa la interfaz IInspectable.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.InspectableArray">
      <summary>Una matriz de * * valores * * inspeccionables.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Int16">
      <summary>Entero de 16 bits con signo (2 bytes).</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Int16Array">
      <summary>Matriz de valores Int16.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Int32">
      <summary>Entero de 32 bits con signo (4 bytes).</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Int32Array">
      <summary>Matriz de valores Int32.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Int64">
      <summary>Entero de 64 bits con signo (8 bytes).</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Int64Array">
      <summary>Matriz de valores Int64.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.OtherType">
      <summary>Tipo no especificado en esta enumeración.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.OtherTypeArray">
      <summary>Matriz de un tipo no especificado.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Point">
      <summary>Par ordenado de coordenadas x e y de punto flotante que define un punto en un plano bidimensional.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.PointArray">
      <summary>Matriz de estructuras de puntos.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Rect">
      <summary>Conjunto de cuatro números de punto flotante que representan la ubicación y el tamaño de un rectángulo.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.RectArray">
      <summary>Matriz de estructuras Rect.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Single">
      <summary>Número de punto flotante de 32 bits con signo (4 bytes).</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.SingleArray">
      <summary>Matriz de valores únicos.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.Size">
      <summary>Par ordenado de números de punto flotante que especifican un alto y un ancho.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.SizeArray">
      <summary>Matriz de estructuras de tamaño.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.String">
      <summary>Un Windows Runtime HSTRING.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.StringArray">
      <summary>Matriz de valores de cadena.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.TimeSpan">
      <summary>Un intervalo de tiempo.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.TimeSpanArray">
      <summary>Matriz de valores TimeSpan.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.UInt16">
      <summary>Entero de 16 bits sin signo (2 bytes).</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.UInt16Array">
      <summary>Matriz de valores UInt16.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.UInt32">
      <summary>Entero de 32 bits sin signo (4 bytes).</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.UInt32Array">
      <summary>Una matriz de valores UInt32.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.UInt64">
      <summary>Entero de 64 bits sin signo (8 bytes).</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.UInt64Array">
      <summary>Matriz de valores UInt64.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.UInt8">
      <summary>Byte.</summary>
    </member>
    <member name="F:Windows.Foundation.PropertyType.UInt8Array">
      <summary>Matriz de valores de byte.</summary>
    </member>
    <member name="T:Windows.Foundation.PropertyValue">
      <summary>Representa un valor en un almacén de propiedades (por ejemplo, una instancia de PropertySet).</summary>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateBoolean(System.Boolean)">
      <summary>Crea un valor de propiedad a partir de un valor booleano.</summary>
      <param name="value">Valor que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateBooleanArray(System.Boolean[])">
      <summary>Crea un valor de propiedad a partir de una matriz de valores booleanos.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateChar16(System.Char)">
      <summary>Crea un valor de propiedad a partir de un carácter Unicode.</summary>
      <param name="value">Valor que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateChar16Array(System.Char[])">
      <summary>Crea un valor de propiedad a partir de una matriz de caracteres Unicode.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateDateTime(Windows.Foundation.DateTime)">
      <summary>Crea un valor de propiedad a partir de un valor de fecha y hora.</summary>
      <param name="value">Valor que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateDateTimeArray(Windows.Foundation.DateTime[])">
      <summary>Crea un valor de propiedad a partir de una matriz de valores de fecha y hora.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateDouble(System.Double)">
      <summary>Crea un valor de propiedad a partir de un valor de punto flotante.</summary>
      <param name="value">Valor que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateDoubleArray(System.Double[])">
      <summary>Crea un valor de propiedad a partir de una matriz de valores de punto flotante.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateEmpty">
      <summary>Crea un valor de propiedad vacío.</summary>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateGuid(System.Guid)">
      <summary>Crea un valor de propiedad a partir de un GUID.</summary>
      <param name="value">Valor que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateGuidArray(System.Guid[])">
      <summary>Crea un valor de propiedad a partir de una matriz de GUID s.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateInspectable(System.Object)">
      <summary>Proporciona la representación de valores de propiedad de un objeto inspeccionable. Dado que un objeto es un tipo de referencia, también es un valor de propiedad válido y no es necesario aplicarle la conversión boxing. En su lugar, este método devuelve el objeto proporcionado sin modificarlo. Un objeto se puede establecer como un valor de propiedad sin llamar primero a este método.</summary>
      <param name="value">Objeto que se va a almacenar en el valor de propiedad. El valor no debe ser null.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateInspectableArray(System.Object[])">
      <summary>Crea un valor de propiedad a partir de una matriz de objetos inspeccionables.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateInt16(System.Int16)">
      <summary>Crea un valor de propiedad a partir de un entero.</summary>
      <param name="value">Valor que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateInt16Array(System.Int16[])">
      <summary>Crea un valor de propiedad a partir de una matriz de enteros.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateInt32(System.Int32)">
      <summary>Crea un valor de propiedad a partir de un entero.</summary>
      <param name="value">Valor que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateInt32Array(System.Int32[])">
      <summary>Crea un valor de propiedad a partir de una matriz de enteros.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateInt64(System.Int64)">
      <summary>Crea un valor de propiedad a partir de un entero.</summary>
      <param name="value">Valor que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateInt64Array(System.Int64[])">
      <summary>Crea un valor de propiedad a partir de una matriz de enteros.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreatePoint(Windows.Foundation.Point)">
      <summary>Crea un valor de propiedad a partir de una estructura de punto.</summary>
      <param name="value">Estructura que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreatePointArray(Windows.Foundation.Point[])">
      <summary>Crea un valor de propiedad a partir de una matriz de estructuras de puntos.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateRect(Windows.Foundation.Rect)">
      <summary>Crea un valor de propiedad a partir de una estructura de rectángulo.</summary>
      <param name="value">Estructura que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateRectArray(Windows.Foundation.Rect[])">
      <summary>Crea un valor de propiedad a partir de una matriz de estructuras de rectángulo.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateSingle(System.Single)">
      <summary>Crea un valor de propiedad a partir de un valor de punto flotante.</summary>
      <param name="value">Valor que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateSingleArray(System.Single[])">
      <summary>Crea un valor de propiedad a partir de una matriz de valores de punto flotante.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateSize(Windows.Foundation.Size)">
      <summary>Crea un valor de propiedad a partir de una estructura de tamaño.</summary>
      <param name="value">Estructura que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateSizeArray(Windows.Foundation.Size[])">
      <summary>Crea un valor de propiedad a partir de una matriz de estructuras de tamaño.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateString(System.String)">
      <summary>Crea un valor de propiedad a partir de una cadena.</summary>
      <param name="value">Cadena que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateStringArray(System.String[])">
      <summary>Crea un valor de propiedad a partir de una matriz de cadenas.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateTimeSpan(Windows.Foundation.TimeSpan)">
      <summary>Crea un valor de propiedad a partir de un intervalo de tiempo.</summary>
      <param name="value">Intervalo de tiempo que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateTimeSpanArray(Windows.Foundation.TimeSpan[])">
      <summary>Crea un valor de propiedad a partir de una matriz de intervalos de tiempo.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateUInt16(System.UInt16)">
      <summary>Crea un valor de propiedad a partir de un entero sin signo.</summary>
      <param name="value">Valor que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateUInt16Array(System.UInt16[])">
      <summary>Crea un valor de propiedad a partir de una matriz de enteros sin signo.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateUInt32(System.UInt32)">
      <summary>Crea un valor de propiedad a partir de un entero sin signo.</summary>
      <param name="value">Valor que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateUInt32Array(System.UInt32[])">
      <summary>Crea un valor de propiedad a partir de una matriz de enteros sin signo.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateUInt64(System.UInt64)">
      <summary>Crea un valor de propiedad a partir de un entero sin signo.</summary>
      <param name="value">Valor que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateUInt64Array(System.UInt64[])">
      <summary>Crea un valor de propiedad a partir de una matriz de enteros sin signo.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateUInt8(System.Byte)">
      <summary>Crea un valor de propiedad a partir de un byte.</summary>
      <param name="value">Valor que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="M:Windows.Foundation.PropertyValue.CreateUInt8Array(System.Byte[])">
      <summary>Crea un valor de propiedad a partir de una matriz de bytes.</summary>
      <param name="value">Matriz que se va a almacenar en el valor de propiedad.</param>
      <returns>Valor de propiedad.</returns>
    </member>
    <member name="T:Windows.Foundation.Rect">
      <summary>Contiene valores numéricos que representan la ubicación y el tamaño de un rectángulo.</summary>
    </member>
    <member name="F:Windows.Foundation.Rect.Height">
      <summary>Alto del rectángulo, en píxeles.</summary>
    </member>
    <member name="F:Windows.Foundation.Rect.Width">
      <summary>Ancho del rectángulo, en píxeles.</summary>
    </member>
    <member name="F:Windows.Foundation.Rect.X">
      <summary>Coordenada x de la esquina superior izquierda del rectángulo.</summary>
    </member>
    <member name="F:Windows.Foundation.Rect.Y">
      <summary>Coordenada y de la esquina superior izquierda del rectángulo.</summary>
    </member>
    <member name="T:Windows.Foundation.Size">
      <summary>Representa valores numéricos que especifican un alto y un ancho.</summary>
    </member>
    <member name="F:Windows.Foundation.Size.Height">
      <summary>Alto.</summary>
    </member>
    <member name="F:Windows.Foundation.Size.Width">
      <summary>Ancho.</summary>
    </member>
    <member name="T:Windows.Foundation.TimeSpan">
      <summary>Representa un intervalo de tiempo como un valor entero de 64 bits con signo.</summary>
    </member>
    <member name="F:Windows.Foundation.TimeSpan.Duration">
      <summary>Un período de tiempo expresado en unidades de 100-nanosegundos.</summary>
    </member>
    <member name="T:Windows.Foundation.TypedEventHandler`2">
      <summary>Representa un método que controla eventos generales.</summary>
      <typeparam name="TSender">
      </typeparam>
      <typeparam name="TResult">
      </typeparam>
      <param name="sender">El origen del evento.</param>
      <param name="args">Datos del evento. Si no hay datos de eventos, este parámetro será null.</param>
    </member>
    <member name="T:Windows.Foundation.Collections.CollectionChange">
      <summary>Describe la acción que provoca un cambio en una colección.</summary>
    </member>
    <member name="F:Windows.Foundation.Collections.CollectionChange.ItemChanged">
      <summary>Se cambia un elemento en la colección.</summary>
    </member>
    <member name="F:Windows.Foundation.Collections.CollectionChange.ItemInserted">
      <summary>Se agrega un elemento a la colección.</summary>
    </member>
    <member name="F:Windows.Foundation.Collections.CollectionChange.ItemRemoved">
      <summary>Se quita un elemento de la colección.</summary>
    </member>
    <member name="F:Windows.Foundation.Collections.CollectionChange.Reset">
      <summary>Se cambia la colección.</summary>
    </member>
    <member name="T:Windows.Foundation.Collections.IIterable`1">
      <summary>Expone un iterador que admite la iteración simple en una colección de un tipo especificado.</summary>
      <typeparam name="T">
      </typeparam>
    </member>
    <member name="M:Windows.Foundation.Collections.IIterable`1.First">
      <summary>Devuelve un iterador para los elementos de la colección.</summary>
      <returns>Iterador.</returns>
    </member>
    <member name="T:Windows.Foundation.Collections.IIterator`1">
      <summary>Admite la iteración simple en una colección.</summary>
      <typeparam name="T">
      </typeparam>
    </member>
    <member name="P:Windows.Foundation.Collections.IIterator`1.Current">
      <summary>Obtiene el elemento actual de la colección.</summary>
      <returns>Elemento actual de la colección.</returns>
    </member>
    <member name="P:Windows.Foundation.Collections.IIterator`1.HasCurrent">
      <summary>Obtiene un valor que indica si el iterador hace referencia a un elemento actual o está al final de la colección.</summary>
      <returns>True si el iterador hace referencia a un elemento válido de la colección; en caso contrario, false.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IIterator`1.GetMany(`0[])">
      <summary>Recupera todos los elementos de la colección.</summary>
      <param name="items">Los elementos de la colección.</param>
      <returns>Número de elementos de la colección.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IIterator`1.MoveNext">
      <summary>Desplaza el iterador al siguiente elemento de la colección.</summary>
      <returns>True si el iterador hace referencia a un elemento válido de la colección; false si el iterador pasa el final de la colección.</returns>
    </member>
    <member name="T:Windows.Foundation.Collections.IKeyValuePair`2">
      <summary>Representa un par clave-valor. Normalmente se usa como tipo de restricción cuando es necesario encapsular dos parámetros de tipo en uno para satisfacer las restricciones de otra interfaz genérica.</summary>
      <typeparam name="K">
      </typeparam>
      <typeparam name="V">
      </typeparam>
    </member>
    <member name="P:Windows.Foundation.Collections.IKeyValuePair`2.Key">
      <summary>Obtiene la clave del par clave-valor.</summary>
      <returns>La clave.</returns>
    </member>
    <member name="P:Windows.Foundation.Collections.IKeyValuePair`2.Value">
      <summary>Obtiene el valor del par clave-valor.</summary>
      <returns>El valor.</returns>
    </member>
    <member name="T:Windows.Foundation.Collections.IMap`2">
      <summary>Representa una colección asociativa, también conocida como un mapa o un diccionario.</summary>
      <typeparam name="K">
      </typeparam>
      <typeparam name="V">
      </typeparam>
    </member>
    <member name="P:Windows.Foundation.Collections.IMap`2.Size">
      <summary>Obtiene el número de elementos del mapa.</summary>
      <returns>Número de elementos del mapa.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IMap`2.Clear">
      <summary>Quita todos los elementos del mapa.</summary>
    </member>
    <member name="M:Windows.Foundation.Collections.IMap`2.GetView">
      <summary>Devuelve una vista inmutable del mapa.</summary>
      <returns>Vista del mapa.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IMap`2.HasKey(`0)">
      <summary>Determina si la asignación contiene la clave especificada.</summary>
      <param name="key">Clave asociada al elemento que se va a buscar.</param>
      <returns>True si se encuentra la clave; en caso contrario, false.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IMap`2.Insert(`0,`1)">
      <summary>Inserta o reemplaza un elemento en el mapa.</summary>
      <param name="key">Clave asociada al elemento que se va a insertar.</param>
      <param name="value">Elemento que se va a insertar.</param>
      <returns>True si un elemento con la clave especificada es un elemento existente que se ha reemplazado; en caso contrario, false.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IMap`2.Lookup(`0)">
      <summary>Devuelve el elemento de la clave especificada en el mapa.</summary>
      <param name="key">Clave asociada al elemento que se va a buscar.</param>
      <returns>El valor, si existe un elemento con la clave especificada. Use el método * * Haskey (* * para determinar si existe la clave.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IMap`2.Remove(`0)">
      <summary>Quita un elemento del mapa.</summary>
      <param name="key">Clave asociada al elemento que se va a quitar.</param>
    </member>
    <member name="T:Windows.Foundation.Collections.IMapChangedEventArgs`1">
      <summary>Proporciona datos para el evento cambiado de una colección de mapas.</summary>
      <typeparam name="K">
      </typeparam>
    </member>
    <member name="P:Windows.Foundation.Collections.IMapChangedEventArgs`1.CollectionChange">
      <summary>Obtiene el tipo de cambio que se produjo en el mapa.</summary>
      <returns>Tipo de cambio en el mapa.</returns>
    </member>
    <member name="P:Windows.Foundation.Collections.IMapChangedEventArgs`1.Key">
      <summary>Obtiene la clave del elemento que cambió.</summary>
      <returns>La clave del elemento que ha cambiado.</returns>
    </member>
    <member name="T:Windows.Foundation.Collections.IMapView`2">
      <summary>Representa una vista inmutable en un mapa.</summary>
      <typeparam name="K">
      </typeparam>
      <typeparam name="V">
      </typeparam>
    </member>
    <member name="P:Windows.Foundation.Collections.IMapView`2.Size">
      <summary>Obtiene el número de elementos del mapa.</summary>
      <returns>Número de elementos del mapa.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IMapView`2.HasKey(`0)">
      <summary>Determina si la vista del mapa contiene la clave especificada.</summary>
      <param name="key">Clave que se va a buscar en la vista del mapa.</param>
      <returns>True si se encuentra la clave; en caso contrario, false.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IMapView`2.Lookup(`0)">
      <summary>Devuelve el elemento de la clave especificada en la vista del mapa.</summary>
      <param name="key">Clave que se va a buscar en la vista del mapa.</param>
      <returns>El valor, si existe un elemento con la clave especificada. Use el método * * Haskey (* * para determinar si existe la clave.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IMapView`2.Split(Windows.Foundation.Collections.IMapView{`0,`1}@,Windows.Foundation.Collections.IMapView{`0,`1}@)">
      <summary>Divide la vista del mapa en dos vistas.</summary>
      <param name="first">Una mitad del mapa original.</param>
      <param name="second">La segunda mitad del mapa original.</param>
    </member>
    <member name="T:Windows.Foundation.Collections.IObservableMap`2">
      <summary>Notifica a los agentes de escucha los cambios dinámicos en una asignación, como cuando se agregan o quitan elementos.</summary>
      <typeparam name="K">
      </typeparam>
      <typeparam name="V">
      </typeparam>
    </member>
    <member name="E:Windows.Foundation.Collections.IObservableMap`2.MapChanged">
      <summary>Se produce cuando cambia la asignación.</summary>
    </member>
    <member name="T:Windows.Foundation.Collections.IObservableVector`1">
      <summary>Notifica a los agentes de escucha los cambios en el vector.</summary>
      <typeparam name="T">
      </typeparam>
    </member>
    <member name="E:Windows.Foundation.Collections.IObservableVector`1.VectorChanged">
      <summary>Se produce cuando cambia el vector.</summary>
    </member>
    <member name="T:Windows.Foundation.Collections.IPropertySet">
      <summary>Representa una colección de pares clave-valor, correlacionando algunas otras interfaces de colección.</summary>
    </member>
    <member name="T:Windows.Foundation.Collections.IVector`1">
      <summary>Representa una colección de elementos de acceso aleatorio.</summary>
      <typeparam name="T">
      </typeparam>
    </member>
    <member name="P:Windows.Foundation.Collections.IVector`1.Size">
      <summary>Obtiene el número de elementos del vector.</summary>
      <returns>Número de elementos del vector.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IVector`1.Append(`0)">
      <summary>Anexa un elemento al final del vector.</summary>
      <param name="value">Elemento que se va a anexar al vector.</param>
    </member>
    <member name="M:Windows.Foundation.Collections.IVector`1.Clear">
      <summary>Quita todos los elementos del vector.</summary>
    </member>
    <member name="M:Windows.Foundation.Collections.IVector`1.GetAt(System.UInt32)">
      <summary>Devuelve el elemento en el índice especificado del vector.</summary>
      <param name="index">Índice de base cero del elemento.</param>
      <returns>Elemento que se encuentra en el índice especificado.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IVector`1.GetMany(System.UInt32,`0[])">
      <summary>Obtiene una colección de elementos del vector que comienza en el índice especificado.</summary>
      <param name="startIndex">Índice de base cero en el que se va a iniciar.</param>
      <param name="items">Matriz en la que se van a copiar los elementos.</param>
      <returns>Un código de estado que indica el resultado de la operación.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IVector`1.GetView">
      <summary>Devuelve una vista inmutable del vector.</summary>
      <returns>Vista del vector.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IVector`1.IndexOf(`0,System.UInt32@)">
      <summary>Recupera el índice de un elemento especificado en el vector.</summary>
      <param name="value">Elemento que se va a buscar en el vector.</param>
      <param name="index">Si se encuentra el elemento, es el índice de base cero del elemento; de lo contrario, este parámetro es 0.</param>
      <returns>* * True * * si se encuentra el elemento; en caso contrario, * * false * *.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IVector`1.InsertAt(System.UInt32,`0)">
      <summary>Inserta un elemento en el índice especificado del vector.</summary>
      <param name="index">Índice de base cero.</param>
      <param name="value">Elemento que se va a insertar.</param>
    </member>
    <member name="M:Windows.Foundation.Collections.IVector`1.RemoveAt(System.UInt32)">
      <summary>Quita el elemento en el índice especificado del vector.</summary>
      <param name="index">Índice de base cero del elemento de vector que se va a quitar.</param>
    </member>
    <member name="M:Windows.Foundation.Collections.IVector`1.RemoveAtEnd">
      <summary>Quita el último elemento del vector.</summary>
    </member>
    <member name="M:Windows.Foundation.Collections.IVector`1.ReplaceAll(`0[])">
      <summary>Reemplaza todos los elementos del vector por los elementos especificados.</summary>
      <param name="items">Colección de elementos que se van a agregar al vector.</param>
    </member>
    <member name="M:Windows.Foundation.Collections.IVector`1.SetAt(System.UInt32,`0)">
      <summary>Establece el valor en el índice especificado del vector.</summary>
      <param name="index">Índice de base cero en el que se va a establecer el valor.</param>
      <param name="value">Elemento que se va a establecer.</param>
    </member>
    <member name="T:Windows.Foundation.Collections.IVectorChangedEventArgs">
      <summary>Proporciona datos para el evento cambiado de un vector.</summary>
    </member>
    <member name="P:Windows.Foundation.Collections.IVectorChangedEventArgs.CollectionChange">
      <summary>Obtiene el tipo de cambio que se produjo en el vector.</summary>
      <returns>Tipo de cambio en el vector.</returns>
    </member>
    <member name="P:Windows.Foundation.Collections.IVectorChangedEventArgs.Index">
      <summary>Obtiene la posición en la que se produjo el cambio en el vector.</summary>
      <returns>Posición de base cero donde se produjo el cambio en el vector, si procede.</returns>
    </member>
    <member name="T:Windows.Foundation.Collections.IVectorView`1">
      <summary>Representa una vista inmutable en un vector.</summary>
      <typeparam name="T">
      </typeparam>
    </member>
    <member name="P:Windows.Foundation.Collections.IVectorView`1.Size">
      <summary>Obtiene el número de elementos de la vista de vector.</summary>
      <returns>Número de elementos de la vista de vector.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IVectorView`1.GetAt(System.UInt32)">
      <summary>Devuelve el elemento en el índice especificado de la vista de vector.</summary>
      <param name="index">Índice de base cero del elemento.</param>
      <returns>Elemento que se encuentra en el índice especificado.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IVectorView`1.GetMany(System.UInt32,`0[])">
      <summary>Obtiene una colección de elementos de la vista de vector que comienza en el índice especificado.</summary>
      <param name="startIndex">Índice de base cero en el que se va a iniciar.</param>
      <param name="items">Matriz en la que se van a copiar los elementos.</param>
      <returns>Un código de estado que indica el resultado de la operación.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.IVectorView`1.IndexOf(`0,System.UInt32@)">
      <summary>Recupera el índice de un elemento especificado en la vista de vector.</summary>
      <param name="value">Elemento que se va a buscar en la vista de vector.</param>
      <param name="index">Si se encuentra el elemento, es el índice de base cero del elemento; de lo contrario, este parámetro es 0.</param>
      <returns>* * True * * si se encuentra el elemento; en caso contrario, * * false * *.</returns>
    </member>
    <member name="T:Windows.Foundation.Collections.MapChangedEventHandler`2">
      <summary>Representa el método que controla el evento cambiado de una asignación observable.</summary>
      <typeparam name="K">
      </typeparam>
      <typeparam name="V">
      </typeparam>
      <param name="sender">El mapa observable que cambió.</param>
      <param name="@event">
      </param>
    </member>
    <member name="T:Windows.Foundation.Collections.PropertySet">
      <summary>Representa un conjunto de propiedades, que es un conjunto de objetos PropertyValue con claves de cadena.</summary>
    </member>
    <member name="M:Windows.Foundation.Collections.PropertySet.#ctor">
      <summary>Crea e inicializa una nueva instancia del conjunto de propiedades.</summary>
    </member>
    <member name="P:Windows.Foundation.Collections.PropertySet.Size">
      <summary>Obtiene el número de elementos contenidos en el conjunto de propiedades.</summary>
      <returns>Número de elementos del conjunto de propiedades.</returns>
    </member>
    <member name="E:Windows.Foundation.Collections.PropertySet.MapChanged">
      <summary>Se produce cuando cambia la asignación observable.</summary>
    </member>
    <member name="M:Windows.Foundation.Collections.PropertySet.Clear">
      <summary>Quita todos los elementos del conjunto de propiedades.</summary>
    </member>
    <member name="M:Windows.Foundation.Collections.PropertySet.First">
      <summary>Devuelve un iterador para enumerar los elementos del conjunto de propiedades.</summary>
      <returns>Iterador. La posición actual del iterador es el índice 0 o el final de la propiedad establecida si el conjunto de propiedades está vacío.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.PropertySet.GetView">
      <summary>Obtiene una vista inmutable del conjunto de propiedades.</summary>
      <returns>Vista inmutable.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.PropertySet.HasKey(System.String)">
      <summary>Indica si el conjunto de propiedades tiene un elemento con la clave especificada.</summary>
      <param name="key">La clave.</param>
      <returns>True si el conjunto de propiedades tiene un elemento con la clave especificada; en caso contrario, false.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.PropertySet.Insert(System.String,System.Object)">
      <summary>Agrega un elemento al conjunto de propiedades.</summary>
      <param name="key">Clave que se va a insertar.</param>
      <param name="value">Valor que se va a insertar.</param>
      <returns>True si el método reemplaza un valor que ya existe para la clave; false si se trata de una nueva clave.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.PropertySet.Lookup(System.String)">
      <summary>Recupera el valor de la clave especificada.</summary>
      <param name="key">La clave.</param>
      <returns>El valor, si existe un elemento con la clave especificada. Use el método * * Haskey (* * para determinar si existe la clave.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.PropertySet.Remove(System.String)">
      <summary>Quita un elemento del conjunto de propiedades.</summary>
      <param name="key">La clave.</param>
    </member>
    <member name="T:Windows.Foundation.Collections.StringMap">
      <summary>Colección asociativa, también conocida como un mapa o un diccionario.</summary>
    </member>
    <member name="M:Windows.Foundation.Collections.StringMap.#ctor">
      <summary>Crea e inicializa una nueva instancia de StringMap.</summary>
    </member>
    <member name="P:Windows.Foundation.Collections.StringMap.Size">
      <summary>Obtiene el número de elementos del mapa.</summary>
      <returns>Número de elementos del mapa.</returns>
    </member>
    <member name="E:Windows.Foundation.Collections.StringMap.MapChanged">
      <summary>Se produce cuando cambia el contenido de la asignación.</summary>
    </member>
    <member name="M:Windows.Foundation.Collections.StringMap.Clear">
      <summary>Quita todos los elementos del mapa.</summary>
    </member>
    <member name="M:Windows.Foundation.Collections.StringMap.First">
      <summary>Devuelve un iterador que contiene los elementos de la colección.</summary>
      <returns>Los elementos de la colección.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.StringMap.GetView">
      <summary>Devuelve una vista inmutable del mapa.</summary>
      <returns>Vista del mapa.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.StringMap.HasKey(System.String)">
      <summary>Determina si la asignación contiene la clave especificada.</summary>
      <param name="key">Clave asociada al elemento que se va a buscar.</param>
      <returns>True si se encuentra la clave; en caso contrario, false.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.StringMap.Insert(System.String,System.String)">
      <summary>Inserta o reemplaza un elemento en el mapa.</summary>
      <param name="key">Clave asociada al elemento que se va a insertar.</param>
      <param name="value">Elemento que se va a insertar.</param>
      <returns>True si un elemento con la clave especificada es un elemento existente que se ha reemplazado; en caso contrario, false.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.StringMap.Lookup(System.String)">
      <summary>Devuelve el elemento de la clave especificada en el mapa.</summary>
      <param name="key">Clave asociada al elemento que se va a buscar.</param>
      <returns>El valor, si existe un elemento con la clave especificada. Use el método * * Haskey (* * para determinar si existe la clave.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.StringMap.Remove(System.String)">
      <summary>Quita un elemento del mapa.</summary>
      <param name="key">Clave asociada al elemento que se va a quitar.</param>
    </member>
    <member name="T:Windows.Foundation.Collections.ValueSet">
      <summary>Implementa un mapa con claves de tipo * * cadena * * y valores de tipo Object. Esta clase impide que se coloquen tipos no serializables en el mapa.</summary>
    </member>
    <member name="M:Windows.Foundation.Collections.ValueSet.#ctor">
      <summary>Crea e inicializa una nueva instancia del conjunto de propiedades.</summary>
    </member>
    <member name="P:Windows.Foundation.Collections.ValueSet.Size">
      <summary>Obtiene el número de elementos contenidos en el conjunto de valores.</summary>
      <returns>Número de elementos del conjunto de valores.</returns>
    </member>
    <member name="E:Windows.Foundation.Collections.ValueSet.MapChanged">
      <summary>Se produce cuando cambia la asignación observable.</summary>
    </member>
    <member name="M:Windows.Foundation.Collections.ValueSet.Clear">
      <summary>Quita todos los elementos del conjunto de valores.</summary>
    </member>
    <member name="M:Windows.Foundation.Collections.ValueSet.First">
      <summary>Devuelve un iterador para enumerar los elementos del conjunto de valores.</summary>
      <returns>Iterador. La posición actual del iterador es el índice 0 o el final del valor establecido si el conjunto de valores está vacío.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.ValueSet.GetView">
      <summary>Obtiene una vista inmutable del conjunto de valores.</summary>
      <returns>Vista inmutable.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.ValueSet.HasKey(System.String)">
      <summary>Indica si el conjunto de valores tiene un elemento con la clave especificada.</summary>
      <param name="key">La clave.</param>
      <returns>True si el conjunto de valores tiene un elemento con la clave especificada; en caso contrario, false.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.ValueSet.Insert(System.String,System.Object)">
      <summary>Agrega un elemento al conjunto de valores.</summary>
      <param name="key">Clave que se va a insertar.</param>
      <param name="value">Valor que se va a insertar.</param>
      <returns>True si el método reemplaza un valor que ya existe para la clave; false si se trata de una nueva clave.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.ValueSet.Lookup(System.String)">
      <summary>Recupera el valor de la clave especificada.</summary>
      <param name="key">La clave.</param>
      <returns>El valor, si existe un elemento con la clave especificada. Use el método * * Haskey (* * para determinar si existe la clave.</returns>
    </member>
    <member name="M:Windows.Foundation.Collections.ValueSet.Remove(System.String)">
      <summary>Quita un elemento del conjunto de valores.</summary>
      <param name="key">La clave.</param>
    </member>
    <member name="T:Windows.Foundation.Collections.VectorChangedEventHandler`1">
      <summary>Representa el método que controla el evento cambiado de un vector observable.</summary>
      <typeparam name="T">
      </typeparam>
      <param name="sender">Vector observable que ha cambiado.</param>
      <param name="@event">
      </param>
    </member>
    <member name="T:Windows.Foundation.Metadata.ActivatableAttribute">
      <summary>Indica que la clase es una clase en tiempo de ejecución activable.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.ActivatableAttribute.#ctor(System.Type,System.UInt32)">
      <summary>Indica que la clase en tiempo de ejecución se puede activar con parámetros, comenzando en una versión determinada.</summary>
      <param name="type">Tipo de la interfaz que se utiliza para activar los objetos.</param>
      <param name="version">Versión mínima que puede activar la clase en tiempo de ejecución con la interfaz especificada.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.ActivatableAttribute.#ctor(System.Type,System.UInt32,System.String)">
      <summary>Indica que la clase en tiempo de ejecución se puede activar con parámetros, comenzando en una versión determinada de un contrato de API determinado.</summary>
      <param name="type">Tipo de la interfaz que se utiliza para activar los objetos.</param>
      <param name="version">Versión mínima del contrato de API que puede activar la clase en tiempo de ejecución con la interfaz especificada. La versión principal está en los 16 bits de orden superior y la versión secundaria está en los 16 bits de orden inferior.</param>
      <param name="contractName">Nombre del contrato de API que puede activar la clase en tiempo de ejecución con la interfaz especificada.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.ActivatableAttribute.#ctor(System.Type,System.UInt32,Windows.Foundation.Metadata.Platform)">
      <summary>Indica que la clase en tiempo de ejecución se puede activar con parámetros, comenzando en una versión determinada de una plataforma determinada.</summary>
      <param name="type">Tipo de la interfaz que se utiliza para activar los objetos.</param>
      <param name="version">Versión de la plataforma que puede activar la clase en tiempo de ejecución con la interfaz especificada.</param>
      <param name="platform">Plataforma que puede activar la clase en tiempo de ejecución con la interfaz especificada.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.ActivatableAttribute.#ctor(System.UInt32)">
      <summary>Indica que la clase en tiempo de ejecución se puede activar sin parámetros, comenzando en una versión determinada.</summary>
      <param name="version">Versión mínima que puede activar la clase en tiempo de ejecución sin parámetros.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.ActivatableAttribute.#ctor(System.UInt32,System.String)">
      <summary>Indica que la clase en tiempo de ejecución se puede activar sin parámetros, comenzando en una versión determinada de un contrato de API determinado.</summary>
      <param name="version">Versión del contrato de API que puede activar la clase en tiempo de ejecución sin parámetros. La versión principal está en los 16 bits de orden superior y la versión secundaria está en los 16 bits de orden inferior.</param>
      <param name="type">Nombre del contrato de API que puede activar la clase en tiempo de ejecución sin parámetros.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.ActivatableAttribute.#ctor(System.UInt32,Windows.Foundation.Metadata.Platform)">
      <summary>Indica que la clase en tiempo de ejecución se puede activar sin parámetros, comenzando en una versión determinada de una plataforma determinada.</summary>
      <param name="version">Versión mínima de la plataforma que puede activar la clase en tiempo de ejecución sin parámetros.</param>
      <param name="platform">Plataforma que puede activar la clase en tiempo de ejecución sin parámetros.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.AllowForWebAttribute">
      <summary>Permite a los desarrolladores exponer un objeto de Plataforma universal de Windows nativo (UWP) como un parámetro global en el contexto del documento de nivel superior dentro de un WebView. Para que un objeto Plataforma universal de Windows (UWP) se proyecte, debe implementar IAgileObject y estar decorado con el atributo AllowForWebAttribute.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.AllowForWebAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.AllowMultipleAttribute">
      <summary>Indica que se pueden aplicar varias instancias de un atributo personalizado a un destino.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.AllowMultipleAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.ApiContractAttribute">
      <summary>Especifica que el tipo representa un contrato de API.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.ApiContractAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.ApiInformation">
      <summary>Permite detectar si un miembro especificado, un tipo o un contrato de API está presente para que pueda realizar llamadas de API de forma segura a través de una variedad de dispositivos.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent(System.String,System.UInt16)">
      <summary>Devuelve true o false para indicar si el contrato de la API con el nombre especificado y el número de versión principal está presente.</summary>
      <param name="contractName">Nombre del contrato de la API.</param>
      <param name="majorVersion">Número de versión principal del contrato de la API.</param>
      <returns>* * True * * si el contrato de API especificado está presente; en caso contrario, * * false * *.</returns>
    </member>
    <member name="M:Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent(System.String,System.UInt16,System.UInt16)">
      <summary>Devuelve true o false para indicar si el contrato de la API con el nombre especificado y el número de versión principal y secundaria está presente.</summary>
      <param name="contractName">Nombre del contrato de la API.</param>
      <param name="majorVersion">Número de versión principal del contrato de la API.</param>
      <param name="minorVersion">Número de versión secundaria del contrato de la API.</param>
      <returns>* * True * * si el contrato de API especificado está presente; en caso contrario, * * false * *.</returns>
    </member>
    <member name="M:Windows.Foundation.Metadata.ApiInformation.IsEnumNamedValuePresent(System.String,System.String)">
      <summary>Devuelve true o false para indicar si una constante con nombre especificada está presente para una enumeración especificada.</summary>
      <param name="enumTypeName">Nombre completo del espacio de nombres del tipo.</param>
      <param name="valueName">Nombre de la constante.</param>
      <returns>* * True * * si la constante especificada está presente; en caso contrario, * * false * *.</returns>
    </member>
    <member name="M:Windows.Foundation.Metadata.ApiInformation.IsEventPresent(System.String,System.String)">
      <summary>Devuelve true o false para indicar si un evento especificado está presente para un tipo especificado.</summary>
      <param name="typeName">Nombre completo del espacio de nombres del tipo.</param>
      <param name="eventName">Nombre del evento.</param>
      <returns>* * True * * si el evento especificado está presente para el tipo; en caso contrario, * * false * *.</returns>
    </member>
    <member name="M:Windows.Foundation.Metadata.ApiInformation.IsMethodPresent(System.String,System.String)">
      <summary>Devuelve true o false para indicar si un método especificado está presente para un tipo especificado.</summary>
      <param name="typeName">Nombre completo del espacio de nombres del tipo.</param>
      <param name="methodName">Nombre del método.</param>
      <returns>* * True * * si el método especificado está presente para el tipo; en caso contrario, * * false * *.</returns>
    </member>
    <member name="M:Windows.Foundation.Metadata.ApiInformation.IsMethodPresent(System.String,System.String,System.UInt32)">
      <summary>Devuelve true o false para indicar si una sobrecarga de método especificada con el número de parámetros de entrada especificado está presente para un tipo especificado.</summary>
      <param name="typeName">Nombre completo del espacio de nombres del tipo.</param>
      <param name="methodName">Nombre del método.</param>
      <param name="inputParameterCount">El número de parámetros de entrada para la sobrecarga.</param>
      <returns>* * True * * si el método especificado está presente para el tipo; en caso contrario, * * false * *.</returns>
    </member>
    <member name="M:Windows.Foundation.Metadata.ApiInformation.IsPropertyPresent(System.String,System.String)">
      <summary>Devuelve true o false para indicar si una propiedad especificada (grabable o de solo lectura) está presente para un tipo especificado.</summary>
      <param name="typeName">Nombre completo del espacio de nombres del tipo.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
      <returns>* * True * * si la propiedad especificada está presente para el tipo; en caso contrario, * * false * *.</returns>
    </member>
    <member name="M:Windows.Foundation.Metadata.ApiInformation.IsReadOnlyPropertyPresent(System.String,System.String)">
      <summary>Devuelve true o false para indicar si una propiedad de solo lectura especificada está presente para un tipo especificado.</summary>
      <param name="typeName">Nombre completo del espacio de nombres del tipo.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
      <returns>* * True * * si la propiedad especificada está presente para el tipo; en caso contrario, * * false * *.</returns>
    </member>
    <member name="M:Windows.Foundation.Metadata.ApiInformation.IsTypePresent(System.String)">
      <summary>Devuelve true o false para indicar si un tipo especificado está presente.</summary>
      <param name="typeName">Nombre completo del espacio de nombres del tipo.</param>
      <returns>* * True * * si el tipo especificado está presente; en caso contrario, * * false * *.</returns>
    </member>
    <member name="M:Windows.Foundation.Metadata.ApiInformation.IsWriteablePropertyPresent(System.String,System.String)">
      <summary>Devuelve true o false para indicar si una propiedad de escritura especificada está presente para un tipo especificado.</summary>
      <param name="typeName">Nombre completo del espacio de nombres del tipo.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
      <returns>* * True * * si la propiedad especificada está presente para el tipo; en caso contrario, * * false * *.</returns>
    </member>
    <member name="T:Windows.Foundation.Metadata.AttributeNameAttribute">
      <summary>Indica el nombre del atributo.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.AttributeNameAttribute.#ctor(System.String)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="A_0">Uno o varios de los valores de enumeración.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.AttributeTargets">
      <summary>Especifica la construcción de programación a la que se aplica un atributo.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.AttributeTargets.All">
      <summary>El atributo se aplica a todas las construcciones de programación.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.AttributeTargets.ApiContract">
      <summary>El atributo se aplica a un contrato de API.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.AttributeTargets.Delegate">
      <summary>El atributo se aplica a un delegado.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.AttributeTargets.Enum">
      <summary>El atributo se aplica a una enumeración.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.AttributeTargets.Event">
      <summary>El atributo se aplica a un evento.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.AttributeTargets.Field">
      <summary>El atributo se aplica a un campo.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.AttributeTargets.Interface">
      <summary>El atributo se aplica a una interfaz.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.AttributeTargets.InterfaceImpl">
      <summary>El atributo se aplica a una implementación de una interfaz.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.AttributeTargets.Method">
      <summary>El atributo se aplica a un método.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.AttributeTargets.Parameter">
      <summary>El atributo se aplica a un parámetro.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.AttributeTargets.Property">
      <summary>El atributo se aplica a una propiedad.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.AttributeTargets.RuntimeClass">
      <summary>El atributo se aplica a una clase en tiempo de ejecución.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.AttributeTargets.Struct">
      <summary>El atributo se aplica a un struct.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.AttributeUsageAttribute">
      <summary>Especifica el uso de otro atributo.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.AttributeUsageAttribute.#ctor(Windows.Foundation.Metadata.AttributeTargets)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="A_0">Uno o varios de los valores de enumeración.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.ComposableAttribute">
      <summary>Indica cómo se compone un elemento de programación.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.ComposableAttribute.#ctor(System.Type,Windows.Foundation.Metadata.CompositionType,System.UInt32)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="type">Tipo del objeto de generador que se usa para crear el elemento de programación.</param>
      <param name="compositionType">Uno de los valores de la enumeración.</param>
      <param name="version">Versión.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.ComposableAttribute.#ctor(System.Type,Windows.Foundation.Metadata.CompositionType,System.UInt32,System.String)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="type">Tipo del objeto de generador que se usa para crear el elemento de programación.</param>
      <param name="compositionType">Uno de los valores de la enumeración.</param>
      <param name="version">Versión del contrato de API en el que se agregó el generador de composición al generador de activación de la clase en tiempo de ejecución.</param>
      <param name="contract">Cadena que representa el tipo del contrato de API que implementa la clase.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.ComposableAttribute.#ctor(System.Type,Windows.Foundation.Metadata.CompositionType,System.UInt32,Windows.Foundation.Metadata.Platform)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="type">Tipo del objeto de generador que se usa para crear el elemento de programación.</param>
      <param name="compositionType">Uno de los valores de la enumeración.</param>
      <param name="version">Versión.</param>
      <param name="platform">Valor de la enumeración. El valor predeterminado es * * Windows * *.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.CompositionType">
      <summary>Especifica la visibilidad de un elemento de programación para el que se aplica el atributo de composición.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.CompositionType.Protected">
      <summary>Indica que el acceso al elemento de programación está limitado a otros elementos de la clase contenedora o a los tipos derivados de la clase contenedora.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.CompositionType.Public">
      <summary>Indica que el acceso al elemento de programación no está restringido.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.ContractVersionAttribute">
      <summary>Indica la versión del contrato de la API.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.ContractVersionAttribute.#ctor(System.String,System.UInt32)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="contract">Tipo que se va a asociar al contrato de la API.</param>
      <param name="version">Versión del contrato de la API.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.ContractVersionAttribute.#ctor(System.Type,System.UInt32)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="contract">Tipo que se va a asociar al contrato de la API.</param>
      <param name="version">Versión del contrato de la API.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.ContractVersionAttribute.#ctor(System.UInt32)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="version">Versión del contrato de la API.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.DefaultAttribute">
      <summary>Indica la interfaz predeterminada para una clase en tiempo de ejecución.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.DefaultAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.DefaultOverloadAttribute">
      <summary>Indica que un método es el método de sobrecarga predeterminado. Este atributo debe usarse con OverloadAttribute.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.DefaultOverloadAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.DeprecatedAttribute">
      <summary>Indica que un tipo o miembro debe marcarse como desusado en los metadatos. Los compiladores y otras herramientas de desarrollo pueden leer este atributo y proporcionar información al usuario sobre el tipo de degradación y posibles alternativas.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.DeprecatedAttribute.#ctor(System.String,Windows.Foundation.Metadata.DeprecationType,System.UInt32)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="message">Un mensaje de cadena que pueden usar los compiladores y otras herramientas de desarrollo para explicar el desuso y proporcionar los nombres de cadena de la API alternativa.</param>
      <param name="type">Valor de la enumeración. El valor predeterminado es * * deprecated * *.</param>
      <param name="version">Constante que indica la versión a la que se aplica el desuso.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.DeprecatedAttribute.#ctor(System.String,Windows.Foundation.Metadata.DeprecationType,System.UInt32,System.String)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="message">Un mensaje de cadena que pueden usar los compiladores y otras herramientas de desarrollo para explicar el desuso y proporcionar los nombres de cadena de la API alternativa.</param>
      <param name="type">Valor de la enumeración. El valor predeterminado es * * deprecated * *.</param>
      <param name="version">Constante que indica la versión a la que se aplica el desuso.</param>
      <param name="contract">Cadena que representa el tipo del contrato de API que implementa el tipo o miembro en desuso.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.DeprecatedAttribute.#ctor(System.String,Windows.Foundation.Metadata.DeprecationType,System.UInt32,Windows.Foundation.Metadata.Platform)">
      <summary>Crea e inicializa una nueva instancia del atributo, incluido un valor de plataforma para el destino.</summary>
      <param name="message">Un mensaje de cadena que pueden usar los compiladores y otras herramientas de desarrollo para explicar el desuso y proporcionar los nombres de cadena de la API alternativa.</param>
      <param name="type">Valor de la enumeración. El valor predeterminado es * * deprecated * *.</param>
      <param name="version">Constante que indica la versión a la que se aplica el desuso.</param>
      <param name="platform">Valor de la enumeración. El valor predeterminado es * * Windows * *.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.DeprecationType">
      <summary>Indica un desuso como * * deprecated * * o * * Remove * *.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.DeprecationType.Deprecate">
      <summary>Los compiladores y otras herramientas deben tratar la entidad como desusada. Este es el valor predeterminado.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.DeprecationType.Remove">
      <summary>Los compiladores y otras herramientas deben tratar la entidad como quitada.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.DualApiPartitionAttribute">
      <summary>Indica que el tipo se admite en las aplicaciones de escritorio y en las aplicaciones para UWP.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.DualApiPartitionAttribute.version">
      <summary>
      </summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.DualApiPartitionAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.ExclusiveToAttribute">
      <summary>Indica que el tipo especificado es exclusivo de este tipo.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.ExclusiveToAttribute.#ctor(System.Type)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="typeName">Nombre del tipo.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.ExperimentalAttribute">
      <summary>Indica que un tipo o miembro debe marcarse como experimental en los metadatos y, por tanto, puede que no esté presente en la versión final de un SDK o biblioteca.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.ExperimentalAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.FastAbiAttribute">
      <summary>Indica si el tipo admite la ABI rápida.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.FastAbiAttribute.#ctor(System.UInt32)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="version">El número de versión de ABI.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.FastAbiAttribute.#ctor(System.UInt32,System.String)">
      <summary>
      </summary>
      <param name="version">El número de versión de ABI.</param>
      <param name="contractName">ContractName de ABI.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.FastAbiAttribute.#ctor(System.UInt32,Windows.Foundation.Metadata.Platform)">
      <summary>
      </summary>
      <param name="version">El número de versión de ABI.</param>
      <param name="platform">El nombre de la plataforma ABI.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.FeatureAttribute">
      <summary>Expresa el estado de la característica Windows Runtime asociada a un tipo de Windows Runtime.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.FeatureAttribute.#ctor(Windows.Foundation.Metadata.FeatureStage,System.Boolean)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="featureStage">Especifica si la característica con nombre está habilitada o deshabilitada.</param>
      <param name="validInAllBranches">Valor booleano que indica si la característica con nombre es válida en todas las ramas.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.FeatureStage">
      <summary>Valores que indican si una característica de Windows está habilitada o deshabilitada.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.FeatureStage.AlwaysDisabled">
      <summary>La característica está siempre deshabilitada.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.FeatureStage.AlwaysEnabled">
      <summary>La característica está siempre habilitada.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.FeatureStage.DisabledByDefault">
      <summary>La característica está deshabilitada de forma predeterminada.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.FeatureStage.EnabledByDefault">
      <summary>La característica está habilitada de forma predeterminada.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.GCPressureAmount">
      <summary>Solo para uso interno de Microsoft.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.GCPressureAmount.High">
      <summary>Más de 100 000 de presión de memoria.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.GCPressureAmount.Low">
      <summary>Menos de 10 000 veces de presión de memoria.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.GCPressureAmount.Medium">
      <summary>Entre 10 y 100 000 de presión de memoria.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.GCPressureAttribute">
      <summary>Solo para uso interno de Microsoft.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.GCPressureAttribute.amount">
      <summary>
      </summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.GCPressureAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.GuidAttribute">
      <summary>Indica el GUID de la interfaz o el delegado.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.GuidAttribute.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="a">Los primeros 4 bytes del GUID.</param>
      <param name="b">Los 2 bytes siguientes del GUID.</param>
      <param name="c">Los 2 bytes siguientes del GUID.</param>
      <param name="d">Siguiente byte del GUID.</param>
      <param name="e">Siguiente byte del GUID.</param>
      <param name="f">Siguiente byte del GUID.</param>
      <param name="g">Siguiente byte del GUID.</param>
      <param name="h">Siguiente byte del GUID.</param>
      <param name="i">Siguiente byte del GUID.</param>
      <param name="j">Siguiente byte del GUID.</param>
      <param name="k">Siguiente byte del GUID.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.HasVariantAttribute">
      <summary>Indica que el tipo es una instancia de una variante * * IInspectable * *. Se aplica a clases en tiempo de ejecución, interfaces e interfaces parametrizadas.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.HasVariantAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.InternalAttribute">
      <summary>Indica que un tipo o miembro debe marcarse en los metadatos como internos del SDK o el marco de trabajo, y solo para el consumo por parte de los componentes del sistema.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.InternalAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.LengthIsAttribute">
      <summary>Indica el número de elementos de matriz.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.LengthIsAttribute.#ctor(System.Int32)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="indexLengthParameter">El número de elementos de matriz.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute">
      <summary>Indica el comportamiento de serialización de un componente de Windows Runtime.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.MarshalingBehaviorAttribute.#ctor(Windows.Foundation.Metadata.MarshalingType)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="behavior">Uno de los valores de la enumeración.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.MarshalingType">
      <summary>Especifica el tipo de cálculo de referencias para la clase.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.MarshalingType.Agile">
      <summary>La clase calcula las referencias y no calcula las referencias al mismo valor de puntero en todas las interfaces.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.MarshalingType.InvalidMarshaling">
      <summary>No se pueden calcular las referencias de la clase.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.MarshalingType.None">
      <summary>La clase impide el cálculo de referencias en todas las interfaces.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.MarshalingType.Standard">
      <summary>La clase no implementa IMarshal o reenvía a CoGetStandardMarshal en todas las interfaces.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.MetadataMarshalAttribute">
      <summary>Indica que las herramientas de deben crear una entrada para una interfaz cuando se crea un paquete de aplicación.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.MetadataMarshalAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.MuseAttribute">
      <summary>Indica que una clase en tiempo de ejecución es compatible con las aplicaciones UWP que son exploradores Web.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.MuseAttribute.Version">
      <summary>
      </summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.MuseAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.NoExceptionAttribute">
      <summary>Indica si el tipo genera excepciones.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.NoExceptionAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.OverloadAttribute">
      <summary>Identifica el método como una sobrecarga en un lenguaje que admite sobrecargas.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.OverloadAttribute.#ctor(System.String)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="method">Nombre que representa el método en el lenguaje proyectado.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.OverridableAttribute">
      <summary>Indica que la interfaz contiene métodos reemplazables.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.OverridableAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.Platform">
      <summary>Especifica las plataformas en las que se debe admitir un tipo especificado, tal y como se usa en Windows Runtime atributos y metadatos.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.Platform.Windows">
      <summary>Para que lo usen los metadatos de Windows.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.Platform.WindowsPhone">
      <summary>Para su uso con metadatos de Windows Phone.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.PlatformAttribute">
      <summary>Declara la plataforma en la que se debe admitir un tipo, cuando se producen metadatos específicos de la plataforma.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.PlatformAttribute.#ctor(Windows.Foundation.Metadata.Platform)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="platform">Valor de la enumeración. El valor predeterminado es * * Windows * *.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.PreviousContractVersionAttribute">
      <summary>Indica que el tipo estaba asociado previamente a un contrato de API diferente.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.PreviousContractVersionAttribute.#ctor(System.String,System.UInt32,System.UInt32)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="contract">Nombre del contrato anterior.</param>
      <param name="versionLow">La primera versión del contrato anterior al que se asoció el tipo.</param>
      <param name="versionHigh">Última versión del contrato anterior al que se asoció el tipo.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.PreviousContractVersionAttribute.#ctor(System.String,System.UInt32,System.UInt32,System.String)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="contract">Nombre del contrato anterior.</param>
      <param name="versionLow">La primera versión del contrato anterior al que se asoció el tipo.</param>
      <param name="versionHigh">Última versión del contrato anterior al que se asoció el tipo.</param>
      <param name="newContract">Nombre del nuevo contrato al que está asociado el tipo.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.ProtectedAttribute">
      <summary>Indica que la interfaz contiene métodos protegidos.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.ProtectedAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.RangeAttribute">
      <summary>Indica las restricciones de intervalo numérico para el valor de un campo de datos.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.RangeAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Crea e inicializa una nueva instancia del atributo con los valores mínimo y máximo especificados.</summary>
      <param name="minValue">El valor mínimo permitido.</param>
      <param name="maxValue">El valor máximo permitido.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.RemoteAsyncAttribute">
      <summary>Indica que una interfaz se puede entregar utilizando una forma asincrónica del patrón Async.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.RemoteAsyncAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.StaticAttribute">
      <summary>Indica una interfaz que solo contiene métodos estáticos.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.StaticAttribute.#ctor(System.Type,System.UInt32)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="type">Tipo que contiene los métodos estáticos para la clase en tiempo de ejecución.</param>
      <param name="version">Versión en la que se agregó la interfaz estática.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.StaticAttribute.#ctor(System.Type,System.UInt32,System.String)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="type">Tipo que contiene los métodos estáticos para la clase en tiempo de ejecución.</param>
      <param name="version">La versión del contrato de API en la que se agregó el generador estático al generador de activación de la clase en tiempo de ejecución.</param>
      <param name="contractName">Cadena que representa el tipo del contrato de API que implementa la clase.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.StaticAttribute.#ctor(System.Type,System.UInt32,Windows.Foundation.Metadata.Platform)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="type">Tipo que contiene los métodos estáticos para la clase en tiempo de ejecución.</param>
      <param name="version">Versión en la que se agregó la interfaz estática.</param>
      <param name="platform">Valor de la enumeración. El valor predeterminado es * * Windows * *.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.ThreadingAttribute">
      <summary>Indica el modelo de subprocesos de un componente de Windows Runtime.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.ThreadingAttribute.#ctor(Windows.Foundation.Metadata.ThreadingModel)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="model">Uno de los valores de la enumeración.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.ThreadingModel">
      <summary>Especifica el modelo de subprocesos.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.ThreadingModel.Both">
      <summary>Apartamentos de un solo subproceso y multiproceso.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.ThreadingModel.InvalidThreading">
      <summary>No se aplica ningún modelo de subprocesos válido.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.ThreadingModel.MTA">
      <summary>Apartamento multiproceso.</summary>
    </member>
    <member name="F:Windows.Foundation.Metadata.ThreadingModel.STA">
      <summary>Contenedor uniproceso.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.VariantAttribute">
      <summary>Indica que el elemento es una instancia de una variante * * IInspectable * *. Se aplica a los parámetros de método, las propiedades y los valores devueltos de los tipos.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.VariantAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
    <member name="T:Windows.Foundation.Metadata.VersionAttribute">
      <summary>Indica la versión del tipo.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.VersionAttribute.#ctor(System.UInt32)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="version">Versión que se va a asociar al objeto marcado.</param>
    </member>
    <member name="M:Windows.Foundation.Metadata.VersionAttribute.#ctor(System.UInt32,Windows.Foundation.Metadata.Platform)">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
      <param name="version">Versión que se va a asociar al objeto marcado.</param>
      <param name="platform">Valor de la enumeración. El valor predeterminado es * * Windows * *.</param>
    </member>
    <member name="T:Windows.Foundation.Metadata.WebHostHiddenAttribute">
      <summary>Identifica el tipo como uno cuya funcionalidad no se proyecta en el idioma de destino especificado.</summary>
    </member>
    <member name="M:Windows.Foundation.Metadata.WebHostHiddenAttribute.#ctor">
      <summary>Crea e inicializa una nueva instancia del atributo.</summary>
    </member>
  </members>
</doc>