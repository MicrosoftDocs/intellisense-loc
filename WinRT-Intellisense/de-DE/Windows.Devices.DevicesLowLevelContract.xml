<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Windows. Devices. deviceslowlevelcontract</name>
  </assembly>
  <members>
    <member name="T:Windows.Devices.DevicesLowLevelContract">
      <summary>
      </summary>
    </member>
    <member name="T:Windows.Devices.ILowLevelDevicesAggregateProvider">
      <summary>Stellt Eigenschaften dar, die allen Geräte Aggregat Anbietern auf niedriger Ebene gemeinsam sind.</summary>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.AdcControllerProvider">
      <summary>Ruft den ADC-Standardanbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird er auf den normalen Treiber/Controller zurückgegriffen.</summary>
      <returns>Der ADC-Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.GpioControllerProvider">
      <summary>Ruft den GPIO-Standardanbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird er auf den normalen Treiber/Controller zurückgegriffen.</summary>
      <returns>Der GPIO-Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.I2cControllerProvider">
      <summary>Ruft den Standard-I &lt; sup &gt; 2 &lt;/sup &gt; C-Anbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird er auf den normalen Treiber/Controller zurückgegriffen.</summary>
      <returns>Der &lt; sup &gt; 2 &lt;/sup &gt; C-Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.PwmControllerProvider">
      <summary>Ruft den PWM-Standardanbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird er auf den normalen Treiber/Controller zurückgegriffen.</summary>
      <returns>Der PWM-Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.SpiControllerProvider">
      <summary>Ruft den Standard-SPI-Anbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird er auf den normalen Treiber/Controller zurückgegriffen.</summary>
      <returns>Der SPI-Anbieter.</returns>
    </member>
    <member name="T:Windows.Devices.LowLevelDevicesAggregateProvider">
      <summary>Stellt die Low-Level-Busgeräte Anbieter dar. Diese Klasse ermöglicht den Zugriff auf den Standardanbieter für die Buscontroller auf niedriger Ebene.</summary>
    </member>
    <member name="M:Windows.Devices.LowLevelDevicesAggregateProvider.#ctor(Windows.Devices.Adc.Provider.IAdcControllerProvider,Windows.Devices.Pwm.Provider.IPwmControllerProvider,Windows.Devices.Gpio.Provider.IGpioControllerProvider,Windows.Devices.I2c.Provider.II2cControllerProvider,Windows.Devices.Spi.Provider.ISpiControllerProvider)">
      <summary>Erstellt eine Instanz von lowleveldebug Provider und legt die angegebenen Anbieter als Standardwerte für den jeweiligen Bus fest.</summary>
      <param name="adc">Der ADC-Anbieter.</param>
      <param name="pwm">Der PWM-Anbieter.</param>
      <param name="gpio">Der GPIO-Anbieter.</param>
      <param name="i2c">Der &lt; sup &gt; 2 &lt;/sup &gt; C-Anbieter.</param>
      <param name="spi">Der SPI-Anbieter.</param>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.AdcControllerProvider">
      <summary>Ruft den ADC-Standardanbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird er auf den normalen Treiber/Controller zurückgegriffen.</summary>
      <returns>Der ADC-Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.GpioControllerProvider">
      <summary>Ruft den GPIO-Standardanbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird er auf den normalen Treiber/Controller zurückgegriffen.</summary>
      <returns>Der GPIO-Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.I2cControllerProvider">
      <summary>Ruft den Standard-I &lt; sup &gt; 2 &lt;/sup &gt; C-Anbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird er auf den normalen Treiber/Controller zurückgegriffen.</summary>
      <returns>Der &lt; sup &gt; 2 &lt;/sup &gt; C-Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.PwmControllerProvider">
      <summary>Ruft den PWM-Standardanbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird er auf den normalen Treiber/Controller zurückgegriffen.</summary>
      <returns>Der PWM-Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.SpiControllerProvider">
      <summary>Ruft den Standard-SPI-Anbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird er auf den normalen Treiber/Controller zurückgegriffen.</summary>
      <returns>Der SPI-Anbieter.</returns>
    </member>
    <member name="T:Windows.Devices.LowLevelDevicesController">
      <summary>Stellt einen Bus-Geräte Controller auf niedriger Ebene und den zugehörigen Anbieter dar.</summary>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesController.DefaultProvider">
      <summary>Ruft den Standardanbieter für den Controller ab oder legt ihn fest.</summary>
      <returns>Der Geräte Aggregat Anbieter.</returns>
    </member>
    <member name="T:Windows.Devices.Adc.AdcChannel">
      <summary>Stellt einen einzelnen ADC-Kanal dar.</summary>
    </member>
    <member name="P:Windows.Devices.Adc.AdcChannel.Controller">
      <summary>Ruft den ADC-Controller für diesen Channel ab.</summary>
      <returns>Der ADC-Controller.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcChannel.Close">
      <summary>Schließt die Verbindung auf diesem Kanal, sodass Sie verfügbar ist, um von anderen Benutzern geöffnet zu werden.</summary>
    </member>
    <member name="M:Windows.Devices.Adc.AdcChannel.ReadRatio">
      <summary>Liest den Wert als Prozentsatz des maximal möglichen Werts für diesen Controller.</summary>
      <returns>Der Wert als Prozentsatz des maximalen Werts.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcChannel.ReadValue">
      <summary>Liest die digitale Darstellung des analogen Werts aus dem ADC.</summary>
      <returns>Der digitale Wert.</returns>
    </member>
    <member name="T:Windows.Devices.Adc.AdcChannelMode">
      <summary>Beschreibt die channelmodi, die vom ADC-Controller für die Eingabe verwendet werden können.</summary>
    </member>
    <member name="F:Windows.Devices.Adc.AdcChannelMode.Differential">
      <summary>Unterschied zwischen zwei Pins.</summary>
    </member>
    <member name="F:Windows.Devices.Adc.AdcChannelMode.SingleEnded">
      <summary>Einfacher Wert einer bestimmten PIN.</summary>
    </member>
    <member name="T:Windows.Devices.Adc.AdcController">
      <summary>Stellt einen ADC-Controller im System dar.</summary>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.ChannelCount">
      <summary>Die Anzahl der Kanäle, die auf dem ADC-Controller verfügbar sind.</summary>
      <returns>Anzahl der Kanäle.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.ChannelMode">
      <summary>Ruft den Kanalmodus für den ADC-Controller ab oder legt ihn fest.</summary>
      <returns>Der ADC-Kanalmodus.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.MaxValue">
      <summary>Ruft den maximalen Wert ab, den der Controller melden kann.</summary>
      <returns>Der Maximalwert.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.MinValue">
      <summary>Der minimale Wert, den der Controller melden kann.</summary>
      <returns>Der Minimalwert.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.ResolutionInBits">
      <summary>Ruft die Auflösung des Controllers als Anzahl von Bits ab, die er besitzt. Wenn wir beispielsweise über einen 10-Bit-ADC verfügen, bedeutet dies, dass er 1024 (2 ^ 10) diskrete Ebenen erkennen kann.</summary>
      <returns>Die Anzahl der Bits, die der ADC-Controller hat.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcController.GetControllersAsync(Windows.Devices.Adc.Provider.IAdcProvider)">
      <summary>Ruft alle Controller ab, die asynchron mit dem System verbunden sind.</summary>
      <param name="provider">Der ADC-Anbieter für die Controller im System.</param>
      <returns>Wenn die Methode erfolgreich abgeschlossen wird, gibt Sie eine Liste von Werten zurück, die die im System verfügbaren Controller darstellen.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcController.GetDefaultAsync">
      <summary>Ruft den ADC-Standard Controller im System ab.</summary>
      <returns>Der ADC-Standard Controller im System oder NULL, wenn das System über keinen ADC-Controller verfügt.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcController.IsChannelModeSupported(Windows.Devices.Adc.AdcChannelMode)">
      <summary>Überprüft, ob der angegebene Kanalmodus vom Controller unterstützt wird.</summary>
      <param name="channelMode">Der Kanalmodus.</param>
      <returns>True, wenn der angegebene Kanalmodus unterstützt wird; andernfalls false.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcController.OpenChannel(System.Int32)">
      <summary>Öffnet eine Verbindung mit dem angegebenen ADC-Kanal.</summary>
      <param name="channelNumber">Der Kanal, mit dem eine Verbindung hergestellt wird.</param>
      <returns>Der ADC-Kanal.</returns>
    </member>
    <member name="T:Windows.Devices.Adc.Provider.IAdcControllerProvider">
      <summary>Stellt Eigenschaften und Methoden dar, die allen ADC-Controllern gemeinsam sind.</summary>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.ChannelCount">
      <summary>Ruft die Anzahl der in verfügbaren Kanäle für den Controller ab.</summary>
      <returns>Anzahl der Kanäle.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.ChannelMode">
      <summary>Ruft den Controller Kanalmodus ab oder legt ihn fest.</summary>
      <returns>Der Kanalmodus.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.MaxValue">
      <summary>Ruft den maximalen Wert ab, den der Controller zurückgeben kann.</summary>
      <returns>Der Maximalwert.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.MinValue">
      <summary>Ruft den Minimalwert ab, den der Controller zurückgeben kann.</summary>
      <returns>Der Minimalwert.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.ResolutionInBits">
      <summary>Ruft die Auflösung des Controllers als Anzahl von Bits ab, die er besitzt.</summary>
      <returns>Die Auflösung als Anzahl von Bits.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcControllerProvider.AcquireChannel(System.Int32)">
      <summary>Ruft eine Verbindung mit dem angegebenen Channel ab.</summary>
      <param name="channel">Der Kanal, mit dem eine Verbindung hergestellt wird.</param>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcControllerProvider.IsChannelModeSupported(Windows.Devices.Adc.Provider.ProviderAdcChannelMode)">
      <summary>Bestimmt, ob der angegebene Kanalmodus vom Controller unterstützt wird.</summary>
      <param name="channelMode">Der fragliche Channelmodus.</param>
      <returns>True, wenn der angegebene Kanalmodus unterstützt wird; andernfalls false.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcControllerProvider.ReadValue(System.Int32)">
      <summary>Ruft die digitale Darstellung des analogen Werts auf dem angegebenen Kanal ab.</summary>
      <param name="channelNumber">Der Kanal, von dem gelesen werden soll.</param>
      <returns>Die digitale Darstellung des analogen Werts.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcControllerProvider.ReleaseChannel(System.Int32)">
      <summary>Gibt die Kanal Verbindung frei und öffnet den Kanal, der von anderen Benutzern verwendet werden kann.</summary>
      <param name="channel">Der Kanal, mit dem die Verbindung geschlossen werden soll.</param>
    </member>
    <member name="T:Windows.Devices.Adc.Provider.IAdcProvider">
      <summary>Stellt Methoden dar, die allen ADC-Anbietern gemeinsam sind.</summary>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcProvider.GetControllers">
      <summary>Ruft die ADC-Controller ab, die auf dem System verfügbar sind.</summary>
      <returns>Wenn diese Methode abgeschlossen ist, wird eine Liste aller verfügbaren Controller im System zurückgegeben.</returns>
    </member>
    <member name="T:Windows.Devices.Adc.Provider.ProviderAdcChannelMode">
      <summary>Bestimmt, wie der PIN-Wert dargestellt wird. Die Implementierung von Besonderheiten wird vom Anbieter festgelegt, daher kann die differenzielle Abweichung vollständig oder Pseudo differenziell sein.</summary>
    </member>
    <member name="F:Windows.Devices.Adc.Provider.ProviderAdcChannelMode.Differential">
      <summary>Unterschied zwischen zwei Pins.</summary>
    </member>
    <member name="F:Windows.Devices.Adc.Provider.ProviderAdcChannelMode.SingleEnded">
      <summary>Einfacher Wert einer bestimmten PIN.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangeCount">
      <summary>Stellt eine nahezu gleichzeitige Stichprobe der Häufigkeit dar, mit der ein Pin den Wert geändert hat, und der Zeit, zu der dieser Zähler entnommen wurde. Diese Struktur kann verwendet werden, um die Anzahl der PIN-Wertänderungen über einen bestimmten Zeitraum festzulegen.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangeCount.Count">
      <summary>Gibt an, wie oft der Übergang der durch gpiochangecounter. Polarität angegebenen Polarität in der PIN aufgetreten ist.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangeCount.RelativeTime">
      <summary>Der Zeitpunkt, zu dem die Stichprobenentnahme durchgeführt wurde. Die Zeit wird als Stichprobe in der Nähe der Anzahl angezeigt (aber nicht gleichzeitig). Dieser Zeitstempel kann verwendet werden, um die verstrichene Zeit zwischen zwei gpiochangecount-Datensätzen zu bestimmen. Sie entspricht keiner absoluten oder Systemzeit.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangeCounter">
      <summary>Zählt Änderungen einer angegebenen Polarität in einer allgemeinen e/a-PIN (GPIO).</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.#ctor(Windows.Devices.Gpio.GpioPin)">
      <summary>Erstellt einen neuen gpiochangecounter, der der angegebenen PIN zugeordnet ist. Einem PIN kann jeweils nur ein einzelner gpiochangecounter zugeordnet werden.</summary>
      <param name="pin">Die PIN, auf der Änderungen gezählt werden sollen. Diese PIN muss im exklusiven Modus geöffnet und keinem anderen gpiochangecounter zugeordnet werden.</param>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeCounter.IsStarted">
      <summary>Ruft ab, ob die PIN-Änderungs Zählung derzeit aktiv ist.</summary>
      <returns>
      </returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeCounter.Polarity">
      <summary>Ruft die Polarität von Übergängen ab, die gezählt werden, oder legt Sie fest. Die Polarität kann nur geändert werden, wenn die PIN-Zählung nicht gestartet wird.</summary>
      <returns>
      </returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Close">
      <summary>Schließt den Änderungs-Counter und trennt ihn von seiner PIN.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Read">
      <summary>Liest die aktuelle Anzahl der Polarität-Änderungen. Bevor das zählen gestartet wurde, wird 0 zurückgegeben.</summary>
      <returns>Eine gpiochangecount-Struktur, die eine Anzahl und einen zugeordneten Zeitstempel enthält.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Reset">
      <summary>Setzt die Anzahl auf 0 zurück und gibt die vorherige Anzahl zurück.</summary>
      <returns>Eine gpiochangecount-Struktur, die eine Anzahl und einen zugeordneten Zeitstempel enthält.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Start">
      <summary>Startet das zählen von Änderungen in der PIN-Polarität. Diese Methode kann nur aufgerufen werden, wenn die Änderungs Zählung noch nicht aktiv ist.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Stop">
      <summary>Beendet das zählen von Änderungen in der PIN-Polarität. Diese Methode kann nur aufgerufen werden, wenn die Änderungs Zählung derzeit aktiv ist.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangePolarity">
      <summary>Stellt die Polarität von Änderungen dar, die für die zugeordnete Aktion relevant sind.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangePolarity.Both">
      <summary>Der Übergang von "niedrig" zu "hoch" und "hoch" sollte die zugeordnete Aktion auslöst.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangePolarity.Falling">
      <summary>Durch Übergänge von hoch zu niedrig sollte die zugehörige Aktion auslöst werden.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangePolarity.Rising">
      <summary>Der Übergang von "niedrig" zu "hoch" sollte die zugehörige Aktion auslöst</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangeReader">
      <summary>Stellt einen freigegebenen Zirkel Puffer zwischen Kernel Modus und Benutzermodus dar, in dem Zeitstempel mit hoher Auflösung platziert werden, wenn sich der Wert einer allgemeinen e/a-PIN (GPIO) ändert.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.#ctor(Windows.Devices.Gpio.GpioPin)">
      <summary>Erstellt ein neues gpiochangereader, das mit der angegebenen Pin verknüpft ist. Nur ein einzelner gpiochangereader kann einer PIN zu einem bestimmten Zeitpunkt zugeordnet werden.</summary>
      <param name="pin">Die PIN, auf der Änderungen gelesen werden sollen. Die PIN muss im exklusiven Modus geöffnet und keinem anderen Änderungs Reader zugeordnet werden.</param>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.#ctor(Windows.Devices.Gpio.GpioPin,System.Int32)">
      <summary>Erstellt ein neues gpiochangereader, das der angegebenen PIN zugeordnet ist, und mit der angegebenen minimalen Kapazität für Änderungs Datensätze. Nur ein einzelner gpiochangereader kann einer PIN zu einem bestimmten Zeitpunkt zugeordnet werden.</summary>
      <param name="pin">Die PIN, auf der Änderungen gelesen werden sollen. Die PIN muss im exklusiven Modus geöffnet und keinem anderen Änderungs Reader zugeordnet werden.</param>
      <param name="minCapacity">Die Mindestanzahl von Änderungs Datensätzen, die der Reader enthalten muss.</param>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.Capacity">
      <summary>Ruft die maximale Anzahl von Änderungs Datensätzen ab, die der gpiochangereader gleichzeitig speichern kann.</summary>
      <returns>Die maximale Anzahl von Änderungs Datensätzen.</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.IsEmpty">
      <summary>Ruft ab, ob im Reader derzeit NULL Änderungs Datensätze vorhanden sind.</summary>
      <returns>Gibt true zurück, wenn der Reader keine Änderungs Elemente enthält, und andernfalls false.</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.IsOverflowed">
      <summary>Ruft ab, ob ein Versuch, einen Änderungs Daten Satz in den Puffer des Readers zu platzieren, fehlgeschlagen ist, weil der Puffer voll ist.</summary>
      <returns>Gibt "true" zurück, wenn der Platzierungs Versuch nicht erfolgreich war, andernfalls "false".</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.IsStarted">
      <summary>Ruft ab, ob die PIN-Änderungs Aufzeichnung derzeit aktiv ist.</summary>
      <returns>Gibt true zurück, wenn PIN-Änderungen aktuell aufgezeichnet werden, andernfalls false.</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.Length">
      <summary>Ruft die Anzahl der Datensätze ab, die sich derzeit im Änderungs Leser befinden.</summary>
      <returns>Die aktuelle Anzahl der Änderungs Datensätze.</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.Polarity">
      <summary>Ruft die Polarität von Übergängen ab, die aufgezeichnet werden, oder legt diese fest. Die Polarität kann nur geändert werden, wenn die Aufzeichnung der PIN-Änderung nicht gestartet wurde.</summary>
      <returns>Steigender oder fallender. Der standardpolationswert wird nicht mehr angezeigt.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.Clear">
      <summary>Verwirft alle Änderungs Datensätze aus dem Puffer des Readers.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.Close">
      <summary>Schließt den Änderungs Reader, gibt den zugeordneten Speicherpuffer frei und trennt die Zuordnung des Readers zu seiner PIN.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.GetAllItems">
      <summary>Entfernt alle Elemente, die im Puffer des Readers aktuell sind, und gibt diese zurück.</summary>
      <returns>IVector &lt; gpiochangerecord &gt;</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.GetNextItem">
      <summary>Ruft den frühesten eingefügten Änderungs Daten Satz aus dem Puffer des Readers ab und entfernt ihn.</summary>
      <returns>Eine gpiochangerecord-Struktur, die den Zeitstempel und die Polarität (aufsteigend oder sinkt) der Änderung enthält.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.PeekNextItem">
      <summary>Ruft den zuvor eingefügten Änderungs Daten Satz aus dem Puffer des Readers ab, ohne ihn zu entfernen.</summary>
      <returns>Eine gpiochangerecord-Struktur, die den Zeitstempel und die Polarität (aufsteigend oder sinkt) der Änderung enthält.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.Start">
      <summary>Beginnt, Änderungen in der PIN-Polarität aufzuzeichnen. Diese Methode kann nur aufgerufen werden, wenn die Änderungs Aufzeichnung noch nicht aktiv ist.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.Stop">
      <summary>Aufzeichnung von Änderungen in der PIN-Polarität anhalten. Diese Methode kann nur aufgerufen werden, wenn die Änderungs Aufzeichnung derzeit aktiv ist.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.WaitForItemsAsync(System.Int32)">
      <summary>Wartet, bis der Puffer mit mindestens * count * Anzahl von Elementen gefüllt ist. zu diesem Zeitpunkt wird die asynchrone Aktion beendet. Diese Aktion kann abgebrochen werden.</summary>
      <param name="count">Die Anzahl der Elemente, mit denen der Puffer gefüllt werden muss, bevor der asynchrone Vorgang abgeschlossen wird.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangeRecord">
      <summary>Speichert eine relative Zeitangabe für einen allgemeinen e/a-PIN-Wert (GPIO) und gibt an, ob die PIN von niedrig zu hoch oder von hoch zu niedrig gewechselt hat.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangeRecord.Edge">
      <summary>Ein gpiopinedge-Objekt, das dem Übergangstyp entspricht.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangeRecord.RelativeTime">
      <summary>Ein relativer Zeitstempel, der verwendet werden kann, um den Unterschied in der Zeit zwischen zwei Änderungs Datensätzen zu bestimmen. Dieser Zeitstempel entspricht keiner absoluten oder Systemzeit.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioController">
      <summary>Stellt den Standard Controller für allgemeine e/a-Vorgänge (GPIO) für das System dar.</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioController.PinCount">
      <summary>Ruft die Anzahl der Pins auf dem globalen e/a-Controller (GPIO) ab.</summary>
      <returns>Die Anzahl der Pins auf dem GPIO-Controller. Einige Pins sind möglicherweise nicht im Benutzermodus verfügbar. Informationen dazu, wie die PIN-Nummern physischen Pins entsprechen, finden Sie in der Dokumentation zu Ihrem Circuit Board.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.GetControllersAsync(Windows.Devices.Gpio.Provider.IGpioProvider)">
      <summary>Ruft alle Controller ab, die asynchron mit dem System verbunden sind.</summary>
      <param name="provider">Der GPIO-Anbieter für die Controller im System.</param>
      <returns>Wenn die Methode erfolgreich abgeschlossen wird, gibt Sie eine Liste von Werten zurück, die die im System verfügbaren Controller darstellen.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.GetDefault">
      <summary>Ruft den Standard Controller für allgemeine e/a-Vorgänge (GPIO) für das System ab.</summary>
      <returns>Der Standard-GPIO-Controller für das System oder NULL, wenn das System über keinen GPIO-Controller verfügt.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.GetDefaultAsync">
      <summary>Ruft den Standard Controller für allgemeine e/a-Vorgänge (GPIO) für das System ab.</summary>
      <returns>Der Standard-GPIO-Controller für das System oder NULL, wenn das System über keinen GPIO-Controller verfügt.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.OpenPin(System.Int32)">
      <summary>Öffnet eine Verbindung mit der angegebenen GPIO-PIN (General-Purpose I/O) im exklusiven Modus.</summary>
      <param name="pinNumber">Die PIN-Nummer der GPIO-PIN, die Sie öffnen möchten. Die PIN-Nummer muss lauten.</param>
      <returns>Die geöffnete GPIO-PIN.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.OpenPin(System.Int32,Windows.Devices.Gpio.GpioSharingMode)">
      <summary>Öffnet die angegebene allgemeine e/a-PIN (GPIO) im angegebenen Modus.</summary>
      <param name="pinNumber">Die PIN-Nummer der GPIO-PIN, die Sie öffnen möchten. Die PIN-Nummer muss lauten.</param>
      <param name="sharingMode">Der Modus, in dem Sie die GPIO-Pin öffnen möchten, die bestimmt, ob andere Verbindungen mit der PIN geöffnet werden können, während die PIN geöffnet ist.</param>
      <returns>Die geöffnete GPIO-PIN.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.TryOpenPin(System.Int32,Windows.Devices.Gpio.GpioSharingMode,Windows.Devices.Gpio.GpioPin@,Windows.Devices.Gpio.GpioOpenStatus@)">
      <summary>Öffnet die angegebene allgemeine e/a-PIN (GPIO) im angegebenen Modus und Ruft einen Statuswert ab, den Sie verwenden können, um einen Fehler beim programmgesteuerten Öffnen der PIN zu behandeln.</summary>
      <param name="pinNumber">Die PIN-Nummer der GPIO-PIN, die Sie öffnen möchten. Einige Pins sind möglicherweise nicht im Benutzermodus verfügbar. Informationen dazu, wie die PIN-Nummern physischen Pins entsprechen, finden Sie in der Dokumentation zu Ihrem Circuit Board.</param>
      <param name="sharingMode">Der Modus, in dem Sie die GPIO-Pin öffnen möchten, die bestimmt, ob andere Verbindungen mit der PIN geöffnet werden können, während die PIN geöffnet ist.</param>
      <param name="pin">Die geöffnete GPIO-PIN, wenn der Rückgabewert "true" ist. andernfalls NULL.</param>
      <param name="openStatus">Ein Enumerationswert, der angibt, dass der Versuch, die GPIO-PIN zu öffnen, erfolgreich war, oder der Grund, warum der Versuch zum Öffnen der GPIO-Pin fehlgeschlagen ist.</param>
      <returns>True, wenn die Methode die PIN erfolgreich geöffnet hat. andernfalls false.</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioOpenStatus">
      <summary>Beschreibt die möglichen Ergebnisse des Öffnens einer PIN mit der gpiocontroller. tryopenpin-Methode.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.MuxingConflict">
      <summary>Die PIN ist derzeit für eine andere Funktion geöffnet, z. b. * * I2C * *, * * SPI * * oder * * UART * *. Stellen Sie sicher, dass die PIN nicht von einer anderen Funktion verwendet wird.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.PinOpened">
      <summary>Die GPIO-PIN wurde erfolgreich geöffnet.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.PinUnavailable">
      <summary>Die PIN ist vom System reserviert und für apps, die im Benutzermodus ausgeführt werden, nicht verfügbar.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.SharingViolation">
      <summary>Die PIN ist zurzeit in einem nicht kompatiblen Freigabe Modus geöffnet. Zum Beispiel:</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.UnknownError">
      <summary>Die PIN konnte nicht geöffnet werden.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPin">
      <summary>Stellt eine allgemeine e/a-PIN (GPIO) dar.</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioPin.DebounceTimeout">
      <summary>Ruft das debounce-Timeout für die GPIO-PIN (General-Purpose I/O) ab oder legt es fest. Hierbei handelt es sich um ein Intervall, in dem Änderungen am Wert der PIN herausgefiltert werden und keine ValueChanged-Ereignisse generiert werden.</summary>
      <returns>Das debounce-Timeout (vom Typ TimeSpan) für die GPIO-PIN. Wenn die Länge dieses Intervalls 0 beträgt, generieren alle Änderungen am Wert der PIN ValueChanged-Ereignisse.</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioPin.PinNumber">
      <summary>Ruft die PIN-Nummer der allgemeinen e/a-PIN (GPIO) ab.</summary>
      <returns>Die PIN-Nummer der GPIO-PIN.</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioPin.SharingMode">
      <summary>Ruft den Freigabe Modus ab, in dem die allgemeine e/a-PIN (GPIO) geöffnet ist.</summary>
      <returns>Der Freigabe Modus, in dem die GPIO-Pin geöffnet ist.</returns>
    </member>
    <member name="E:Windows.Devices.Gpio.GpioPin.ValueChanged">
      <summary>Tritt auf, wenn sich der Wert der GPIO-PIN (allgemeine e/a) ändert, entweder aufgrund eines externen Stimulus, wenn die PIN als Eingabe konfiguriert ist, oder wenn ein Wert in die PIN geschrieben wird, wenn die PIN als Ausgabe konfiguriert ist.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.Close">
      <summary>Schließt die allgemeine e/a-PIN (GPIO) und gibt die zugeordneten Ressourcen frei.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.GetDriveMode">
      <summary>Ruft den aktuellen Laufwerks Modus für die GPIO-PIN (allgemeine e/a) ab. Der Laufwerks Modus gibt an, ob die PIN als Eingabe oder Ausgabe konfiguriert ist, und bestimmt, wie Werte auf die PIN gesteuert werden.</summary>
      <returns>Ein-Enumerationswert, der den aktuellen Laufwerks Modus für die GPIO-Pin angibt. Der Laufwerks Modus gibt an, ob die PIN als Eingabe oder Ausgabe konfiguriert ist, und bestimmt, wie Werte auf die PIN gesteuert werden.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.IsDriveModeSupported(Windows.Devices.Gpio.GpioPinDriveMode)">
      <summary>Ruft ab, ob die GPIO-PIN (General-Purpose I/O) den angegebenen Laufwerk Modus unterstützt.</summary>
      <param name="driveMode">Der Laufwerks Modus, der auf Unterstützung überprüft werden soll.</param>
      <returns>True, wenn die GPIO-Pin den Laufwerks Modus unterstützt, der von * drivemode * angegeben wird. andernfalls false. Wenn Sie einen Laufwerks Modus angeben, für den diese Methode false zurückgibt, wenn Sie setdrivemode aufrufen, generiert setdrivemode eine Ausnahme.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.Read">
      <summary>Liest den aktuellen Wert der PIN für allgemeine e/a-Vorgänge (GPIO).</summary>
      <returns>Der aktuelle Wert der GPIO-PIN. Wenn die PIN als Ausgabe konfiguriert ist, ist dieser Wert der letzte Wert, der in die PIN geschrieben wurde.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.SetDriveMode(Windows.Devices.Gpio.GpioPinDriveMode)">
      <summary>Legt den Laufwerks Modus der PIN für allgemeine e/a-Vorgänge (GPIO) fest. Der Laufwerks Modus gibt an, ob die PIN als Eingabe oder Ausgabe konfiguriert ist, und bestimmt, wie Werte auf die PIN gesteuert werden.</summary>
      <param name="value">Ein-Enumerationswert, der den für die GPIO-PIN zu verwendenden Laufwerks Modus angibt. Der Laufwerks Modus gibt an, ob die PIN als Eingabe oder Ausgabe konfiguriert ist, und bestimmt, wie Werte auf die PIN gesteuert werden.</param>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.Write(Windows.Devices.Gpio.GpioPinValue)">
      <summary>Steuert den angegebenen Wert nach dem aktuellen Laufwerks Modus für die PIN, wenn die PIN als Ausgabe konfiguriert ist, auf den GPIO-PIN (Universal I/O) und aktualisiert den latchausgabe Wert für die PIN, wenn die PIN als Eingabe konfiguriert ist.</summary>
      <param name="value">Der-Enumerationswert, der in die GPIO-Pin geschrieben werden soll.</param>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPinDriveMode">
      <summary>Beschreibt, ob eine allgemeine e/a-PIN (GPIO) als Eingabe oder Ausgabe konfiguriert ist und wie Werte auf die PIN gesteuert werden.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.Input">
      <summary>Konfiguriert die GPIO-PIN im Gleit Komma Modus mit hoher Impedanz.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.InputPullDown">
      <summary>Konfiguriert die GPIO-Pin als hohe Impedanz mit einem pulldownwiderstand und einem Grund.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.InputPullUp">
      <summary>Konfiguriert die GPIO-Pin als hohe Impedanz mit einem pullabbild-und der Spannungs ladeverbindung (VCC).</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.Output">
      <summary>Konfiguriert die GPIO-PIN im Modus für starke Laufwerke mit geringer Impedanz.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.OutputOpenDrain">
      <summary>Konfiguriert den GPIO im geöffneten Ausgleichs Modus.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.OutputOpenDrainPullUp">
      <summary>Konfiguriert die GPIO-PIN im geöffneten Ausgleichs Modus mit dem Modus für die Änderung der Größe.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.OutputOpenSource">
      <summary>Konfiguriert die GPIO-PIN im Open Collector-Modus.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.OutputOpenSourcePullDown">
      <summary>Konfiguriert die GPIO-PIN im Open Collector-Modus mit einem Pulldownmodus für die Größe.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPinEdge">
      <summary>Beschreibt die möglichen Änderungs Typen, die mit dem Wert der GPIO-PIN (allgemeine e/a) für das GPIOPin. ValueChanged-Ereignis auftreten können.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinEdge.FallingEdge">
      <summary>Der Wert der GPIO-PIN wurde von "hoch" in "niedrig" geändert.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinEdge.RisingEdge">
      <summary>Der Wert der GPIO-PIN wurde von "niedrig" in "hoch" geändert.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPinValue">
      <summary>Beschreibt die möglichen Werte für eine allgemeine e/a-PIN (GPIO).</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinValue.High">
      <summary>Der Wert der GPIO-PIN ist hoch.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinValue.Low">
      <summary>Der Wert der GPIO-PIN ist niedrig.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPinValueChangedEventArgs">
      <summary>Stellt Daten zum GPIOPin. ValueChanged-Ereignis bereit, das auftritt, wenn sich der Wert der GPIO-PIN (allgemeine e/a) ändert, entweder aufgrund eines externen Stimulus, wenn die PIN als Eingabe konfiguriert ist, oder wenn ein Wert in die PIN geschrieben wird, wenn die PIN als eine Ausgabe.</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioPinValueChangedEventArgs.Edge">
      <summary>Ruft den Typ der Änderung ab, die auf den Wert der allgemeinen e/a-PIN (GPIO) für das GPIOPin. ValueChanged-Ereignis aufgetreten ist.</summary>
      <returns>Ein-Enumerationswert, der den Typ der Änderung angibt, die für den Wert der GPIO-PIN für das GPIOPin. ValueChanged-Ereignis aufgetreten ist.</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioSharingMode">
      <summary>Beschreibt die Modi, in denen Sie eine allgemeine e/a-PIN (GPIO) öffnen können. Diese Modi bestimmen, ob andere Verbindungen mit der GPIO-Pin geöffnet werden können, während die PIN geöffnet ist.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioSharingMode.Exclusive">
      <summary>Öffnet die GPIO-Pin exklusiv, sodass keine andere Verbindung mit der PIN geöffnet werden kann.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioSharingMode.SharedReadOnly">
      <summary>Öffnet die GPIO-Pin als freigegeben, sodass andere Verbindungen im * * sharedreadonly * *-Modus für die PIN geöffnet werden können.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.GpioPinProviderValueChangedEventArgs">
      <summary>Stellt Informationen über das igpiopinprovider. ValueChanged-Ereignis bereit.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.GpioPinProviderValueChangedEventArgs.#ctor(Windows.Devices.Gpio.Provider.ProviderGpioPinEdge)">
      <summary>Wandelt die gpiopinprovidervaluechangedeventargs-Klasse mit dem angegebenen Edge-Wert um.</summary>
      <param name="edge">Der gewünschte Pin-Rand.</param>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.GpioPinProviderValueChangedEventArgs.Edge">
      <summary>Ruft den Wert ab, in den sich die PIN geändert hat.</summary>
      <returns>Der PIN-Rand.</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.IGpioControllerProvider">
      <summary>Stellt die Aktionen dar, die allen allgemeinen e/a-Controllern (GPIO) gemeinsam sind.</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.IGpioControllerProvider.PinCount">
      <summary>Ruft die Anzahl der verfügbaren allgemeinen e/a-Pins (GPIO) ab.</summary>
      <returns>Die Anzahl der verfügbaren GPIO-Pins.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioControllerProvider.OpenPinProvider(System.Int32,Windows.Devices.Gpio.Provider.ProviderGpioSharingMode)">
      <summary>Wird geöffnet und gibt den GPIO-Pin-Anbieter (Universal I/O) für eine bestimmte PIN zurück.</summary>
      <param name="pin">Die gewünschte GPIO-PIN-Nummer.</param>
      <param name="sharingMode">Der Freigabe Modus, in dem die PIN geöffnet werden soll.</param>
      <returns>Der GPIO-Pin-Anbieter für die angegebene PIN.</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.IGpioPinProvider">
      <summary>Stellt Aktionen dar, die für allgemeine e/a-PIN-Anbieter (GPIO) üblich sind.</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.IGpioPinProvider.DebounceTimeout">
      <summary>Ruft das debounce-Timeout für die GPIO-PIN (General-Purpose I/O) ab oder legt es fest. Hierbei handelt es sich um ein Intervall, in dem Änderungen am Wert der PIN herausgefiltert werden und keine ValueChanged-Ereignisse generiert werden.</summary>
      <returns>Das debounce-Timeout für die GPIO-PIN, bei dem es sich um ein Intervall handelt, in dem Änderungen am Wert der PIN herausgefiltert und keine ValueChanged-Ereignisse generiert werden. Wenn die Länge dieses Intervalls 0 beträgt, generieren alle Änderungen am Wert der PIN ValueChanged-Ereignisse.</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.IGpioPinProvider.PinNumber">
      <summary>Ruft die PIN-Nummer der allgemeinen e/a-PIN (GPIO) ab.</summary>
      <returns>Die PIN-Nummer der GPIO-PIN.</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.IGpioPinProvider.SharingMode">
      <summary>Ruft den Freigabe Modus ab, in dem die allgemeine e/a-PIN (GPIO) geöffnet ist.</summary>
      <returns>Der Freigabe Modus, in dem die GPIO-Pin geöffnet ist.</returns>
    </member>
    <member name="E:Windows.Devices.Gpio.Provider.IGpioPinProvider.ValueChanged">
      <summary>Das Ereignis, das ausgelöst wird, wenn sich der Wert der PIN geändert hat.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.GetDriveMode">
      <summary>Ruft den zurzeit konfigurierten Laufwerks Modus der PIN ab.</summary>
      <returns>Der Laufwerks Modus der PIN.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.IsDriveModeSupported(Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode)">
      <summary>Bestimmt, ob ein Laufwerks Modus für die PIN unterstützt wird.</summary>
      <param name="driveMode">Der gewünschte Laufwerks Modus.</param>
      <returns>True, wenn der Laufwerks Modus unterstützt wird. andernfalls false.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.Read">
      <summary>Liest den aktuellen Wert der PIN.</summary>
      <returns>Der Wert der PIN.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.SetDriveMode(Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode)">
      <summary>Legt den Laufwerk Modus der PIN fest.</summary>
      <param name="value">Der gewünschte Laufwerks Modus für die PIN.</param>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.Write(Windows.Devices.Gpio.Provider.ProviderGpioPinValue)">
      <summary>Schreibt einen Wert in die PIN.</summary>
      <param name="value">Der zu schreibende Wert.</param>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.IGpioProvider">
      <summary>Stellt Aktionen dar, die für allgemeine e/a-Controller Anbieter (GPIO) üblich sind.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioProvider.GetControllers">
      <summary>Ruft die im System verfügbaren Controller ab.</summary>
      <returns>Eine Liste von Werten, die die im System verfügbaren Controller darstellen.</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode">
      <summary>Beschreibt, ob eine allgemeine e/a-PIN (GPIO) als Eingabe oder Ausgabe konfiguriert ist und wie Werte auf die PIN gesteuert werden.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.Input">
      <summary>Konfiguriert die GPIO-PIN im Gleit Komma Modus mit hoher Impedanz.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.InputPullDown">
      <summary>Konfiguriert die GPIO-Pin als hohe Impedanz mit einem pulldownwiderstand und einem Grund.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.InputPullUp">
      <summary>Konfiguriert die GPIO-Pin als hohe Impedanz mit einem pullabbild-und der Spannungs ladeverbindung (VCC).</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.Output">
      <summary>Konfiguriert die GPIO-PIN im Modus für starke Laufwerke mit geringer Impedanz.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.OutputOpenDrain">
      <summary>Konfiguriert den GPIO im geöffneten Ausgleichs Modus.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.OutputOpenDrainPullUp">
      <summary>Konfiguriert die GPIO-PIN im geöffneten Ausgleichs Modus mit dem Modus für die Änderung der Größe.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.OutputOpenSource">
      <summary>Konfiguriert die GPIO-PIN im Open Collector-Modus.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.OutputOpenSourcePullDown">
      <summary>Konfiguriert die GPIO-PIN im Open Collector-Modus mit einem Pulldownmodus für die Größe.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.ProviderGpioPinEdge">
      <summary>Beschreibt die möglichen Änderungs Typen, die mit dem Wert der GPIO-PIN (General-Purpose I/O) auftreten können.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinEdge.FallingEdge">
      <summary>Der sinkende Rand oder, wenn der Wert von "hoch" zu "niedrig" wechselt.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinEdge.RisingEdge">
      <summary>Der steigende Rand oder, wenn der Wert von "niedrig" zu "hoch" wechselt.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.ProviderGpioPinValue">
      <summary>Beschreibt die möglichen Werte für eine allgemeine e/a-PIN (GPIO).</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinValue.High">
      <summary>Der Wert der GPIO-PIN ist hoch.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinValue.Low">
      <summary>Der Wert der GPIO-PIN ist niedrig.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.ProviderGpioSharingMode">
      <summary>Beschreibt die Modi, in denen Sie eine allgemeine e/a-PIN (GPIO) öffnen können. Diese Modi bestimmen, ob andere Verbindungen mit der GPIO-Pin geöffnet werden können, während die PIN geöffnet ist.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioSharingMode.Exclusive">
      <summary>Öffnet die GPIO-Pin exklusiv, sodass keine andere Verbindung mit der PIN geöffnet werden kann.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioSharingMode.SharedReadOnly">
      <summary>Öffnet die GPIO-Pin als freigegeben, sodass andere Verbindungen im * * sharedreadonly * *-Modus für die PIN geöffnet werden können. Nur Vorgänge, die den Zustand der PIN nicht ändern, können ausgeführt werden.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.I2cBusSpeed">
      <summary>Beschreibt die Busgeschwindigkeiten, die für das Herstellen einer Verbindung mit einer Verbund Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) verfügbar sind. Die Busgeschwindigkeit ist die Häufigkeit, mit der die I &lt; sup &gt; 2 &lt;/sup &gt; C-Bus beim Zugriff auf das Gerät angezeigt wird.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cBusSpeed.FastMode">
      <summary>Eine schnelle Geschwindigkeit von 400 kHz.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cBusSpeed.StandardMode">
      <summary>Die Standardgeschwindigkeit von 100 Kilohertz (kHz). Diese Geschwindigkeit ist die Standardeinstellung.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.I2cConnectionSettings">
      <summary>Stellt die Verbindungseinstellungen dar, die Sie für eine Verbund Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) verwenden möchten.</summary>
    </member>
    <member name="M:Windows.Devices.I2c.I2cConnectionSettings.#ctor(System.Int32)">
      <summary>Erstellt und Initialisiert eine neue Instanz der I2cConnectionSettings-Klasse für die interintegrierte Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C)-Geräts mit der angegebenen Busadresse unter Verwendung der Standardeinstellungen des Standardmodus für die Busgeschwindigkeit und den exklusiven Freigabe Modus. .</summary>
      <param name="slaveAddress">Die Busadresse des Geräte übergreifenden Verbindungs (I &lt; sup &gt; 2 &lt;/sup &gt; C), auf die die Einstellungen des I2cConnectionSettings angewendet werden sollen. Es wird nur eine 7-Bit-Adressierung unterstützt, daher liegt der gültige Wertebereich zwischen 8 und 119.</param>
    </member>
    <member name="P:Windows.Devices.I2c.I2cConnectionSettings.BusSpeed">
      <summary>Ruft die Busgeschwindigkeit ab, die zum Herstellen einer Verbindung mit einer Verbund Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) verwendet werden soll, oder legt diese fest. Die Busgeschwindigkeit ist die Häufigkeit, mit der die I &lt; sup &gt; 2 &lt;/sup &gt; C-Bus beim Zugriff auf das Gerät angezeigt wird.</summary>
      <returns>Die Busgeschwindigkeit, die für das Herstellen einer Verbindung mit anI &lt; sup &gt; 2 &lt;/sup &gt; C-Gerät verwendet werden soll.</returns>
    </member>
    <member name="P:Windows.Devices.I2c.I2cConnectionSettings.SharingMode">
      <summary>Ruft den Freigabe Modus ab oder legt ihn fest, der zum Herstellen der Verbindung mit der interintegrierten Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C)-Busadresse verwendet wird. Dieser Modus bestimmt, ob andere Verbindungen mit den i &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse geöffnet werden können, während Sie eine Verbindung mit dem i &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse herstellen.</summary>
      <returns>Der Freigabe Modus, der zum Herstellen der Verbindung mit dem I &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse verwendet werden soll.</returns>
    </member>
    <member name="P:Windows.Devices.I2c.I2cConnectionSettings.SlaveAddress">
      <summary>Ruft die Busadresse des Geräts mit integrierter Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) ab oder legt diese fest.</summary>
      <returns>Die Busadresse des I &lt; sup &gt; 2 &lt;/sup &gt; C-Geräts. Es wird nur eine 7-Bit-Adressierung unterstützt, daher liegt der gültige Wertebereich zwischen 8 und 119.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.I2cController">
      <summary>Stellt den I &lt; sup &gt; 2 &lt;/sup &gt; C-Controller für das System dar.</summary>
    </member>
    <member name="M:Windows.Devices.I2c.I2cController.GetControllersAsync(Windows.Devices.I2c.Provider.II2cProvider)">
      <summary>Ruft alle I &lt; sup &gt; 2 &lt;/sup &gt; C-Controller auf dem System ab.</summary>
      <param name="provider">Die I-&lt; sup &gt; 2 &lt;/sup &gt; C-Anbieter für die Controller im System.</param>
      <returns>Wenn die Methode erfolgreich abgeschlossen wird, gibt Sie eine Liste von Werten zurück, die die verfügbaren I &lt; sup &gt; 2 &lt;/sup &gt; C-Controllern im System darstellen.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cController.GetDefaultAsync">
      <summary>Ruft den Standard-I &lt; sup &gt; 2 &lt;/sup &gt; C-Controller im System ab.</summary>
      <returns>Der Standardwert I &lt; sup &gt; 2 &lt;/sup &gt; c-Controller im System oder NULL, wenn das System keine &lt; sup &gt; 2 &lt;/sup &gt; C-Controller hat.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cController.GetDevice(Windows.Devices.I2c.I2cConnectionSettings)">
      <summary>Ruft das &lt; sup &gt; 2 &lt;/sup &gt; C-Gerät mit den angegebenen Einstellungen ab.</summary>
      <param name="settings">Die gewünschten Verbindungseinstellungen.</param>
      <returns>Der I &lt; sup &gt; 2 &lt;/sup &gt; C-Gerät.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.I2cDevice">
      <summary>Stellt einen Kommunikationskanal zu einem Gerät auf einer Verbund Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) dar.</summary>
    </member>
    <member name="P:Windows.Devices.I2c.I2cDevice.ConnectionSettings">
      <summary>Ruft die Verbindungseinstellungen ab, die für die Kommunikation mit dem Gerät mit integrierter Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) verwendet werden.</summary>
      <returns>Die Verbindungseinstellungen, die für die Kommunikation mit dem Gerät mit integrierter Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) verwendet werden.</returns>
    </member>
    <member name="P:Windows.Devices.I2c.I2cDevice.DeviceId">
      <summary>Ruft den Plug &amp; amp; Play-Geräte Bezeichner der interintegrierten schaltkreisverbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) für das Gerät ab.</summary>
      <returns>Die Plug &amp; amp; Play-Geräte-ID der integrierten schaltkreisverbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) für das Gerät.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.Close">
      <summary>Schließt die Verbindung mit dem Gerät mit integrierter Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C).</summary>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.FromIdAsync(System.String,Windows.Devices.I2c.I2cConnectionSettings)">
      <summary>Ruft ein I2cDevice-Objekt mithilfe der angegebenen Verbindungseinstellungen asynchron für den Verbund Controller (I &lt; sup &gt; 2 &lt;/sup &gt; C) ab, der über die angegebene Plug &amp; amp; Play-Gerätekennung verfügt.</summary>
      <param name="deviceId">Die Plug-and-Play-Gerätekennung des I &lt; sup &gt; 2 &lt;/sup &gt; C-buscontrollers, für den Sie ein I2cDevice-Objekt erstellen möchten.</param>
      <param name="settings">Die Verbindungseinstellungen für die Kommunikation mit dem I &lt; sup &gt; 2 &lt;/sup &gt; C-Buscontroller, der von * DeviceID * angegeben wird.</param>
      <returns>Ein asynchroner Vorgang, der das I2cDevice-Objekt zurückgibt.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.GetDeviceSelector">
      <summary>Ruft eine Zeichenfolge für die Erweiterte Abfrage Syntax (AQS) für die gesamte integrierte schaltkreisverbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) auf dem System ab. Sie können diese Zeichenfolge mit der DeviceInformation. findallasync-Methode verwenden, um DeviceInformation-Objekte für diese Buscontroller zu erhalten.</summary>
      <returns>Eine AQS-Zeichenfolge für alle I-&lt; sup &gt; 2 &lt;/sup &gt; C-Buscontroller im System, die Sie mit der DeviceInformation. findallasync-Methode zum Aufrufen von DeviceInformation-Objekten für diese Buscontroller verwenden können.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.GetDeviceSelector(System.String)">
      <summary>Ruft eine Zeichenfolge für die Erweiterte Abfrage Syntax (AQS) für die Verbindung mit der integrierten Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) ab, die über den angegebenen anzeigen Amen verfügt. Sie können diese Zeichenfolge mit der DeviceInformation. findallasync-Methode verwenden, um ein DeviceInformation-Objekt für diesen Bus zu erhalten.</summary>
      <param name="friendlyName">Ein Anzeige Name für die bestimmte I &lt; sup &gt; 2 &lt;/sup &gt; C-Bus auf einer bestimmten Hardwareplattform, für die Sie die AQS-Zeichenfolge erhalten möchten.</param>
      <returns>Eine AQS-Zeichenfolge für den I &lt; sup &gt; 2 &lt;/sup &gt; C Bus, der * FriendlyName * angibt, den Sie mit der DeviceInformation. findallasync-Methode verwenden können, um ein DeviceInformation-Objekt für diesen Bus zu erhalten.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.Read(System.Byte[])">
      <summary>Hiermit werden Daten aus der Verbund Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C), in der das Gerät mit dem angegebenen Puffer verbunden ist, gelesen.</summary>
      <param name="buffer">Der Puffer, in den die Daten aus dem I &lt; sup &gt; 2 &lt;/sup &gt; C-Bus gelesen werden sollen. Die Länge des Puffers bestimmt, wie viele Daten vom Gerät angefordert werden müssen.</param>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.ReadPartial(System.Byte[])">
      <summary>Liest Daten aus der interintegrierten Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C), in der das Gerät mit dem angegebenen Puffer verbunden ist, und gibt Informationen über den Erfolg des Vorgangs zurück, den Sie für die Fehlerbehandlung verwenden können.</summary>
      <param name="buffer">Der Puffer, in den die Daten aus dem I &lt; sup &gt; 2 &lt;/sup &gt; C-Bus gelesen werden sollen. Die Länge des Puffers bestimmt, wie viele Daten vom Gerät angefordert werden müssen.</param>
      <returns>Eine-Struktur, die Informationen über den Erfolg des Lesevorgangs und die tatsächliche Anzahl von Bytes enthält, die der Vorgang in den Puffer eingelesen hat.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.Write(System.Byte[])">
      <summary>Schreibt Daten auf der Grundlage der im I2cConnectionSetting s-Objekt angegebenen Busadresse, mit der Sie das I2cDevice-Objekt erstellt haben, in die Verbindung zwischen integrierter Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C), an der das Gerät angeschlossen ist.</summary>
      <param name="buffer">Ein Puffer, der die Daten enthält, die Sie in das Gerät I &lt; sup &gt; 2 &lt;/sup &gt; C schreiben möchten. Diese Daten dürfen nicht die Busadresse enthalten.</param>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.WritePartial(System.Byte[])">
      <summary>Schreibt Daten in die Verbindung zwischen integrierter Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C), an der das Gerät angeschlossen ist, und gibt Informationen über den Erfolg des Vorgangs zurück, den Sie für die Fehlerbehandlung verwenden können.</summary>
      <param name="buffer">Ein Puffer, der die Daten enthält, die Sie in das Gerät I &lt; sup &gt; 2 &lt;/sup &gt; C schreiben möchten. Diese Daten dürfen nicht die Busadresse enthalten.</param>
      <returns>Eine-Struktur, die Informationen über den Erfolg des Schreibvorgangs und die tatsächliche Anzahl der Bytes enthält, die der Vorgang in den Puffer geschrieben hat.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.WriteRead(System.Byte[],System.Byte[])">
      <summary>Führt eine atomarische Operation zum Schreiben von Daten in den und anschließend zum Lesen von Daten aus der interintegrierten Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C), in der das Gerät verbunden ist, und sendet eine Neustart Bedingung zwischen Schreib-und Lesevorgängen.</summary>
      <param name="writeBuffer">Ein Puffer, der die Daten enthält, die Sie in das Gerät I &lt; sup &gt; 2 &lt;/sup &gt; C schreiben möchten. Diese Daten dürfen nicht die Busadresse enthalten.</param>
      <param name="readBuffer">Der Puffer, in den die Daten aus dem I &lt; sup &gt; 2 &lt;/sup &gt; C-Bus gelesen werden sollen. Die Länge des Puffers bestimmt, wie viele Daten vom Gerät angefordert werden müssen.</param>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.WriteReadPartial(System.Byte[],System.Byte[])">
      <summary>Führt eine atomarische Operation zum Schreiben von Daten in den und anschließend zum Lesen von Daten aus der interintegrierten Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C), in der das Gerät verbunden ist, und gibt Informationen über den Erfolg des Vorgangs zurück, den Sie für die Fehlerbehandlung verwenden können.</summary>
      <param name="writeBuffer">Ein Puffer, der die Daten enthält, die Sie in das Gerät I &lt; sup &gt; 2 &lt;/sup &gt; C schreiben möchten. Diese Daten dürfen nicht die Busadresse enthalten.</param>
      <param name="readBuffer">Der Puffer, in den die Daten aus dem I &lt; sup &gt; 2 &lt;/sup &gt; C-Bus gelesen werden sollen. Die Länge des Puffers bestimmt, wie viele Daten vom Gerät angefordert werden müssen.</param>
      <returns>Eine-Struktur, die Informationen darüber enthält, ob die Lese-und Schreib Teile des Vorgangs erfolgreich waren und die Summe der tatsächlichen Anzahl von Bytes, die der Vorgang geschrieben hat, und die tatsächliche Anzahl der vom Vorgang gelesenen Bytes.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.I2cSharingMode">
      <summary>Beschreibt die Modi, in denen Sie eine Verbindung mit einer vernetzten Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) herstellen können. Diese Modi bestimmen, ob andere Verbindungen mit den i &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse geöffnet werden können, während Sie mit der e &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse verbunden sind.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cSharingMode.Exclusive">
      <summary>Stellt eine Verbindung mit dem i &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse exklusiv her, sodass keine andere Verbindung mit der i &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse hergestellt werden kann, während Sie mit der Verbindung bleiben. Dieser Modus ist der Standardmodus.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cSharingMode.Shared">
      <summary>Stellt eine Verbindung mit dem i &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse im freigegebenen Modus her, sodass andere Verbindungen mit den i &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse hergestellt werden können, während Sie mit der Verbindung bleiben.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.I2cTransferResult">
      <summary>Stellt Informationen darüber bereit, ob die Daten, die von der Methode "Read Partial", "Write-Partial" oder "Write adpartial" ausgeführt wurden, erfolgreich ausgeführt wurden und wie viele Bytes von der Methode übertragen wurden.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferResult.BytesTransferred">
      <summary>Die tatsächliche Anzahl der Bytes, die der Vorgang tatsächlich übertragen hat. In der folgenden Tabelle wird beschrieben, was dieser Wert für die einzelnen Methoden darstellt.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferResult.Status">
      <summary>Ein Enumerationswert, der angibt, ob der Lese-oder Schreibvorgang die vollständige Anzahl der von der Methode angeforderten Bytes übertragen hat, oder den Grund, warum die vollständige Übertragung nicht erfolgreich war. Für "schreibeadpartial" gibt der Wert an, ob die Daten für Schreib-und Lesevorgänge vollständig übertragen wurden.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.I2cTransferStatus">
      <summary>Beschreibt, ob die Daten übertragen werden, die mit der Methode "Read Partial", "Write-Partial" oder "Beschreib tereadpartial" erfolgreich ausgeführt wurden, oder ob die Übertragung erfolgreich war.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.ClockStretchTimeout">
      <summary>Die Übertragung ist fehlgeschlagen, weil die Uhr zu lange gestreckt wird. Stellen Sie sicher, dass die zeitaschlange nicht niedrig gehalten wird.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.FullTransfer">
      <summary>Die Daten wurden vollständig übertragen. Für "schreibeadpartial" wurden die Daten für Schreib-und Lesevorgänge vollständig übertragen.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.PartialTransfer">
      <summary>Das &lt; sup &gt; 2 &lt;/sup &gt; C-Gerät hat die Datenübertragung negativ bestätigt, bevor alle Daten übertragen wurden.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.SlaveAddressNotAcknowledged">
      <summary>Die Busadresse wurde nicht bestätigt.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.UnknownError">
      <summary>Die Übertragung ist aus einem unbekannten Grund fehlgeschlagen.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.II2cDeviceStatics">
      <summary>Bietet Möglichkeiten zum Öffnen eines Kommunikationskanals für ein Gerät in einer Verbund Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C).</summary>
    </member>
    <member name="M:Windows.Devices.I2c.II2cDeviceStatics.FromIdAsync(System.String,Windows.Devices.I2c.I2cConnectionSettings)">
      <summary>Ruft ein I2cDevice-Objekt mithilfe der angegebenen Verbindungseinstellungen asynchron für den Verbund Controller (I &lt; sup &gt; 2 &lt;/sup &gt; C) ab, der über die angegebene Plug &amp; amp; Play-Gerätekennung verfügt.</summary>
      <param name="deviceId">Die Plug-and-Play-Gerätekennung des I &lt; sup &gt; 2 &lt;/sup &gt; C-buscontrollers, für den Sie ein I2cDevice-Objekt erstellen möchten.</param>
      <param name="settings">Die Verbindungseinstellungen für die Kommunikation mit dem I &lt; sup &gt; 2 &lt;/sup &gt; C-Buscontroller, der von * DeviceID * angegeben wird.</param>
      <returns>Ein asynchroner Vorgang, der das I2cDevice-Objekt zurückgibt.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.II2cDeviceStatics.GetDeviceSelector">
      <summary>Ruft eine Zeichenfolge für die Erweiterte Abfrage Syntax (AQS) für die gesamte integrierte schaltkreisverbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) auf dem System ab. Sie können diese Zeichenfolge mit der DeviceInformation. findallasync-Methode verwenden, um DeviceInformation-Objekte für diese Buscontroller zu erhalten.</summary>
      <returns>Eine AQS-Zeichenfolge für alle I-&lt; sup &gt; 2 &lt;/sup &gt; C-Buscontroller im System, die Sie mit der DeviceInformation. findallasync-Methode zum Aufrufen von DeviceInformation-Objekten für diese Buscontroller verwenden können.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.II2cDeviceStatics.GetDeviceSelector(System.String)">
      <summary>Ruft eine Zeichenfolge für die Erweiterte Abfrage Syntax (AQS) für die Verbindung mit der integrierten Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) ab, die über den angegebenen anzeigen Amen verfügt. Sie können diese Zeichenfolge mit der DeviceInformation. findallasync-Methode verwenden, um ein DeviceInformation-Objekt für diesen Bus zu erhalten.</summary>
      <param name="friendlyName">Ein Anzeige Name für die bestimmte I &lt; sup &gt; 2 &lt;/sup &gt; C-Bus auf einer bestimmten Hardwareplattform, für die Sie die AQS-Zeichenfolge erhalten möchten.</param>
      <returns>Eine AQS-Zeichenfolge für den I &lt; sup &gt; 2 &lt;/sup &gt; C Bus, der * FriendlyName * angibt, den Sie mit der DeviceInformation. findallasync-Methode verwenden können, um ein DeviceInformation-Objekt für diesen Bus zu erhalten.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.II2cControllerProvider">
      <summary>Stellt Eigenschaften und Methoden dar, die alle I &lt; sup &gt; 2 &lt;/sup &gt; C-Controllern gemeinsam haben.</summary>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cControllerProvider.GetDeviceProvider(Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings)">
      <summary>Ruft den I &lt; sup &gt; 2 &lt;/sup &gt; C-Geräte Anbieter mit den angegebenen Einstellungen ab.</summary>
      <param name="settings">Die gewünschten Einstellungen.</param>
      <returns>Der &lt; sup &gt; 2 &lt;/sup &gt; C-Geräte Anbieter.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.II2cDeviceProvider">
      <summary>Stellt Methoden dar, die alle I &lt; sup &gt; 2 &lt;/sup &gt; C-Geräte Anbietern gemeinsam haben.</summary>
    </member>
    <member name="P:Windows.Devices.I2c.Provider.II2cDeviceProvider.DeviceId">
      <summary>Ruft den Plug &amp; amp; Play-Geräte Bezeichner der interintegrierten schaltkreisverbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) für das Gerät ab.</summary>
      <returns>Die Plug &amp; amp; Play-Geräte-ID der integrierten schaltkreisverbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) für das Gerät.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.Read(System.Byte[])">
      <summary>Hiermit werden Daten aus der Verbund Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C), in der das Gerät mit dem angegebenen Puffer verbunden ist, gelesen.</summary>
      <param name="buffer">Der Puffer, in den die Daten aus dem I &lt; sup &gt; 2 &lt;/sup &gt; C-Bus gelesen werden sollen. Die Länge des Puffers bestimmt, wie viele Daten vom Gerät angefordert werden müssen.</param>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.ReadPartial(System.Byte[])">
      <summary>Liest Daten aus der interintegrierten Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C), in der das Gerät mit dem angegebenen Puffer verbunden ist, und gibt Informationen über den Erfolg des Vorgangs zurück, den Sie für die Fehlerbehandlung verwenden können.</summary>
      <param name="buffer">Der Puffer, in den die Daten aus dem I &lt; sup &gt; 2 &lt;/sup &gt; C-Bus gelesen werden sollen. Die Länge des Puffers bestimmt, wie viele Daten vom Gerät angefordert werden müssen.</param>
      <returns>Eine-Struktur, die Informationen über den Erfolg des Lesevorgangs und die tatsächliche Anzahl von Bytes enthält, die der Vorgang in den Puffer eingelesen hat.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.Write(System.Byte[])">
      <summary>Schreibt Daten in die Verbindung zwischen integrierter Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C), an der das Gerät angeschlossen ist.</summary>
      <param name="buffer">Ein Puffer, der die Daten enthält, die Sie in das Gerät I &lt; sup &gt; 2 &lt;/sup &gt; C schreiben möchten. Diese Daten dürfen nicht die Busadresse enthalten.</param>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.WritePartial(System.Byte[])">
      <summary>Schreibt Daten in die Verbindung zwischen integrierter Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C), an der das Gerät angeschlossen ist, und gibt Informationen über den Erfolg des Vorgangs zurück, den Sie für die Fehlerbehandlung verwenden können.</summary>
      <param name="buffer">Ein Puffer, der die Daten enthält, die Sie in das Gerät I &lt; sup &gt; 2 &lt;/sup &gt; C schreiben möchten. Diese Daten dürfen nicht die Busadresse enthalten.</param>
      <returns>Eine-Struktur, die Informationen über den Erfolg des Schreibvorgangs und die tatsächliche Anzahl der Bytes enthält, die der Vorgang in den Puffer geschrieben hat.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.WriteRead(System.Byte[],System.Byte[])">
      <summary>Führt eine atomarische Operation zum Schreiben von Daten in den und anschließend zum Lesen von Daten aus der interintegrierten Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C), in der das Gerät verbunden ist, und sendet eine Neustart Bedingung zwischen Schreib-und Lesevorgängen.</summary>
      <param name="writeBuffer">Ein Puffer, der die Daten enthält, die Sie in das Gerät I &lt; sup &gt; 2 &lt;/sup &gt; C schreiben möchten. Diese Daten dürfen nicht die Busadresse enthalten.</param>
      <param name="readBuffer">Der Puffer, in den die Daten aus dem I &lt; sup &gt; 2 &lt;/sup &gt; C-Bus gelesen werden sollen. Die Länge des Puffers bestimmt, wie viele Daten vom Gerät angefordert werden müssen.</param>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.WriteReadPartial(System.Byte[],System.Byte[])">
      <summary>Führt eine atomarische Operation zum Schreiben von Daten in den und anschließend zum Lesen von Daten aus der interintegrierten Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C), in der das Gerät verbunden ist, und gibt Informationen über den Erfolg des Vorgangs zurück, den Sie für die Fehlerbehandlung verwenden können.</summary>
      <param name="writeBuffer">Ein Puffer, der die Daten enthält, die Sie in das Gerät I &lt; sup &gt; 2 &lt;/sup &gt; C schreiben möchten. Diese Daten dürfen nicht die Busadresse enthalten.</param>
      <param name="readBuffer">Der Puffer, in den die Daten aus dem I &lt; sup &gt; 2 &lt;/sup &gt; C-Bus gelesen werden sollen. Die Länge des Puffers bestimmt, wie viele Daten vom Gerät angefordert werden müssen.</param>
      <returns>Eine-Struktur, die Informationen darüber enthält, ob die Lese-und Schreib Teile des Vorgangs erfolgreich waren und die Summe der tatsächlichen Anzahl von Bytes, die der Vorgang geschrieben hat, und die tatsächliche Anzahl der vom Vorgang gelesenen Bytes.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.II2cProvider">
      <summary>Stellt Aktionen dar, die für alle I &lt; sup &gt; 2 &lt;/sup &gt; C-Anbieter üblich sind.</summary>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cProvider.GetControllersAsync">
      <summary>Ruft alle I &lt; sup &gt; 2 &lt;/sup &gt; C-Controller auf dem System ab.</summary>
      <returns>Wenn die Methode erfolgreich abgeschlossen wird, gibt Sie eine Liste von Werten zurück, die die verfügbaren I &lt; sup &gt; 2 &lt;/sup &gt; C-Controllern im System darstellen.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cBusSpeed">
      <summary>Beschreibt die Busgeschwindigkeiten, die für das Herstellen einer Verbindung mit einer Verbund Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) verfügbar sind. Die Busgeschwindigkeit ist die Häufigkeit, mit der die I &lt; sup &gt; 2 &lt;/sup &gt; C-Bus beim Zugriff auf das Gerät angezeigt wird.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cBusSpeed.FastMode">
      <summary>Eine schnelle Geschwindigkeit von 400 kHz.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cBusSpeed.StandardMode">
      <summary>Die Standardgeschwindigkeit von 100 Kilohertz (kHz). Diese Geschwindigkeit ist die Standardeinstellung.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings">
      <summary>Stellt die Verbindungseinstellungen dar, die Sie für eine Verbund Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) verwenden möchten.</summary>
    </member>
    <member name="P:Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings.BusSpeed">
      <summary>Ruft die Busgeschwindigkeit ab, die zum Herstellen einer Verbindung mit einer Verbund Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) verwendet werden soll, oder legt diese fest. Die Busgeschwindigkeit ist die Häufigkeit, mit der die I &lt; sup &gt; 2 &lt;/sup &gt; C-Bus beim Zugriff auf das Gerät angezeigt wird.</summary>
      <returns>Die Busgeschwindigkeit, die für das Herstellen einer Verbindung mit einem I &lt; sup &gt; 2 &lt;/sup &gt; C-Gerät verwendet werden soll.</returns>
    </member>
    <member name="P:Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings.SharingMode">
      <summary>Ruft den Freigabe Modus ab oder legt ihn fest, der zum Herstellen der Verbindung mit der interintegrierten Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C)-Busadresse verwendet wird. Dieser Modus bestimmt, ob andere Verbindungen mit den i &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse geöffnet werden können, während Sie eine Verbindung mit dem i &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse herstellen.</summary>
      <returns>Der Freigabe Modus, der zum Herstellen der Verbindung mit dem I &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse verwendet werden soll.</returns>
    </member>
    <member name="P:Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings.SlaveAddress">
      <summary>Ruft die Busadresse des Geräts mit integrierter Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) ab oder legt diese fest.</summary>
      <returns>Die Busadresse des I &lt; sup &gt; 2 &lt;/sup &gt; C-Geräts. Es wird nur eine 7-Bit-Adressierung unterstützt, daher liegt der gültige Wertebereich zwischen 8 und 119.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cSharingMode">
      <summary>Beschreibt die Modi, in denen Sie eine Verbindung mit einer vernetzten Verbindung (I &lt; sup &gt; 2 &lt;/sup &gt; C) herstellen können. Diese Modi bestimmen, ob andere Verbindungen mit den i &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse geöffnet werden können, während Sie mit der e &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse verbunden sind.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cSharingMode.Exclusive">
      <summary>Stellt eine Verbindung mit dem i &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse exklusiv her, sodass keine andere Verbindung mit der i &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse hergestellt werden kann, während Sie mit der Verbindung bleiben. Dieser Modus ist der Standardmodus.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cSharingMode.Shared">
      <summary>Stellt eine Verbindung mit dem i &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse im freigegebenen Modus her, sodass andere Verbindungen mit den i &lt; sup &gt; 2 &lt;/sup &gt; C-Busadresse hergestellt werden können, während Sie mit der Verbindung bleiben.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cTransferResult">
      <summary>Stellt Informationen darüber bereit, ob die Daten, die von der Methode "Read Partial", "Write-Partial" oder "Write adpartial" ausgeführt wurden, erfolgreich ausgeführt wurden und wie viele Bytes von der Methode übertragen wurden.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferResult.BytesTransferred">
      <summary>Die tatsächliche Anzahl der Bytes, die der Vorgang tatsächlich übertragen hat. In der folgenden Tabelle wird beschrieben, was dieser Wert für die einzelnen Methoden darstellt.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferResult.Status">
      <summary>Ein Enumerationswert, der angibt, ob der Lese-oder Schreibvorgang die vollständige Anzahl der von der Methode angeforderten Bytes übertragen hat, oder den Grund, warum die vollständige Übertragung nicht erfolgreich war. Für "schreibeadpartial" gibt der Wert an, ob die Daten für Schreib-und Lesevorgänge vollständig übertragen wurden.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cTransferStatus">
      <summary>Beschreibt, ob die Daten übertragen werden, die mit der Methode "Read Partial", "Write-Partial" oder "Beschreib tereadpartial" erfolgreich ausgeführt wurden, oder ob die Übertragung erfolgreich war.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferStatus.FullTransfer">
      <summary>Die Daten wurden vollständig übertragen. Für "schreibeadpartial" wurden die Daten für Schreib-und Lesevorgänge vollständig übertragen.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferStatus.PartialTransfer">
      <summary>Das &lt; sup &gt; 2 &lt;/sup &gt; C-Gerät hat die Datenübertragung negativ bestätigt, bevor alle Daten übertragen wurden.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferStatus.SlaveAddressNotAcknowledged">
      <summary>Die Busadresse wurde nicht bestätigt.</summary>
    </member>
    <member name="T:Windows.Devices.Pwm.PwmController">
      <summary>Stellt einen PWM-Controller dar, der mit dem System verbunden ist.</summary>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmController.ActualFrequency">
      <summary>Ruft die tatsächliche Häufigkeit der PWM ab.</summary>
      <returns>Die Häufigkeit in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmController.MaxFrequency">
      <summary>Ruft die vom Controller angebotene maximale Frequenz ab.</summary>
      <returns>Die maximale Häufigkeit in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmController.MinFrequency">
      <summary>Ruft die vom Controller angebotene Minimale Frequenz ab.</summary>
      <returns>Die minimale Häufigkeit in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmController.PinCount">
      <summary>Ruft die Anzahl der auf dem System verfügbaren Pins ab.</summary>
      <returns>Die Anzahl der Pins.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.FromIdAsync(System.String)">
      <summary>Initialisiert eine PWM-Controller Instanz auf Grundlage der angegebenen ID für die Geräte-ID.</summary>
      <param name="deviceId">Die erfassten "toviceinformation"-ID.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.GetControllersAsync(Windows.Devices.Pwm.Provider.IPwmProvider)">
      <summary>Ruft asynchron alle Controller im System ab.</summary>
      <param name="provider">Der PWM-Anbieter, der sich auf dem System befindet.</param>
      <returns>Wenn die Methode erfolgreich abgeschlossen wird, gibt Sie eine Liste von Werten zurück, die die im System verfügbaren Controller darstellen.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.GetDefaultAsync">
      <summary>Ruft den PWM-Standard Controller im System ab.</summary>
      <returns>Der Standard-PWM-Controller im System oder NULL, wenn das System über keinen PWM-Controller verfügt.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.GetDeviceSelector">
      <summary>Ruft eine Zeichenfolge für die Erweiterte Abfrage Syntax (AQS) für alle PWM-Controller im System ab. Sie können diese Zeichenfolge mit der DeviceInformation. findallasync-Methode verwenden, um DeviceInformation-Objekte für diese Controller zu erhalten.</summary>
      <returns>
      </returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.GetDeviceSelector(System.String)">
      <summary>Ruft eine Zeichenfolge für die Erweiterte Abfrage Syntax (AQS) für den PWM-Controller ab, der über den angegebenen anzeigen Amen verfügt. Sie können diese Zeichenfolge mit der DeviceInformation. findallasync-Methode verwenden, um DeviceInformation-Objekte für diese Controller zu erhalten.</summary>
      <param name="friendlyName">Ein Anzeige Name für den jeweiligen PWM-Controller, für den Sie die entsprechende AQS-Zeichenfolge erhalten möchten.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.OpenPin(System.Int32)">
      <summary>Öffnet die PIN zur Verwendung.</summary>
      <param name="pinNumber">Die anzuöffnende PIN.</param>
      <returns>Die angeforderte PIN ist jetzt zur Verwendung verfügbar.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.SetDesiredFrequency(System.Double)">
      <summary>Legt die PWM-Häufigkeit fest.</summary>
      <param name="desiredFrequency">Der Wert der gewünschten Häufigkeit in Hz.</param>
      <returns>Die tatsächliche Häufigkeit, die festgelegt wurde. Dabei handelt es sich um die nächstgelegene, vom Anbieter festgelegte Treffer Übereinstimmung.</returns>
    </member>
    <member name="T:Windows.Devices.Pwm.PwmPin">
      <summary>Stellt eine einzelne PWM-PIN im System dar.</summary>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmPin.Controller">
      <summary>Ruft den PWM-Controller ab, der von dieser PIN verwendet wird.</summary>
      <returns>Der Controller.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmPin.IsStarted">
      <summary>Ruft den gestarteten Zustand der PIN ab.</summary>
      <returns>True, wenn die PWM für diese Pin gestartet wurde, andernfalls false.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmPin.Polarity">
      <summary>Ruft die Polarität der PIN ab oder legt Sie fest.</summary>
      <returns>Die PIN-Polarität.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.Close">
      <summary>Schließt die aktuelle Verbindung mit der PIN und macht die PIN verfügbar, damit Sie von anderen geöffnet werden kann.</summary>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.GetActiveDutyCyclePercentage">
      <summary>Ruft den Duty-Cycle-Prozentsatz für diese Pin ab.</summary>
      <returns>Der Prozentsatz des Duty-Cycle zwischen 0,0 und 1,0.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.SetActiveDutyCyclePercentage(System.Double)">
      <summary>Legt den Duty-Cycle-Prozentsatz für diese PIN fest.</summary>
      <param name="dutyCyclePercentage">Der gewünschte Duty-Cycle-Prozentsatz, dargestellt als Wert zwischen 0,0 und 1,0.</param>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.Start">
      <summary>Startet die PWM für diese PIN.</summary>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.Stop">
      <summary>Beendet das PWM-Symbol für diese PIN.</summary>
    </member>
    <member name="T:Windows.Devices.Pwm.PwmPulsePolarity">
      <summary>Beschreibt die Polarität, in der das PWM-Signal beginnen soll.</summary>
    </member>
    <member name="F:Windows.Devices.Pwm.PwmPulsePolarity.ActiveHigh">
      <summary>Konfiguriert das PWM-Signal so, dass es mit dem aktiven hohen Status gestartet wird.</summary>
    </member>
    <member name="F:Windows.Devices.Pwm.PwmPulsePolarity.ActiveLow">
      <summary>Konfiguriert das PWM-Signal so, dass es im aktiven unteren Zustand gestartet wird.</summary>
    </member>
    <member name="T:Windows.Devices.Pwm.Provider.IPwmControllerProvider">
      <summary>Stellt Eigenschaften und Methoden dar, die allen PWM-Controllern gemeinsam sind.</summary>
    </member>
    <member name="P:Windows.Devices.Pwm.Provider.IPwmControllerProvider.ActualFrequency">
      <summary>Ruft die tatsächliche Häufigkeit der PWM ab.</summary>
      <returns>Die Häufigkeit in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.Provider.IPwmControllerProvider.MaxFrequency">
      <summary>Ruft die vom Controller angebotene maximale Frequenz ab.</summary>
      <returns>Die maximale Häufigkeit in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.Provider.IPwmControllerProvider.MinFrequency">
      <summary>Ruft die vom Controller angebotene Minimale Frequenz ab.</summary>
      <returns>Die minimale Häufigkeit in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.Provider.IPwmControllerProvider.PinCount">
      <summary>Ruft die Anzahl der im System verfügbaren PWM-Pins ab.</summary>
      <returns>Die Anzahl der verfügbaren Pins.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.AcquirePin(System.Int32)">
      <summary>Ruft die angegebene PIN ab und öffnet diese Pin zur Verwendung.</summary>
      <param name="pin">Die PIN, mit der eine PWM-Verbindung geöffnet werden soll.</param>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.DisablePin(System.Int32)">
      <summary>Beendet das PWM-Symbol für diese PIN.</summary>
      <param name="pin">Die PIN, an der das PWM-Signal angehalten werden soll.</param>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.EnablePin(System.Int32)">
      <summary>Startet das PWM-Signal für die angegebene PIN.</summary>
      <param name="pin">Die PIN, auf der das PWM-Signal gestartet werden soll.</param>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.ReleasePin(System.Int32)">
      <summary>Gibt die Verbindung mit der angegebenen Pin frei und macht diese PIN für andere verfügbar.</summary>
      <param name="pin">Die an die Freigabe angeheftet.</param>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.SetDesiredFrequency(System.Double)">
      <summary>Legt die gewünschte PWM-Häufigkeit fest.</summary>
      <param name="frequency">Die gewünschte Häufigkeit in Hz.</param>
      <returns>Die tatsächliche PWM-Häufigkeit, nachdem auf den obigen Wert festgelegt wurde. Dabei handelt es sich um die nächstgelegene, vom Anbieter festgelegte Treffer Übereinstimmung.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.SetPulseParameters(System.Int32,System.Double,System.Boolean)">
      <summary>Legt die PWM-Parameter für PIN, Duty Cycle und Polarität fest.</summary>
      <param name="pin">Gibt an, für welche Pin diese Werte gelten.</param>
      <param name="dutyCycle">Der Prozentsatz des Duty-Zyklen mit einem Wert zwischen 0 und 100 (einschließlich).</param>
      <param name="invertPolarity">True, wenn die Polarität der PIN invertiert werden soll, andernfalls false.</param>
    </member>
    <member name="T:Windows.Devices.Pwm.Provider.IPwmProvider">
      <summary>Stellt die Methoden dar, die allen PWM-Anbietern gemeinsam sind.</summary>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmProvider.GetControllers">
      <summary>Ruft die im System verfügbaren Controller ab.</summary>
      <returns>Gibt eine Liste der auf dem System verfügbaren PWM-Controller zurück.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.ISpiDeviceStatics">
      <summary>Stellt SPI-Geräte Statistiken dar, die SPI-Geräten gemeinsam sind.</summary>
    </member>
    <member name="M:Windows.Devices.Spi.ISpiDeviceStatics.FromIdAsync(System.String,Windows.Devices.Spi.SpiConnectionSettings)">
      <summary>Öffnet ein Gerät mit den angegebenen Verbindungseinstellungen.</summary>
      <param name="busId">Die ID des Busses.</param>
      <param name="settings">Die Verbindungseinstellungen.</param>
      <returns>Das SPI-Gerät.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.ISpiDeviceStatics.GetBusInfo(System.String)">
      <summary>Ruft die Informationen zu einem bestimmten Bus ab.</summary>
      <param name="busId">Die ID des Busses.</param>
      <returns>Die angeforderten Businformationen.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.ISpiDeviceStatics.GetDeviceSelector">
      <summary>Ruft alle auf dem System gefundenen SPI-Busse ab.</summary>
      <returns>Zeichenfolge, die alle Busse im System enthält.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.ISpiDeviceStatics.GetDeviceSelector(System.String)">
      <summary>Ruft alle auf dem System gefundenen SPI-Busse ab, die dem Eingabeparameter entsprechen.</summary>
      <param name="friendlyName">Ein Eingabeparameter, der einen identifizierenden Namen für den gewünschten Bus angibt. Dies entspricht in der Regel einem Namen im Schema.</param>
      <returns>Zeichenfolge, die alle Busse enthält, die die Eingabe in den Namen haben.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.SpiBusInfo">
      <summary>Stellt die Informationen zu einem SPI-Bus dar.</summary>
    </member>
    <member name="P:Windows.Devices.Spi.SpiBusInfo.ChipSelectLineCount">
      <summary>Ruft die Anzahl der auf dem Bus verfügbaren Chip Auswahl Zeilen ab.</summary>
      <returns>Anzahl von Chip Select-Zeilen.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiBusInfo.MaxClockFrequency">
      <summary>Maximale Taktfrequenz des Busses.</summary>
      <returns>Der Taktzyklen in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiBusInfo.MinClockFrequency">
      <summary>Minimale Taktfrequenz des Busses.</summary>
      <returns>Der Taktzyklen in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiBusInfo.SupportedDataBitLengths">
      <summary>Ruft die bitlängen ab, die für den Bus zum Übertragen von Daten verwendet werden können.</summary>
      <returns>Die unterstützten Daten Längen.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.SpiConnectionSettings">
      <summary>Stellt die Einstellungen für die Verbindung mit einem spidevice dar.</summary>
    </member>
    <member name="M:Windows.Devices.Spi.SpiConnectionSettings.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz von spiconnectionsettings.</summary>
      <param name="chipSelectLine">Der Chip wählt die Zeile aus, in der die Verbindung hergestellt wird.</param>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.ChipSelectLine">
      <summary>Ruft die Chip Auswahl Linie für die Verbindung mit dem SPI-Gerät ab oder legt Sie fest.</summary>
      <returns>Die Auswahl Linie für den Chip.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.ClockFrequency">
      <summary>Ruft die Taktfrequenz für die Verbindung ab oder legt Sie fest.</summary>
      <returns>Der Wert der Taktfrequenz in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.DataBitLength">
      <summary>Ruft die Bitlänge für Daten in dieser Verbindung ab oder legt Sie fest.</summary>
      <returns>Die Datentyp Länge.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.Mode">
      <summary>Ruft den spimode für diese Verbindung ab oder legt ihn fest.</summary>
      <returns>Der Kommunikationsmodus.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.SharingMode">
      <summary>Ruft den Freigabe Modus für die SPI-Verbindung ab oder legt ihn fest.</summary>
      <returns>Der Freigabe Modus.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.SpiController">
      <summary>Stellt den SPI-Controller im System dar.</summary>
    </member>
    <member name="M:Windows.Devices.Spi.SpiController.GetControllersAsync(Windows.Devices.Spi.Provider.ISpiProvider)">
      <summary>Ruft alle SPI-Controller im System ab.</summary>
      <param name="provider">Der SPI-Anbieter für die Controller im System.</param>
      <returns>Wenn die Methode erfolgreich abgeschlossen wird, gibt Sie eine Liste von Werten zurück, die die verfügbaren SPI-Controller im System darstellen.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiController.GetDefaultAsync">
      <summary>Ruft den SPI-Standard Controller im System ab.</summary>
      <returns>Der Standard-SPI-Controller im System oder NULL, wenn das System über keinen SPI-Controller verfügt.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiController.GetDevice(Windows.Devices.Spi.SpiConnectionSettings)">
      <summary>Ruft das SPI-Gerät mit den angegebenen Einstellungen ab.</summary>
      <param name="settings">Die gewünschten Verbindungseinstellungen.</param>
      <returns>Das SPI-Gerät.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.SpiDevice">
      <summary>Stellt ein Gerät dar, das über den SPI-Bus verbunden ist.</summary>
    </member>
    <member name="P:Windows.Devices.Spi.SpiDevice.ConnectionSettings">
      <summary>Ruft die Verbindungseinstellungen für das Gerät ab.</summary>
      <returns>Die Verbindungseinstellungen.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiDevice.DeviceId">
      <summary>Ruft die eindeutige ID ab, die dem Gerät zugeordnet ist.</summary>
      <returns>Die ID.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.Close">
      <summary>Schließt die Verbindung mit dem Gerät.</summary>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.FromIdAsync(System.String,Windows.Devices.Spi.SpiConnectionSettings)">
      <summary>Öffnet ein Gerät mit den angegebenen Verbindungseinstellungen.</summary>
      <param name="busId">Die ID des Busses.</param>
      <param name="settings">Die Verbindungseinstellungen.</param>
      <returns>Das angeforderte SPI-Gerät.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.GetBusInfo(System.String)">
      <summary>Ruft die Informationen zu einem bestimmten Bus ab.</summary>
      <param name="busId">Die ID des Busses.</param>
      <returns>Die angeforderten Businformationen.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.GetDeviceSelector">
      <summary>Ruft alle auf dem System gefundenen SPI-Busse ab.</summary>
      <returns>Zeichenfolge, die alle im System gefundenen Busse enthält.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.GetDeviceSelector(System.String)">
      <summary>Ruft alle auf dem System gefundenen SPI-Busse ab, die dem Eingabeparameter entsprechen.</summary>
      <param name="friendlyName">Ein Eingabeparameter, der einen identifizierenden Namen für den gewünschten Bus angibt. Dies entspricht in der Regel einem Namen im Schema.</param>
      <returns>Zeichenfolge, die alle Busse enthält, die die Eingabe in den Namen haben.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.Read(System.Byte[])">
      <summary>Liest vom verbundenen Gerät.</summary>
      <param name="buffer">Array mit vom Gerät gelesenen Daten.</param>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.TransferFullDuplex(System.Byte[],System.Byte[])">
      <summary>Übertragen von Daten mithilfe eines vollständigen Duplex Kommunikationssystems Mit Full Duplex können sowohl der Master als auch der Slave gleichzeitig kommunizieren.</summary>
      <param name="writeBuffer">Array, das Daten enthält, die auf das Gerät geschrieben werden sollen.</param>
      <param name="readBuffer">Array mit vom Gerät gelesenen Daten.</param>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.TransferSequential(System.Byte[],System.Byte[])">
      <summary>Daten werden sequenziell auf das Gerät übertragen.</summary>
      <param name="writeBuffer">Array, das Daten enthält, die auf das Gerät geschrieben werden sollen.</param>
      <param name="readBuffer">Array mit vom Gerät gelesenen Daten.</param>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.Write(System.Byte[])">
      <summary>Schreibt auf das verbundene Gerät.</summary>
      <param name="buffer">Array, das die Daten enthält, die auf das Gerät geschrieben werden sollen.</param>
    </member>
    <member name="T:Windows.Devices.Spi.SpiMode">
      <summary>Definiert den SPI-Kommunikationsmodus. Der Kommunikationsmodus definiert den uhrrand, auf dem die Master-Out-Linie ein-/ausschalten, den Master in den Zeilen Beispielen und die Signal Konstante (mit dem Namen SCLK) der signaluhr. Jeder Modus wird mit einem Paar von Parametern namens Clock Polarität (CPOL) und Clock Phase (CPHA) definiert.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiMode.Mode0">
      <summary>CPOL = 0, CPHA = 0.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiMode.Mode1">
      <summary>CPOL = 0, CPHA = 1.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiMode.Mode2">
      <summary>CPOL = 1, CPHA = 0.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiMode.Mode3">
      <summary>CPOL = 1, CPHA = 1.</summary>
    </member>
    <member name="T:Windows.Devices.Spi.SpiSharingMode">
      <summary>Definiert den Freigabe Modus für den SPI-Bus.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiSharingMode.Exclusive">
      <summary>Das SPI-Bussegment ist nicht freigegeben.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiSharingMode.Shared">
      <summary>Der SPI-Bus ist freigegeben.</summary>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ISpiControllerProvider">
      <summary>Stellt Aktionen dar, die alle SPI-Controller gemeinsam haben.</summary>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiControllerProvider.GetDeviceProvider(Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings)">
      <summary>Ruft das SPI-Gerät mit den angegebenen Einstellungen ab.</summary>
      <param name="settings">Die gewünschten Verbindungseinstellungen.</param>
      <returns>Das SPI-Gerät.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ISpiDeviceProvider">
      <summary>Stellt Aktionen dar, die für ein über den SPI-Bus verbundenes Gerät üblich sind.</summary>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ISpiDeviceProvider.ConnectionSettings">
      <summary>Ruft die Verbindungseinstellungen für das Gerät ab.</summary>
      <returns>Die Verbindungseinstellungen.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ISpiDeviceProvider.DeviceId">
      <summary>Ruft die eindeutige ID ab, die dem Gerät zugeordnet ist.</summary>
      <returns>Die Geräte-ID.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiDeviceProvider.Read(System.Byte[])">
      <summary>Liest vom verbundenen Gerät.</summary>
      <param name="buffer">Array mit vom Gerät gelesenen Daten.</param>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiDeviceProvider.TransferFullDuplex(System.Byte[],System.Byte[])">
      <summary>Übertragen von Daten mithilfe eines vollständigen Duplex Kommunikationssystems Mit Full Duplex können sowohl der Master als auch der Slave gleichzeitig kommunizieren.</summary>
      <param name="writeBuffer">Array, das Daten enthält, die auf das Gerät geschrieben werden sollen.</param>
      <param name="readBuffer">Array mit vom Gerät gelesenen Daten.</param>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiDeviceProvider.TransferSequential(System.Byte[],System.Byte[])">
      <summary>Daten werden sequenziell auf das Gerät übertragen.</summary>
      <param name="writeBuffer">Array, das Daten enthält, die auf das Gerät geschrieben werden sollen.</param>
      <param name="readBuffer">Array mit vom Gerät gelesenen Daten.</param>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiDeviceProvider.Write(System.Byte[])">
      <summary>Schreibt auf das verbundene Gerät.</summary>
      <param name="buffer">Array, das die Daten enthält, die auf das Gerät geschrieben werden sollen.</param>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ISpiProvider">
      <summary>Stellt Aktionen dar, die von SPI-Controller Anbietern gemeinsam sind</summary>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiProvider.GetControllersAsync">
      <summary>Ruft alle SPI-Controller im System für den Anbieter ab.</summary>
      <returns>Wenn die Methode erfolgreich abgeschlossen wird, gibt Sie eine Liste von Werten zurück, die die verfügbaren SPI-Controller im System darstellen.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings">
      <summary>Stellt die Anbieter Einstellungen für die Verbindung mit einem Gerät dar.</summary>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz von providerspiconnectionsettings.</summary>
      <param name="chipSelectLine">Der Chip wählt die Zeile aus, in der die Verbindung hergestellt wird.</param>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.ChipSelectLine">
      <summary>Ruft die Chip Auswahl Linie für die Verbindung mit dem SPI-Gerät ab oder legt Sie fest.</summary>
      <returns>Die Auswahl Linie für den Chip.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.ClockFrequency">
      <summary>Ruft die Taktfrequenz für die Verbindung ab oder legt Sie fest.</summary>
      <returns>Der Wert der Taktfrequenz in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.DataBitLength">
      <summary>Ruft die Bitlänge für Daten in dieser Verbindung ab oder legt Sie fest.</summary>
      <returns>Die Datentyp Länge.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.Mode">
      <summary>Ruft den providerspimode für diese Verbindung ab oder legt ihn fest.</summary>
      <returns>Der Kommunikationsmodus.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.SharingMode">
      <summary>Ruft den Freigabe Modus für die SPI-Verbindung ab oder legt ihn fest.</summary>
      <returns>Der Freigabe Modus.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ProviderSpiMode">
      <summary>Definiert den SPI-Kommunikationsmodus. Der Kommunikationsmodus definiert den uhrrand, auf dem die Master-Out-Linie ein-/ausschalten, den Master in den Zeilen Beispielen und die Signal Konstante (mit dem Namen SCLK) der signaluhr. Jeder Modus wird mit einem Paar von Parametern namens Clock Polarität (CPOL) und Clock Phase (CPHA) definiert.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiMode.Mode0">
      <summary>CPOL = 0, CPHA = 0.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiMode.Mode1">
      <summary>CPOL = 0, CPHA = 1.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiMode.Mode2">
      <summary>CPOL = 1, CPHA = 0.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiMode.Mode3">
      <summary>CPOL = 1, CPHA = 1.</summary>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ProviderSpiSharingMode">
      <summary>Definiert den Freigabe Modus für den SPI-Bus.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiSharingMode.Exclusive">
      <summary>Das SPI-Bussegment ist nicht freigegeben.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiSharingMode.Shared">
      <summary>Der SPI-Bus ist freigegeben.</summary>
    </member>
  </members>
</doc>