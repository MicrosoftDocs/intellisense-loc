<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Windows.Devices.DevicesLowLevelContract</name>
  </assembly>
  <members>
    <member name="T:Windows.Devices.DevicesLowLevelContract">
      <summary>
      </summary>
    </member>
    <member name="T:Windows.Devices.ILowLevelDevicesAggregateProvider">
      <summary>Stellt die Eigenschaften dar, die allen grundlegenden Geräteaggregatsanbietern gemeinsam sind.</summary>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.AdcControllerProvider">
      <summary>Ruft den Standard-ADC-Anbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird der normale Treiber/Controller gewählt.</summary>
      <returns>Der ADC-Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.GpioControllerProvider">
      <summary>Ruft den Standard-GPIO-Anbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird der normale Treiber/Controller gewählt.</summary>
      <returns>Der GPIO-Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.I2cControllerProvider">
      <summary>Ruft den standardmäßigen I&lt;sup&gt;2&lt;/sup&gt; C Anbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird der normale Treiber/Controller gewählt.</summary>
      <returns>Der I&lt;sup&gt;2&lt;/sup&gt; C Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.PwmControllerProvider">
      <summary>Ruft den Standard-PWM-Anbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird der normale Treiber/Controller gewählt.</summary>
      <returns>Der PWM-Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.SpiControllerProvider">
      <summary>Ruft den Standard-SPI-Anbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird der normale Treiber/Controller gewählt.</summary>
      <returns>Der SPI-Anbieter.</returns>
    </member>
    <member name="T:Windows.Devices.LowLevelDevicesAggregateProvider">
      <summary>Stellt die grundlegenden Busgeräteanbieter dar. Diese Klasse gibt Zugriff auf den Standardanbieter für die grundlegenden Buscontroller.</summary>
    </member>
    <member name="M:Windows.Devices.LowLevelDevicesAggregateProvider.#ctor(Windows.Devices.Adc.Provider.IAdcControllerProvider,Windows.Devices.Pwm.Provider.IPwmControllerProvider,Windows.Devices.Gpio.Provider.IGpioControllerProvider,Windows.Devices.I2c.Provider.II2cControllerProvider,Windows.Devices.Spi.Provider.ISpiControllerProvider)">
      <summary>Erstellt eine Instanz des LowLevelDevicesAggregateProviders und legt die angegebenen Anbieter als Standardwerte für den jeweiligen Bus fest.</summary>
      <param name="adc">Der ADC-Anbieter.</param>
      <param name="pwm">Der PWM-Anbieter.</param>
      <param name="gpio">Der GPIO-Anbieter.</param>
      <param name="i2c">Der I&lt;sup&gt;2&lt;/sup&gt; C Anbieter.</param>
      <param name="spi">Der SPI-Anbieter.</param>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.AdcControllerProvider">
      <summary>Ruft den Standard-ADC-Anbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird der normale Treiber/Controller gewählt.</summary>
      <returns>Der ADC-Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.GpioControllerProvider">
      <summary>Ruft den Standard-GPIO-Anbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird der normale Treiber/Controller gewählt.</summary>
      <returns>Der GPIO-Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.I2cControllerProvider">
      <summary>Ruft den standardmäßigen I&lt;sup&gt;2&lt;/sup&gt; C Anbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird der normale Treiber/Controller gewählt.</summary>
      <returns>Der I&lt;sup&gt;2&lt;/sup&gt; C Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.PwmControllerProvider">
      <summary>Ruft den Standard-PWM-Anbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird der normale Treiber/Controller gewählt.</summary>
      <returns>Der PWM-Anbieter.</returns>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.SpiControllerProvider">
      <summary>Ruft den Standard-SPI-Anbieter ab. Wenn der Standardanbieter nicht explizit festgelegt ist, wird der normale Treiber/Controller gewählt.</summary>
      <returns>Der SPI-Anbieter.</returns>
    </member>
    <member name="T:Windows.Devices.LowLevelDevicesController">
      <summary>Stellt einen grundlegenden Busgerätecontroller und den dazu gehörigen Anbieter dar.</summary>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesController.DefaultProvider">
      <summary>Ruft den Standardanbieter für den Controller ab oder legt ihn fest.</summary>
      <returns>Der Geräteaggregatanbieter.</returns>
    </member>
    <member name="T:Windows.Devices.Adc.AdcChannel">
      <summary>Stellt einen einzelnen ADC-Kanal dar.</summary>
    </member>
    <member name="P:Windows.Devices.Adc.AdcChannel.Controller">
      <summary>Ruft den ADC-Controller für diesen Kanal ab.</summary>
      <returns>Der ADC-Controller.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcChannel.Close">
      <summary>Schließt die Verbindung auf diesem Kanal und macht ihn zum Öffnen durch andere verfügbar.</summary>
    </member>
    <member name="M:Windows.Devices.Adc.AdcChannel.ReadRatio">
      <summary>Liest den Wert als Prozentsatz des Maximalwert für diesen Controller ab.</summary>
      <returns>Der Wert als Prozentsatz des Maximalwerts.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcChannel.ReadValue">
      <summary>Liest die digitale Darstellung des analogen Werts vom ADC ab.</summary>
      <returns>Der digitale Wert.</returns>
    </member>
    <member name="T:Windows.Devices.Adc.AdcChannelMode">
      <summary>Beschreibt die Kanalmodi, die der ADC-Controller für die Eingabe verwenden kann.</summary>
    </member>
    <member name="F:Windows.Devices.Adc.AdcChannelMode.Differential">
      <summary>Unterschied zwischen zwei Pins.</summary>
    </member>
    <member name="F:Windows.Devices.Adc.AdcChannelMode.SingleEnded">
      <summary>Einfacher Wert eines bestimmten Pins.</summary>
    </member>
    <member name="T:Windows.Devices.Adc.AdcController">
      <summary>Stellt einen ADC-Controller im System dar.</summary>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.ChannelCount">
      <summary>Die Anzahl der auf dem ADC-Controller verfügbaren Kanäle.</summary>
      <returns>Anzahl der Kanäle.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.ChannelMode">
      <summary>Ruft den Kanalmodus für den ADC-Controller ab oder legt ihn fest.</summary>
      <returns>Der ADC-Kanalmodus.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.MaxValue">
      <summary>Ruft den maximalen Wert ab, den der Controller melden kann.</summary>
      <returns>Der maximale Wert.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.MinValue">
      <summary>Der minimale Wert, den der Controller melden kann.</summary>
      <returns>Der minimale Wert.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.ResolutionInBits">
      <summary>Ruft die Auflösung des Controllers als Bitzahl ab. Bedeutet beispielsweise, wenn wir über eine 10-Bit-ADC verfügen, kann er 1024 (2 ^ 10) diskrete Ebenen erkennen.</summary>
      <returns>Die Anzahl der Bits, die der ADC-Controller hat.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcController.GetControllersAsync(Windows.Devices.Adc.Provider.IAdcProvider)">
      <summary>Ruft alle Controller ab, die asynchron mit dem System verbunden sind.</summary>
      <param name="provider">Der ADC-Anbieter für die Controller in dem System.</param>
      <returns>Wenn die Methode erfolgreich abgeschlossen wird, gibt sie eine Liste von Werten zurück, die die im System verfügbaren Controller repräsentieren.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcController.GetDefaultAsync">
      <summary>Ruft den Standard-ADC-Controller im System ab.</summary>
      <returns>Der Standard-ADC-Controller für das System oder NULL, wenn das System keinen ADC-Controller hat.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcController.IsChannelModeSupported(Windows.Devices.Adc.AdcChannelMode)">
      <summary>Überprüft, ob der angegebene Kanalmodus vom Controller unterstützt wird.</summary>
      <param name="channelMode">Der Kanalmodus.</param>
      <returns>True, wenn der angegebene Kanalmodus unterstützt wird; andernfalls False.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcController.OpenChannel(System.Int32)">
      <summary>Öffnet eine Verbindung zum angegebenen ADC-Kanal.</summary>
      <param name="channelNumber">Der Kanal, mit dem die Verbindung hergestellt werden soll.</param>
      <returns>Der ADC-Kanal.</returns>
    </member>
    <member name="T:Windows.Devices.Adc.Provider.IAdcControllerProvider">
      <summary>Repräsentiert die Eigenschaften und Methoden, die allen ADC-Controllern gemeinsam sind.</summary>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.ChannelCount">
      <summary>Ruft die Anzahl der Kanäle ab, die für den Controller verfügbar sind.</summary>
      <returns>Anzahl der Kanäle.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.ChannelMode">
      <summary>Ruft den Controller-Kanalmodus ab oder legt ihn fest.</summary>
      <returns>Der Kanalmodus.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.MaxValue">
      <summary>Ruft den maximalen Wert ab, den der Controller zurückgeben kann.</summary>
      <returns>Der maximale Wert.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.MinValue">
      <summary>Ruft den minimalen Wert ab, den der Controller zurückgeben kann.</summary>
      <returns>Der minimale Wert.</returns>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.ResolutionInBits">
      <summary>Ruft die Auflösung des Controllers als Bitzahl ab.</summary>
      <returns>Die Auflösung als Anzahl von Bits.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcControllerProvider.AcquireChannel(System.Int32)">
      <summary>Ruft eine Verbindung zum angegebenen Kanal ab.</summary>
      <param name="channel">Kanal, mit dem die Verbindung hergestellt werden soll.</param>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcControllerProvider.IsChannelModeSupported(Windows.Devices.Adc.Provider.ProviderAdcChannelMode)">
      <summary>Bestimmt, ob der angegebene Kanalmodus vom Controller unterstützt wird.</summary>
      <param name="channelMode">Der betreffende Kanalmodus.</param>
      <returns>True, wenn der angegebene Kanalmodus unterstützt wird; andernfalls False.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcControllerProvider.ReadValue(System.Int32)">
      <summary>Ruft die digitale analoge Darstellung des analogen Werts auf dem angegebenen Kanal ab.</summary>
      <param name="channelNumber">Kanal, von dem abgelesen werden soll.</param>
      <returns>Die digitale Darstellung des analogen Werts.</returns>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcControllerProvider.ReleaseChannel(System.Int32)">
      <summary>Gibt die Kanalverbindung frei und öffnet den Kanal zur Verwendung durch andere.</summary>
      <param name="channel">Kanal, zu dem die Verbindung geschlossen werden soll.</param>
    </member>
    <member name="T:Windows.Devices.Adc.Provider.IAdcProvider">
      <summary>Repräsentiert Methoden, die allen ADC-Anbietern gemeinsam sind.</summary>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcProvider.GetControllers">
      <summary>Ruft die ADC-Controller ab, die im System verfügbar sind.</summary>
      <returns>Wenn diese Methode abgeschlossen ist, wird eine Liste aller im System verfügbaren Controller zurückgegeben.</returns>
    </member>
    <member name="T:Windows.Devices.Adc.Provider.ProviderAdcChannelMode">
      <summary>Bestimmt, wie der Pinwert dargestellt wird. Über die Implementierung von Einzelheiten wird vom Anbieter entschieden, sodass das Differenzial vollständig oder ein Pseudo-Differenzial sein kann.</summary>
    </member>
    <member name="F:Windows.Devices.Adc.Provider.ProviderAdcChannelMode.Differential">
      <summary>Unterschied zwischen zwei Pins.</summary>
    </member>
    <member name="F:Windows.Devices.Adc.Provider.ProviderAdcChannelMode.SingleEnded">
      <summary>Einfacher Wert eines bestimmten Pins.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangeCount">
      <summary>Steht für eine fast gleichzeitige Übersicht über die Anzahl der Zeiten, die eine Pin Wert geändert hat und die Uhrzeit, zu der diese Anzahl als Beispiel gesammelt wurde. Diese Struktur kann verwendet werden, um die Anzahl von Wiederholungen zu bestimmen, in der sich der Wert einer Pin über einen Zeitraum geändert hat.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangeCount.Count">
      <summary>Die Häufigkeit des Übergangs von Polarität definiert durch GpioChangeCounter.Polarity, die auf der Pin aufgetreten ist.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangeCount.RelativeTime">
      <summary>Der Zeitpunkt, an dem diese Anzahl aufgenommen wurde. Die Zeit liegt nahe an (aber nicht simultan mit) der Zählung. Dieser Zeitstempel kann verwendet werden, um die verstrichene Zeit zwischen zwei GpioChangeCount Datensätze zu bestimmen. Sie entspricht keiner absoluten oder Systemzeit.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangeCounter">
      <summary>Zählt die Änderungen, die von einer angegebenen Polarität für einen allgemeinen (I/o, GPIO) Pin definiert werden.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.#ctor(Windows.Devices.Gpio.GpioPin)">
      <summary>Erstellt eine neue GpioChangeCounter, die mit der angegebenen Pin verknüpft ist. Nur ein einzelnes GpioChangeCounter kann zu einem bestimmten Zeitpunkt einer Pin zugeordnet werden.</summary>
      <param name="pin">Die Pin, auf der die Zählung ändert. Diese Pin muss im Exklusivmodus geöffnet worden sein und kann nicht einem anderen GpioChangeCounter zugeordnet werden.</param>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeCounter.IsStarted">
      <summary>Ruft ab, ob die Pin-Änderungszählung derzeit aktiv ist.</summary>
      <returns>
      </returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeCounter.Polarity">
      <summary>Ruft oder legt die Polarität der Übergänge fest, die mit gezählt werden. Die Polarität kann nur geändert werden, wenn die Pinzählung noch nicht gestartet wurde.</summary>
      <returns>
      </returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Close">
      <summary>Schließt den Änderungszähler, trennt ihn von der Pin.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Read">
      <summary>Liest die aktuelle Anzahl von Polaritätänderungen Bevor die Zählung gestartet wurde, wird 0 zurückgegeben.</summary>
      <returns>Eine GpioChangeCount-Struktur, die die Anzahl und einen zugehörigen Zeitstempel enthält.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Reset">
      <summary>Setzt die Anzahl auf 0 zurück und gibt die vorherige Anzahl zurück.</summary>
      <returns>Eine GpioChangeCount-Struktur, die die Anzahl und einen zugehörigen Zeitstempel enthält.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Start">
      <summary>Startet das Zählen von Änderungen in der Pin-Polarität. Diese Methode kann nur aufgerufen werden, wenn Änderungszählung nicht bereits aktiv ist.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Stop">
      <summary>Stoppt Zählungsänderungen in der Pin-Polarität. Diese Methode kann nur aufgerufen werden, wenn Änderungszählung bereits aktiv ist.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangePolarity">
      <summary>Stellt die Polarität der Änderungen dar, die für die zugeordnete Aktion relevant sind.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangePolarity.Both">
      <summary>Übergänge aus gering zu hoch und hoch zu niedrig sollted die zugeordnete Aktion auslösen.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangePolarity.Falling">
      <summary>Übergänge von hoch zu niedrig sollten die zugeordnete Aktion auslösen.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangePolarity.Rising">
      <summary>Übergänge von tief zu hoch sollten die zugeordnete Aktion auslösen.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangeReader">
      <summary>Steht für einen kreisförmigen gemeinsamen Puffer zwischen dem Kernel-Modus und dem Benutzermodus, in dem hochauflösende Zeitstempel platziert werden, wenn eine allgemeine I/O (GPIO) Pin den Wert ändert.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.#ctor(Windows.Devices.Gpio.GpioPin)">
      <summary>Erstellt einen neuen GpioChangeReader, der mit der angegebenen Pin verknüpft ist. Nur ein einzelner GpioChangeReader kann zu einem bestimmten Zeitpunkt einer Pin zugeordnet werden.</summary>
      <param name="pin">Die Pin, auf der die Änderung gelesen wird. Diese Pin muss im Exklusivmodus geöffnet worden sein und kann nicht einem anderen Änderungsleser zugeordnet werden.</param>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.#ctor(Windows.Devices.Gpio.GpioPin,System.Int32)">
      <summary>Erstellt einen neuen GpioChangeReader mit der angegebenen Pin und mit der angegebenen minimalen Kapazität für Änderungsdatensätze. Nur ein einzelner GpioChangeReader kann zu einem bestimmten Zeitpunkt einer Pin zugeordnet werden.</summary>
      <param name="pin">Die Pin, auf der die Änderung gelesen wird. Diese Pin muss im Exklusivmodus geöffnet worden sein und kann nicht einem anderen Änderungsleser zugeordnet werden.</param>
      <param name="minCapacity">Die Mindestanzahl von Datensätzen, die der Leser halten muss.</param>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.Capacity">
      <summary>Ruft die maximale Anzahl von Datensätzen ab, die der GpioChangeReader gleichzeitig speichern kann.</summary>
      <returns>Die maximale Anzahl von geänderten Datensätzen.</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.IsEmpty">
      <summary>Ruft ab, ob derzeit keine der Änderungsdatensätze im Reader vorhanden sind.</summary>
      <returns>Gibt "True" zurück, wenn Null-Änderungeselemente im Leser sind, sonst "False".</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.IsOverflowed">
      <summary>Ruft ab, ob ein Versuch, einen geänderten Datensatz im Reader-Puffer zu platzieren, fehlschlug, weil der Puffer voll ist.</summary>
      <returns>Gibt "True" zurück, wenn ein Versuch zur Platzierung nicht erfolgreich war, sonst "False".</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.IsStarted">
      <summary>Ruft ab, ob die Pin-Änderungszählung derzeit aktiv ist.</summary>
      <returns>Gibt "True" zurück, wenn der Pin gerade aufzeichnet, sonst "False".</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.Length">
      <summary>Ruft die Anzahl der Datensätze ab, die derzeit im Änderungsreader sind.</summary>
      <returns>Die aktuelle Anzahl von Änderungsdatensätzen.</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.Polarity">
      <summary>Ruft oder legt die Polarität der Übergänge fest, die aufgezeichnet werden. Die Polarität kann nur geändert werden, wenn die Änderungsaufzählung noch nicht gestartet wurde.</summary>
      <returns>Steigt oder fällt. Der Standardwert für die Polarität fällt.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.Clear">
      <summary>Verwirft alle Datensätze aus dem Reader-Puffer.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.Close">
      <summary>Schließt den Änderungsreader, veröffentlicht den zugehörigen Speicherpuffer und trennt den Reader von der Pin.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.GetAllItems">
      <summary>Entfernt und alle Elemente, die zurzeit im Reader-Puffer sind.</summary>
      <returns>IVector&lt;GpioChangeRecord &gt;</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.GetNextItem">
      <summary>Ruft den ältesten eingefügten Eintrag aus dem Reader-Puffer ab und entfernt ihn.</summary>
      <returns>Eine GpioChangeRecord-Struktur, die den Zeitstempel und die Polarität (steigend oder fallend) der Änderung enthält.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.PeekNextItem">
      <summary>Ruft den früher eingefügten Datensatz vom Reader-Puffer ab, ohne ihn zu entfernen.</summary>
      <returns>Eine GpioChangeRecord-Struktur, die den Zeitstempel und die Polarität (steigend oder fallend) der Änderung enthält.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.Start">
      <summary>Startet die Aufzeichnung von Änderungen in Pin Polarität. Diese Methode kann nur aufgerufen werden, wenn Änderungsaufzeichnung nicht bereits aktiv ist.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.Stop">
      <summary>Änderungen für Aufnahme in Pin Polarität anhalten. Diese Methode kann nur aufgerufen werden, wenn Änderungsaufzeichnung bereits aktiv ist.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.WaitForItemsAsync(System.Int32)">
      <summary>Wartet, bis der Puffer mit einer Mindest*anzahl* von Elementen gefüllt ist, Dann wird der asynchrone Vorgang abgeschlossen sein. Diese Aktion kann gestoppt werden.</summary>
      <param name="count">Die Anzahl der Elemente, mit denen die Puffer ausgefüllt werden müssen, bevor der asynchrone Vorgang abgeschlossen ist.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangeRecord">
      <summary>Speichert eine relative Timestap einer allgemeines I/O (GPIO) Pin-Wert-Änderung und gibt an, ob die Pin von Niedrig zu Hoch oder von Hoch zu Niedrig wechselt.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangeRecord.Edge">
      <summary>Ein GpioPinEdge-Objekt, das dem Übergangstyp entspricht.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangeRecord.RelativeTime">
      <summary>Ein relativer Zeitstempel, der zum Ermitteln der Zeitunterschied zwischen zwei Änderungsdatensätze verwendet werden kann. Dieser Zeitstempel entspricht keiner absoluten Zeit oder Systemzeit.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioController">
      <summary>Stellt den standardmäßigen GPIO-Controller für das System dar.</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioController.PinCount">
      <summary>Ruft die Anzahl Pins des GPIO-Controllers ab.</summary>
      <returns>Die Anzahl der Pins des GPIO-Controllers. Einige Pins sind möglicherweise im Benutzermodus nicht verfügbar. Informationen darüber, wie die Pin-Nummern den physischen Pins entsprechen finden Sie in der Dokumentation der Leiterplatte.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.GetControllersAsync(Windows.Devices.Gpio.Provider.IGpioProvider)">
      <summary>Ruft alle Controller ab, die asynchron mit dem System verbunden sind.</summary>
      <param name="provider">Der GPIO-Anbieter für die Controller in dem System.</param>
      <returns>Wenn die Methode erfolgreich abgeschlossen wird, gibt sie eine Liste von Werten zurück, die die im System verfügbaren Controller repräsentieren.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.GetDefault">
      <summary>Ruft den standardmäßigen GPIO-Controller für das System ab.</summary>
      <returns>Der standardmäßige GPIO-Controller für das System oder NULL, wenn das System keinen GPIO-Controller hat.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.GetDefaultAsync">
      <summary>Ruft den standardmäßigen GPIO-Controller für das System ab.</summary>
      <returns>Der standardmäßige GPIO-Controller für das System oder NULL, wenn das System keinen GPIO-Controller hat.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.OpenPin(System.Int32)">
      <summary>Öffnet eine Verbindung zum angegebenen GPIO-Pin im exklusiven Modus.</summary>
      <param name="pinNumber">Die Nummer des GPIO-Pins, der geöffnet werden soll. Die PIN muss lauten</param>
      <returns>Der geöffnete GPIO-Pin.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.OpenPin(System.Int32,Windows.Devices.Gpio.GpioSharingMode)">
      <summary>Öffnet den angegebenen GPIO-Pin im angegebenen Modus.</summary>
      <param name="pinNumber">Die Nummer des GPIO-Pins, der geöffnet werden soll. Die PIN muss lauten</param>
      <param name="sharingMode">Der Modus, in dem der GPIO-Pin geöffnet werden soll. Dieser Modus bestimmt, ob andere Verbindungen zum Pin geöffnet werden können, während dieser geöffnet ist.</param>
      <returns>Der geöffnete GPIO-Pin.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.TryOpenPin(System.Int32,Windows.Devices.Gpio.GpioSharingMode,Windows.Devices.Gpio.GpioPin@,Windows.Devices.Gpio.GpioOpenStatus@)">
      <summary>Öffnet den angegebenen allgemeinen E/A (GPIO)-Pin im angegebenen Modus und ruft einen Statuswert ab, den Sie verwenden können, um einen Fehler zu behandeln, um den Pin programmgesteuert zu öffnen.</summary>
      <param name="pinNumber">Die Nummer des GPIO-Pins, der geöffnet werden soll. Einige Pins sind möglicherweise im Benutzermodus nicht verfügbar. Informationen darüber, wie die Pin-Nummern den physischen Pins entsprechen finden Sie in der Dokumentation der Leiterplatte.</param>
      <param name="sharingMode">Der Modus, in dem der GPIO-Pin geöffnet werden soll. Dieser Modus bestimmt, ob andere Verbindungen zum Pin geöffnet werden können, während dieser geöffnet ist.</param>
      <param name="pin">Der geöffnete GPIO-Pin, wenn der Rückgabewert „True“ ist; andernfalls NULL.</param>
      <param name="openStatus">Ein Enumerationswert, der entweder angibt, ob der Versuch, den GPIO-Pin zu öffnen, erfolgreich war, oder der den Grund angibt, warum dieser Versuch nicht erfolgreich war.</param>
      <returns>„True“, wenn die Methode erfolgreich den Pin öffnete; andernfalls „False“.</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioOpenStatus">
      <summary>Beschreibt die möglichen Ergebnisse des Öffnens eines Pins mit der GpioController.TryOpenPin-Methode.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.MuxingConflict">
      <summary>Die Pin wird derzeit z. B. für eine andere Funktion geöffnet, wie **I2c**, **Spi**, or **UART**. Stellen Sie sicher, dass die Pin nicht von einer anderen Funktion verwendet wird.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.PinOpened">
      <summary>Der GPIO-Pin wurde erfolgreich geöffnet.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.PinUnavailable">
      <summary>Der Pin wird vom System reserviert und ist nicht für Apps verfügbar, die im Benutzermodus ausgeführt werden.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.SharingViolation">
      <summary>Der Pin ist aktuell in einem nicht kompatiblen Freigabenmodus geöffnet. Zum Beispiel:</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.UnknownError">
      <summary>Die Pin konnte nicht geöffnet werden.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPin">
      <summary>Stellt einen GPIO-Pin dar (General Purpose Input/Output pin, Kontaktstift für Allzweckeingabe/-ausgabe).</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioPin.DebounceTimeout">
      <summary>Ruft den Debounce-Timeout für den allgemeinen E/A (GPIO)-Pin ab oder legt diesen fest; dies ist ein Intervall, während dessen Änderungen am Wert des Pins herausgefiltert und keine ValueChanged-Ereignisse generiert werden.</summary>
      <returns>Der Debounce-Timeout (vom Typ TimeSpan) für den GPIO-Pin. Wenn die Länge dieses Intervalls 0 ist, dann erzeugen alle Änderungen am Wert des Pins entsprechende ValueChanged-Ereignisse.</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioPin.PinNumber">
      <summary>Ruft die Nummer des GPIO-Pins ab.</summary>
      <returns>Die Nummer des GPIO-Pins.</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioPin.SharingMode">
      <summary>Ruft den Freigabemodus ab, in dem der GPIO-Pin geöffnet ist.</summary>
      <returns>Der Freigabenmodus, in dem der GPIO-Pin geöffnet ist.</returns>
    </member>
    <member name="E:Windows.Devices.Gpio.GpioPin.ValueChanged">
      <summary>Tritt auf, wenn der Wert des allgemeinen E/A (GPIO)-Pins geändert wird, entweder aufgrund eines externen Auslöseimpulses, wenn der Pin als Eingabe konfiguriert ist, oder wenn ein Wert auf den Pin geschrieben wird, wenn der Pin als Ausgabe konfiguriert ist.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.Close">
      <summary>Schließt den allgemeinen E/A (GPIO)-Pin und gibt die Ressourcen frei, die ihm zugeordnet sind.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.GetDriveMode">
      <summary>Ruft den aktuellen Modus des Laufwerks für den allgemeinen E/A (GPIO)-Pin ab. Der Ansteuerungsmodus gibt an, ob der Pin als Eingabe oder Ausgabe konfiguriert ist und bestimmt, wie Werte den Pin ansteuern.</summary>
      <returns>Ein Enumerationswert, der den aktuellen Ansteuerungsmodus für den GPIO-Pin angibt. Der Ansteuerungsmodus gibt an, ob der Pin als Eingabe oder Ausgabe konfiguriert ist und bestimmt, wie Werte den Pin ansteuern.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.IsDriveModeSupported(Windows.Devices.Gpio.GpioPinDriveMode)">
      <summary>Ruft ab, ob GPIO-Pin den angegebenen Laufwerksmodus unterstützt.</summary>
      <param name="driveMode">Der Ansteuerungsmodus, den Sie auf Unterstützung überprüfen sollten.</param>
      <returns>"True", wenn der GPIO-Pin den Drive-Modus unterstützt, der den *driveMode" definiert; sonst "False". Wenn Sie einen Laufwerksmodus angeben, für den diese Methode „False“ zurückgibt, wenn Sie SetDriveMode aufrufen, generiert SetDriveMode eine Ausnahme.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.Read">
      <summary>Liest den aktuellen Wert des allgemeinen E/A(GPIO)-Pins.</summary>
      <returns>Der aktuelle Wert des GPIO-Pins. Wenn der Pin als Ausgabe konfiguriert wird, ist dieser Wert der letzte, der auf den Pin geschrieben wird.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.SetDriveMode(Windows.Devices.Gpio.GpioPinDriveMode)">
      <summary>Legt den Ansteuerungsmodus des allgemeinen E/A (GPIO)-Pins fest. Der Ansteuerungsmodus gibt an, ob der Pin als Eingabe oder Ausgabe konfiguriert ist und bestimmt, wie Werte den Pin ansteuern.</summary>
      <param name="value">Ein Enumerationswert, der den Ansteuerungsmodus angibt, der für den GPIO-Pin verwendet wird. Der Ansteuerungsmodus gibt an, ob der Pin als Eingabe oder Ausgabe konfiguriert ist und bestimmt, wie Werte den Pin ansteuern.</param>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.Write(Windows.Devices.Gpio.GpioPinValue)">
      <summary>Steuert mit dem angegebenen Wert den universellen E/A (GPIO)-Pin entsprechend dem aktuellen Laufwerksmodus für den Pin an, wenn der Pin als Ausgabe konfiguriert ist, oder aktualisiert den verriegelten Ausgabewert für den Pin, wenn der Pin als Eingabe konfiguriert ist.</summary>
      <param name="value">Der Enumerationswert, der an den GPIO-Pin geschrieben werden soll.</param>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPinDriveMode">
      <summary>Beschreibt, ob ein allgemeiner E/A (GPIO)-Pin als Eingabe- oder Ausgabe konfiguriert ist, und wie Werte den Pin ansteuern.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.Input">
      <summary>Konfiguriert den GPIO-Pin im beweglichen Modus hochohmig.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.InputPullDown">
      <summary>Konfiguriert die GPIO-Pin als eine hohe Impedanz mit einem Pull-Down-Widerstand zum Boden.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.InputPullUp">
      <summary>Konfiguriert die GPIO-Pins als hohe Impedanz mit einem Pull-up-Widerstand zur Spannungsladungs-Verbindung (VCC).</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.Output">
      <summary>Konfiguriert den GPIO-Pin im starken Laufwerksmodus niedrigohmig.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.OutputOpenDrain">
      <summary>Konfiguriert die GPIO im offenen Ausgleichsmodus.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.OutputOpenDrainPullUp">
      <summary>Konfiguriert die GPIO-Pins im offenen Ausgleichsmodus mit widerstandsfähigem Pull-up-Modus.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.OutputOpenSource">
      <summary>Konfiguriert GPIO-Pins mit offenem Ausgleichsmodus.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.OutputOpenSourcePullDown">
      <summary>Konfiguriert GPIO-Pins in offenem Collektormodus mit widerstandsfähigem Pull-Down-Modus.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPinEdge">
      <summary>Beschreibt die möglichen Änderungen für den Wert des GPIO-Pins bei einem GpioPin.ValueChanged -Ereignis.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinEdge.FallingEdge">
      <summary>Der Wert des GPIO-Pin wechselt von High zu Low.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinEdge.RisingEdge">
      <summary>Der von Low zu High gewechselte Wert des GPIO-Pins.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPinValue">
      <summary>Beschreibt die möglichen Werte für einen GPIO-Pin.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinValue.High">
      <summary>Der Wert des GPIO-Pins ist High.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinValue.Low">
      <summary>Der Wert des GPIO-Pins ist Low.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPinValueChangedEventArgs">
      <summary>Stellt Daten über das GpioPin.ValueChanged-Ereignis bereit, das auftritt, wenn der Wert des allgemeinen E/A (GPIO)-Pins geändert wird, entweder aufgrund eines externen Auslöseimpulses, wenn der Pin als Eingabe konfiguriert ist, oder wenn ein Wert auf den Pin geschrieben wird, wenn der Pin als Ausgabe konfiguriert ist.</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioPinValueChangedEventArgs.Edge">
      <summary>Ruft die Art der Änderung des Werts eines GPIO-Pins bei einem GpioPin.ValueChanged-Ereignis ab.</summary>
      <returns>Ein Enumerationswert, der die Art der Änderung des Werts eines GPIO-Pins bei einem GpioPin.ValueChanged-Ereignis festlegt.</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioSharingMode">
      <summary>Beschreibt die Modi, in denen ein GPIO-Pin geöffnet werden kann. Diese Modi bestimmen, ob andere Verbindungen zum GPIO-Pin hergestellt werden können, während dieser geöffnet ist.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioSharingMode.Exclusive">
      <summary>Öffnet den GPIO-Pin im Modus "ausschließlich", sodass keine anderen Verbindungen zum Pin hergestellt werden können.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioSharingMode.SharedReadOnly">
      <summary>Öffnet den GPIO-Pin als freigegeben, sodass andere Verbindungen im **SharedReadOnly**-Modus zum Pin geöffnet werden können.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.GpioPinProviderValueChangedEventArgs">
      <summary>Stellt Informationen zum IGpioPinProvider.ValueChanged-Ereignis bereit.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.GpioPinProviderValueChangedEventArgs.#ctor(Windows.Devices.Gpio.Provider.ProviderGpioPinEdge)">
      <summary>Konstruiert die GpioPinProviderValueChangedEventArgs-Klasse mit dem angegebenen Randwert.</summary>
      <param name="edge">Die gewünschte Pinrand.</param>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.GpioPinProviderValueChangedEventArgs.Edge">
      <summary>Ruft den geänderten Wert des Pins ab.</summary>
      <returns>Der Pinrand.</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.IGpioControllerProvider">
      <summary>Stellt die Aktionen dar, die allen allgemeinen E/A- (GPIO)- Controllern gemeinsam sind.</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.IGpioControllerProvider.PinCount">
      <summary>Ruft die Anzahl der verfügbaren GPIO-Pins ab.</summary>
      <returns>Die Anzahl der verfügbaren GPIO-Pins.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioControllerProvider.OpenPinProvider(System.Int32,Windows.Devices.Gpio.Provider.ProviderGpioSharingMode)">
      <summary>Öffnet den allgemeinen E/A- (GPIO)- Pinanbieter für einen bestimmten Pin und gibt ihn zurück.</summary>
      <param name="pin">Die gewünschte GPIO-Pin-Nummer.</param>
      <param name="sharingMode">Der Freigabenmodus, in dem der Pin geöffnet werden soll.</param>
      <returns>Der GPIO-Pinanbieter für den angegebenen Pin.</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.IGpioPinProvider">
      <summary>Stellt die Aktionen dar, die für allgemeine E/A- (GPIO)-Pinanbieter gemeinsam sind.</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.IGpioPinProvider.DebounceTimeout">
      <summary>Ruft den Debounce-Timeout für den allgemeinen E/A (GPIO)-Pin ab oder legt diesen fest; dies ist ein Intervall, während dessen Änderungen am Wert des Pins herausgefiltert und keine ValueChanged-Ereignisse generiert werden.</summary>
      <returns>Der Debounce-Timeout für den GPIO-Pin, der ein Intervall ist, während dessen Änderungen am Wert des Pin herausgefiltert und keine ValueChanged-Ereignisse generiert werden. Wenn die Länge dieses Intervalls 0 ist, generieren alle Änderungen am Wert des Pins ValueChanged-Ereignisse.</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.IGpioPinProvider.PinNumber">
      <summary>Ruft die Nummer des GPIO-Pins ab.</summary>
      <returns>Die Nummer des GPIO-Pins.</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.IGpioPinProvider.SharingMode">
      <summary>Ruft den Freigabemodus ab, in dem der GPIO-Pin geöffnet ist.</summary>
      <returns>Der Freigabenmodus, in dem der GPIO-Pin geöffnet ist.</returns>
    </member>
    <member name="E:Windows.Devices.Gpio.Provider.IGpioPinProvider.ValueChanged">
      <summary>Ereignis, das ausgelöst wird, wenn sich der Wert des Pins geändert hat.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.GetDriveMode">
      <summary>Ruft den derzeit konfigurierten Laufwerksmodus des Pins ab.</summary>
      <returns>Der Laufwerksmodus des Pins.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.IsDriveModeSupported(Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode)">
      <summary>Bestimmt, ob ein Laufwerksmodus für den Pin unterstützt wird.</summary>
      <param name="driveMode">Der gewünschte Laufwerksmodus.</param>
      <returns>True, wenn der Laufwerksmodus unterstützt wird; andernfalls False.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.Read">
      <summary>Liest den aktuellen Wert des Pins ab.</summary>
      <returns>Der Wert des Pins.</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.SetDriveMode(Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode)">
      <summary>Legt den Laufwerksmodus des Pins fest.</summary>
      <param name="value">Die gewünschte Laufwerksmodus für den Pin.</param>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.Write(Windows.Devices.Gpio.Provider.ProviderGpioPinValue)">
      <summary>Schreibt einen Wert auf den Pin.</summary>
      <param name="value">Der zu schreibende Wert.</param>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.IGpioProvider">
      <summary>Stellt die Aktionen dar, die für allgemeine E/A- (GPIO)-Controller-Anbieter gemeinsam sind.</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioProvider.GetControllers">
      <summary>Ruft die im System verfügbaren Controller ab.</summary>
      <returns>Eine Liste von Werten, die die Controller darstellen, die im System verfügbar sind.</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode">
      <summary>Beschreibt, ob ein allgemeiner E/A (GPIO)-Pin als Eingabe- oder Ausgabe konfiguriert ist, und wie Werte den Pin ansteuern.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.Input">
      <summary>Konfiguriert den GPIO-Pin im beweglichen Modus hochohmig.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.InputPullDown">
      <summary>Konfiguriert die GPIO-Pin als eine hohe Impedanz mit einem Pull-Down-Widerstand zum Boden.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.InputPullUp">
      <summary>Konfiguriert die GPIO-Pins als hohe Impedanz mit einem Pull-up-Widerstand zur Spannungsladungs-Verbindung (VCC).</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.Output">
      <summary>Konfiguriert den GPIO-Pin im starken Laufwerksmodus niedrigohmig.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.OutputOpenDrain">
      <summary>Konfiguriert die GPIO im offenen Ausgleichsmodus.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.OutputOpenDrainPullUp">
      <summary>Konfiguriert die GPIO-Pins im offenen Ausgleichsmodus mit widerstandsfähigem Pull-up-Modus.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.OutputOpenSource">
      <summary>Konfiguriert GPIO-Pins mit offenem Ausgleichsmodus.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.OutputOpenSourcePullDown">
      <summary>Konfiguriert GPIO-Pins in offenem Collektormodus mit widerstandsfähigem Pull-Down-Modus.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.ProviderGpioPinEdge">
      <summary>Beschreibt die möglichen Änderungen für den Wert des GPIO-Pins.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinEdge.FallingEdge">
      <summary>Fallender Rand oder wenn der Wert von Hoch zu Tief geht.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinEdge.RisingEdge">
      <summary>Steigender Rand oder wenn der Wert von Tief zu Hoch geht.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.ProviderGpioPinValue">
      <summary>Beschreibt die möglichen Werte für einen GPIO-Pin.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinValue.High">
      <summary>Der Wert des GPIO-Pins ist High.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinValue.Low">
      <summary>Der Wert des GPIO-Pins ist Low.</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.ProviderGpioSharingMode">
      <summary>Beschreibt die Modi, in denen ein GPIO-Pin geöffnet werden kann. Diese Modi bestimmen, ob andere Verbindungen zum GPIO-Pin hergestellt werden können, während dieser geöffnet ist.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioSharingMode.Exclusive">
      <summary>Öffnet den GPIO-Pin im Modus "ausschließlich", sodass keine anderen Verbindungen zum Pin hergestellt werden können.</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioSharingMode.SharedReadOnly">
      <summary>Öffnet den GPIO-Pin als freigegeben, sodass andere Verbindungen im **SharedReadOnly**-Modus zum Pin geöffnet werden können. Es können nur Vorgänge ausgeführt werden, die nicht den Zustand des Pins ändern.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.I2cBusSpeed">
      <summary>Beschreibt die Busgeschwindigkeiten, die für die Verbindung mit einem Inter-Integrated Circuit (I2C)-Gerät verfügbar sind. Die Busgeschwindigkeit die Taktfrequenz auf dem I2C-Bus für den Zugriff auf das Gerät.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cBusSpeed.FastMode">
      <summary>Eine hohe Geschwindigkeit von 400 kHz.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cBusSpeed.StandardMode">
      <summary>Die Standardgeschwindigkeit von 100 Kilohertz (kHz). Diese Geschwindigkeit ist der Standardwert.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.I2cConnectionSettings">
      <summary>Stellt die Verbindungseinstellungen dar, die für ein Inter-Integrated Circuit (I2C)-Gerät verwendet werden sollen.</summary>
    </member>
    <member name="M:Windows.Devices.I2c.I2cConnectionSettings.#ctor(System.Int32)">
      <summary>Erstellt und initialisiert eine neue Instanz der Klasse I2c.I2cConnectionSettings-Klasse für Inter-integriertes Circuit (&lt;sup&gt;2&lt;/sup&gt; (C) Gerät mit der angegebenen Bus-Adresse, das die Standardeinstellungen für den Standardmodus für die Busgeschwindigkeit und exklusiven Teilungsmodus verwendet.</summary>
      <param name="slaveAddress">Die Bus-Adresse des Inter integrated Circuit (&lt;sup&gt;2&lt;/sup&gt; (C) Gerät, auf dem die Einstellungen für die I2cConnectionSettings. angewendet werden soll. Es wird nur 7-Bit-Adressierung unterstützt. Der Bereich gültiger Werte liegt also zwischen 8 und 119.</param>
    </member>
    <member name="P:Windows.Devices.I2c.I2cConnectionSettings.BusSpeed">
      <summary>Dient dazu, die Busgeschwindigkeit abzurufen oder festzulegen, die für die Verbindung mit einem (I2C-Gerät verwendet werden soll. Die Busgeschwindigkeit die Taktfrequenz auf dem I2C-Bus für den Zugriff auf das Gerät.</summary>
      <returns>Die Busgeschwindigkeit, die für das Herstellen einer Verbindung mit anI&lt;sup&gt;2&lt;/sup&gt; C#-Gerät verwendet wird.</returns>
    </member>
    <member name="P:Windows.Devices.I2c.I2cConnectionSettings.SharingMode">
      <summary>Dient dazu, den Freigabemodus abzurufen oder festzulegen, der für die Verbindung mit der Inter-Integrated Circuit (I2C)-Busadresse verwendet werden soll. Dieser Modus bestimmt, ob andere Verbindungen mit der I2C-Busadresse geöffnet werden können, während eine Verbindung mit der I2C-Busadresse besteht.</summary>
      <returns>Der Freigabemodus, der verwendet wird, um die Verbindung mit deml&lt;sup&gt;2&lt;/sup&gt; C#-Bus-Adresse herzustellen.</returns>
    </member>
    <member name="P:Windows.Devices.I2c.I2cConnectionSettings.SlaveAddress">
      <summary>Ruft die Busadresse des Inter-Integrated Circuit (I2C)-Geräts ab oder legt sie fest.</summary>
      <returns>Die Bus-Adresse desl&lt;sup&gt;2&lt;/sup&gt; C#-Geräts. Es wird nur 7-Bit-Adressierung unterstützt. Der Bereich gültiger Werte liegt also zwischen 8 und 119.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.I2cController">
      <summary>Stellt diel&lt;sup&gt;2&lt;/sup&gt; C#-Controller für das System bereit.</summary>
    </member>
    <member name="M:Windows.Devices.I2c.I2cController.GetControllersAsync(Windows.Devices.I2c.Provider.II2cProvider)">
      <summary>Ruft alle diel&lt;sup&gt;2&lt;/sup&gt; C#-Domänencontroller ab, die sich auf dem System befinden.</summary>
      <param name="provider">Diel&lt;sup&gt;2&lt;/sup&gt; C#-Anbieter für die Controller auf dem System.</param>
      <returns>Wenn die Methode erfolgreich abgeschlossen wird, gibt sie eine Liste von Werten zurück, die die im System verfügbaren SPI-Controller repräsentieren.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cController.GetDefaultAsync">
      <summary>Ruft den standardmäßigen&lt;sup&gt;2&lt;/sup&gt; C#-Controller auf dem System ab.</summary>
      <returns>Die standardmäßigel&lt;sup&gt;2&lt;/sup&gt; C#-Controller auf dem System oder Null, wenn das System keine,l&lt;sup&gt;2&lt;/sup&gt; C#-Controller hat.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cController.GetDevice(Windows.Devices.I2c.I2cConnectionSettings)">
      <summary>Ruft dasl&lt;sup&gt;2&lt;/sup&gt; C#-Gerät mit den angegebenen Einstellungen ab.</summary>
      <param name="settings">Die gewünschten Verbindungseinstellungen.</param>
      <returns>Das I&lt;sup&gt;2&lt;/sup&gt; C Gerät.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.I2cDevice">
      <summary>Stellt einen Kommunikationskanal für ein Gerät auf einem Inter-Integrated Circuit (I2C)-Bus dar.</summary>
    </member>
    <member name="P:Windows.Devices.I2c.I2cDevice.ConnectionSettings">
      <summary>Ruft die Verbindungseinstellungen ab, die für die Kommunikation mit dem Inter-Integrated Circuit (I2C)-Gerät verwendet werden.</summary>
      <returns>Die Verbindungseinstellungen, die für die Kommunikation mit dem Inter-Integrated Circuit (I2C)-Gerät verwendet werden.</returns>
    </member>
    <member name="P:Windows.Devices.I2c.I2cDevice.DeviceId">
      <summary>Ruft den Bezeichner des Plug-&amp;amp;-Play-Geräts des Inter-Integrated Circuit (I2C)-Bus-Controllers für das Gerät ab.</summary>
      <returns>Der Bezeichner des Plug-&amp;amp;-Play-Geräts des Inter-Integrated Circuit (I2C)-Bus-Controllers für das Gerät.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.Close">
      <summary>Schließt die Verbindungseinstellungen, die für die Kommunikation mit dem Inter-Integrated Circuit (I2C)-Gerät verwendet werden.</summary>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.FromIdAsync(System.String,Windows.Devices.I2c.I2cConnectionSettings)">
      <summary>Empfängt asynchron ein I2cDevice-Objekt für den Inter-Integrated Circuit (I2C)-Bus-Controller, der über den angegebenen Plug-&amp;amp;-Play-Gerätebezeichner verfügt, wobei die angegebenen Verbindungseinstellungen verwendet werden.</summary>
      <param name="deviceId">Die Plug-&amp;amp;-Play-Geräte-ID desl&lt;sup&gt;2&lt;/sup&gt; C#-Bus-Controller für den ein I2cDevice-Objekt erstellt werden soll.</param>
      <param name="settings">Die für die Kommunikation mit dem I2C-Bus-Controller zu verwenden Verbindungseinstellungen, die *deviceId* angibt.</param>
      <returns>Ein asynchroner Vorgang, der das I2cDevice-Objekt zurückgibt.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.GetDeviceSelector">
      <summary>Ruft eine erweiterte Abfragesyntax (AQS)- Zeichenfolge für alle Inter-Integrated Circuit (I2C)-Bus-Controller auf dem System ab. Sie können diese Zeichenfolge mit der DeviceInformation.FindAllAsync-Methode verwenden, um DeviceInformation-Objekte für diese Bus-Controller abzurufen.</summary>
      <returns>Eine AQS-Zeichenfolge für alle l&lt;sup&gt;2&lt;/sup&gt; C#-Controller auf dem System, die Sie mit der Methode DeviceInformation.FindAllAsync-Methode verwenden können, um DeviceInformation Objekte für diese-Controller verwenden zu können.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.GetDeviceSelector(System.String)">
      <summary>Ruft eine erweiterte Abfragesyntax (AQS)-Zeichenfolge für den Inter-Integrated Circuit (IC2)-Bus ab, der den angegebenen Anzeigenamen hat. Sie können diese Zeichenfolge mit der DeviceInformation.FindAllAsync-Methode verwenden, um ein DeviceInformation-Objekt für diesen Bus-Controller abzurufen.</summary>
      <param name="friendlyName">Ein Anzeigename für den Bus für den bestimmten I2C-Bus auf einer bestimmten Hardwareplattform, für die Sie die AQS-Zeichenfolge abrufen möchten.</param>
      <returns>Eine AQS-Zeichenfolge für denl&lt;sup&gt;2&lt;/sup&gt; C#-Bus, der den *FriendlyName* definiert, den Sie mit der DeviceInformation.FindAllAsync-Methode verwenden können, um ein Objekt DeviceInformation für diesen Bus abzurufen.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.Read(System.Byte[])">
      <summary>Liest Daten aus dem Inter-Integrated Circuit (I2C)-Bus, auf dem das Gerät in den angegebenen Puffer verbunden ist.</summary>
      <param name="buffer">Der Puffer, von dem Sie die Daten vomI&lt;sup&gt;2&lt;/sup&gt; C#-Bus lesen möchten. Die Länge des Puffers bestimmt, wie viel Daten vom Gerät angefordert werden.</param>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.ReadPartial(System.Byte[])">
      <summary>Liest Daten aus dem Inter-Integrated Circuit (I2C)-Bus, auf dem das Gerät in den angegebenen Puffer verbunden ist, und gibt Informationen über den Erfolg des Vorgangs zurück, den Sie für die Fehlerbehandlung verwenden können.</summary>
      <param name="buffer">Der Puffer, von dem Sie die Daten vomI&lt;sup&gt;2&lt;/sup&gt; C#-Bus lesen möchten. Die Länge des Puffers bestimmt, wie viel Daten vom Gerät angefordert werden.</param>
      <returns>Eine Struktur, die Informationen über den Erfolg des Lesevorgangs und die tatsächliche Anzahl von Bytes enthält, die durch den Vorgang in den Puffer gelesen wurden.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.Write(System.Byte[])">
      <summary>Schreibt Daten in die Inter integrated Circuit (&lt;sup&gt;2&lt;/sup&gt; (C)-Bus mit dem das Gerät verbunden ist, auf der Basis der Bus Adresse in das angegebene I2cConnectionSetting s-Objekt, das Sie zum Erstellen des I2cDevice-Objekts verwendet haben.</summary>
      <param name="buffer">Ein Puffer, der die Daten enthält, die Sie an das I2C-Gerät schreiben möchten. Diese Daten sollten die Busadresse nicht enthalten.</param>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.WritePartial(System.Byte[])">
      <summary>Schreibt Daten auf den Inter-Integrated Circuit (I2C)-Bus, mit dem das Gerät verbunden ist, und gibt Informationen über den Erfolg des Vorgangs zurück, den Sie für die Fehlerbehandlung verwenden können.</summary>
      <param name="buffer">Ein Puffer, der die Daten enthält, die Sie an das I2C-Gerät schreiben möchten. Diese Daten sollten die Busadresse nicht enthalten.</param>
      <returns>Eine Struktur, die Informationen über den Erfolg des Schreibvorgangs und die tatsächliche Anzahl von Bytes enthält, die durch den Vorgang in den Puffer geschrieben wurden.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.WriteRead(System.Byte[],System.Byte[])">
      <summary>Führt einen atomaren Vorgang aus, um Daten zum Inter-Integrated Circuit (I2C)-Bus zu schreiben und dann Daten davon zu lesen, auf dem das Gerät verbunden wird und eine Neustartbedingung zwischen den Lese- und Schreibvorgängen sendet.</summary>
      <param name="writeBuffer">Ein Puffer, der die Daten enthält, die Sie an das I2C-Gerät schreiben möchten. Diese Daten sollten die Busadresse nicht enthalten.</param>
      <param name="readBuffer">Der Puffer, von dem Sie die Daten vomI&lt;sup&gt;2&lt;/sup&gt; C#-Bus lesen möchten. Die Länge des Puffers bestimmt, wie viel Daten vom Gerät angefordert werden.</param>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.WriteReadPartial(System.Byte[],System.Byte[])">
      <summary>Führt einen atomaren Vorgang aus, um Daten auf den Inter-Integrated Circuit (I2C)-Bus zu schreiben und Daten davon zu lesen, auf dem das Gerät verbunden ist, und gibt Informationen über den Erfolg des Vorgangs zurück, den Sie für die Fehlerbehandlung verwenden können.</summary>
      <param name="writeBuffer">Ein Puffer, der die Daten enthält, die Sie an das I2C-Gerät schreiben möchten. Diese Daten sollten die Busadresse nicht enthalten.</param>
      <param name="readBuffer">Der Puffer, von dem Sie die Daten vomI&lt;sup&gt;2&lt;/sup&gt; C#-Bus lesen möchten. Die Länge des Puffers bestimmt, wie viel Daten vom Gerät angefordert werden.</param>
      <returns>Eine Struktur, die Informationen darüber enthält, ob die Lese- und Schreib-Bestandteile des Vorgangs erfolgreich waren und die Summe der tatsächlichen Anzahl von Bytes, die der Vorgang geschrieben und gelesen hat.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.I2cSharingMode">
      <summary>Beschreibt die Modi, mit denen eine Verbindung mit einer Inter-Integrated Circuit (I2C)-Busadresse hergestellt werden kann. Dieser Modus bestimmt, ob andere Verbindungen mit der I2C-Busadresse geöffnet werden können, während eine Verbindung mit der I2C-Busadresse besteht.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cSharingMode.Exclusive">
      <summary>Verbindet exklusiv mit der I&lt;sup&gt;2&lt;/sup&gt; C Bus-Adresse, so dass keine andere Verbindung mit der I2C-Busadresse geöffnet werden können, während eine Verbindung mit der I2C-Busadresse besteht. Dieser Modus ist der Standardmodus.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cSharingMode.Shared">
      <summary>Verbindet exklusiv mit der I&lt;sup&gt;2&lt;/sup&gt; C Bus-Adresse im freigegebenen Modus, so dass keine andere Verbindung mit der I2C-Busadresse geöffnet werden können, während eine Verbindung mit der I2C-Busadresse besteht.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.I2cTransferResult">
      <summary>Stellt Informationen darüber bereit, ob die Datenübertragungen, die die ReadPartial-, WritePartial- oder WriteReadPartial-Methoden durchgeführt haben, erfolgreich waren und über die tatsächliche Anzahl von Bytes, die die Methode übertragen hat.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferResult.BytesTransferred">
      <summary>Die tatsächliche Anzahl von Bytes, die bei dem Vorgang tatsächlich übertragen wurden. Die folgende Tabelle beschreibt, was dieser Wert für jede Methode darstellt.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferResult.Status">
      <summary>Ein Enumerationswert, der angibt, ob der Lese- oder Schreibvorgang die volle Anzahl von Bytes übertragen hat, die die Methode angefordert hat oder den Grund, aus dem die vollständige Übertragung nicht erfolgreich war. Für WriteReadPartial gibt der Wert an, ob die Daten für die Schreib- und Lesevorgänge vollständig übertragen wurden.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.I2cTransferStatus">
      <summary>Beschreibt, ob die Datenübertragungen, die von der ReadPartial-, WritePartial- oder WriteReadPartial-Methode durchgeführt wurden, erfolgreich waren oder stellt den Grund bereit, aus dem die Übertragung nicht erfolgreich war.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.ClockStretchTimeout">
      <summary>Fehler bei der Übertragung aufgrund der Uhr, die zu lange ausgedehnt wurde. Stellen Sie sicher, dass die Uhr-Zeile nicht gering gehalten wird.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.FullTransfer">
      <summary>Die Daten wurden vollständig übertragen. Für WriteReadPartial wurden die Daten für die Schreib-und Lesevorgänge vollständig übertragen.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.PartialTransfer">
      <summary>Das I2C-Gerät bestätigte die Datenübertragung vor der Übertragung aller Daten als negativ.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.SlaveAddressNotAcknowledged">
      <summary>Die Busadresse wurde nicht bestätigt.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.UnknownError">
      <summary>Der Vorgang ist aus unbekanntem Grund fehlgeschlagen.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.II2cDeviceStatics">
      <summary>Stellt einen Kommunikationskanal für ein Gerät auf einem Inter-Integrated Circuit (I2C)-Bus dar.</summary>
    </member>
    <member name="M:Windows.Devices.I2c.II2cDeviceStatics.FromIdAsync(System.String,Windows.Devices.I2c.I2cConnectionSettings)">
      <summary>Empfängt asynchron ein I2cDevice-Objekt für den Inter-Integrated Circuit (I2C)-Bus-Controller, der über den angegebenen Plug-&amp;amp;-Play-Gerätebezeichner verfügt, wobei die angegebenen Verbindungseinstellungen verwendet werden.</summary>
      <param name="deviceId">Die Plug-&amp;amp;-Play-Geräte-ID desl&lt;sup&gt;2&lt;/sup&gt; C#-Bus-Controller für den ein I2cDevice-Objekt erstellt werden soll.</param>
      <param name="settings">Die für die Kommunikation mit dem I2C-Bus-Controller zu verwenden Verbindungseinstellungen, die *deviceId* angibt.</param>
      <returns>Ein asynchroner Vorgang, der das I2cDevice-Objekt zurückgibt.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.II2cDeviceStatics.GetDeviceSelector">
      <summary>Ruft eine erweiterte Abfragesyntax (AQS)- Zeichenfolge für alle Inter-Integrated Circuit (I2C)-Bus-Controller auf dem System ab. Sie können diese Zeichenfolge mit der DeviceInformation.FindAllAsync-Methode verwenden, um DeviceInformation-Objekte für diese Bus-Controller abzurufen.</summary>
      <returns>Eine AQS-Zeichenfolge für alle l&lt;sup&gt;2&lt;/sup&gt; C#-Controller auf dem System, die Sie mit der Methode DeviceInformation.FindAllAsync-Methode verwenden können, um DeviceInformation Objekte für diese-Controller verwenden zu können.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.II2cDeviceStatics.GetDeviceSelector(System.String)">
      <summary>Ruft eine erweiterte Abfragesyntax (AQS)-Zeichenfolge für den Inter-Integrated Circuit (IC2)-Bus ab, der den angegebenen Anzeigenamen hat. Sie können diese Zeichenfolge mit der DeviceInformation.FindAllAsync-Methode verwenden, um ein DeviceInformation-Objekt für diesen Bus-Controller abzurufen.</summary>
      <param name="friendlyName">Ein Anzeigename für den Bus für den bestimmten I2C-Bus auf einer bestimmten Hardwareplattform, für die Sie die AQS-Zeichenfolge abrufen möchten.</param>
      <returns>Eine AQS-Zeichenfolge für denl&lt;sup&gt;2&lt;/sup&gt; C#-Bus, der den *FriendlyName* definiert, den Sie mit der DeviceInformation.FindAllAsync-Methode verwenden können, um ein Objekt DeviceInformation für diesen Bus abzurufen.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.II2cControllerProvider">
      <summary>Steht für die gemeinsamen Eigenschaften und Methoden für allel&lt;sup&gt;2&lt;/sup&gt; C#-Controller.</summary>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cControllerProvider.GetDeviceProvider(Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings)">
      <summary>Ruft denl&lt;sup&gt;2&lt;/sup&gt; C#-Geräteanbieter mit den angegebenen Einstellungen ab.</summary>
      <param name="settings">Die gewünschten Einstellungen.</param>
      <returns>Der I&lt;sup&gt;2&lt;/sup&gt; C Geräteanbieter.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.II2cDeviceProvider">
      <summary>Stellt Methoden für allel&lt;sup&gt;2&lt;/sup&gt; Anbieter der C-Gerät dar.</summary>
    </member>
    <member name="P:Windows.Devices.I2c.Provider.II2cDeviceProvider.DeviceId">
      <summary>Ruft den Bezeichner des Plug-&amp;amp;-Play-Geräts des Inter-Integrated Circuit (I2C)-Bus-Controllers für das Gerät ab.</summary>
      <returns>Der Bezeichner des Plug-&amp;amp;-Play-Geräts des Inter-Integrated Circuit (I2C)-Bus-Controllers für das Gerät.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.Read(System.Byte[])">
      <summary>Liest Daten aus dem Inter-Integrated Circuit (I2C)-Bus, auf dem das Gerät in den angegebenen Puffer verbunden ist.</summary>
      <param name="buffer">Der Puffer, von dem Sie die Daten vomI&lt;sup&gt;2&lt;/sup&gt; C#-Bus lesen möchten. Die Länge des Puffers bestimmt, wie viel Daten vom Gerät angefordert werden.</param>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.ReadPartial(System.Byte[])">
      <summary>Liest Daten aus dem Inter-Integrated Circuit (I2C)-Bus, auf dem das Gerät in den angegebenen Puffer verbunden ist, und gibt Informationen über den Erfolg des Vorgangs zurück, den Sie für die Fehlerbehandlung verwenden können.</summary>
      <param name="buffer">Der Puffer, von dem Sie die Daten vomI&lt;sup&gt;2&lt;/sup&gt; C#-Bus lesen möchten. Die Länge des Puffers bestimmt, wie viel Daten vom Gerät angefordert werden.</param>
      <returns>Eine Struktur, die Informationen über den Erfolg des Lesevorgangs und die tatsächliche Anzahl von Bytes enthält, die durch den Vorgang in den Puffer gelesen wurden.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.Write(System.Byte[])">
      <summary>Schreibt Daten in die Inter integrated Circuit (&lt;sup&gt;2&lt;/sup&gt; (C)-Bus auf dem das Gerät angeschlossen ist.</summary>
      <param name="buffer">Ein Puffer, der die Daten enthält, die Sie an das I2C-Gerät schreiben möchten. Diese Daten sollten die Busadresse nicht enthalten.</param>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.WritePartial(System.Byte[])">
      <summary>Schreibt Daten auf den Inter-Integrated Circuit (I2C)-Bus, mit dem das Gerät verbunden ist, und gibt Informationen über den Erfolg des Vorgangs zurück, den Sie für die Fehlerbehandlung verwenden können.</summary>
      <param name="buffer">Ein Puffer, der die Daten enthält, die Sie an das I2C-Gerät schreiben möchten. Diese Daten sollten die Busadresse nicht enthalten.</param>
      <returns>Eine Struktur, die Informationen über den Erfolg des Schreibvorgangs und die tatsächliche Anzahl von Bytes enthält, die durch den Vorgang in den Puffer geschrieben wurden.</returns>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.WriteRead(System.Byte[],System.Byte[])">
      <summary>Führt einen atomaren Vorgang aus, um Daten zum Inter-Integrated Circuit (I2C)-Bus zu schreiben und dann Daten davon zu lesen, auf dem das Gerät verbunden wird und eine Neustartbedingung zwischen den Lese- und Schreibvorgängen sendet.</summary>
      <param name="writeBuffer">Ein Puffer, der die Daten enthält, die Sie an das I2C-Gerät schreiben möchten. Diese Daten sollten die Busadresse nicht enthalten.</param>
      <param name="readBuffer">Der Puffer, von dem Sie die Daten vomI&lt;sup&gt;2&lt;/sup&gt; C#-Bus lesen möchten. Die Länge des Puffers bestimmt, wie viel Daten vom Gerät angefordert werden.</param>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.WriteReadPartial(System.Byte[],System.Byte[])">
      <summary>Führt einen atomaren Vorgang aus, um Daten auf den Inter-Integrated Circuit (I2C)-Bus zu schreiben und Daten davon zu lesen, auf dem das Gerät verbunden ist, und gibt Informationen über den Erfolg des Vorgangs zurück, den Sie für die Fehlerbehandlung verwenden können.</summary>
      <param name="writeBuffer">Ein Puffer, der die Daten enthält, die Sie an das I2C-Gerät schreiben möchten. Diese Daten sollten die Busadresse nicht enthalten.</param>
      <param name="readBuffer">Der Puffer, von dem Sie die Daten vomI&lt;sup&gt;2&lt;/sup&gt; C#-Bus lesen möchten. Die Länge des Puffers bestimmt, wie viel Daten vom Gerät angefordert werden.</param>
      <returns>Eine Struktur, die Informationen darüber enthält, ob die Lese- und Schreib-Bestandteile des Vorgangs erfolgreich waren und die Summe der tatsächlichen Anzahl von Bytes, die der Vorgang geschrieben und gelesen hat.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.II2cProvider">
      <summary>Steht für häufige Aktionen für allel&lt;sup&gt;2&lt;/sup&gt; C#-Anbieter.</summary>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cProvider.GetControllersAsync">
      <summary>Ruft alle diel&lt;sup&gt;2&lt;/sup&gt; C#-Domänencontroller ab, die sich auf dem System befinden.</summary>
      <returns>Wenn die Methode erfolgreich abgeschlossen wird, gibt sie eine Liste von Werten zurück, die die im System verfügbaren SPI-Controller repräsentieren.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cBusSpeed">
      <summary>Beschreibt die Busgeschwindigkeiten, die für die Verbindung mit einem Inter-Integrated Circuit (I2C)-Gerät verfügbar sind. Die Busgeschwindigkeit die Taktfrequenz auf dem I2C-Bus für den Zugriff auf das Gerät.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cBusSpeed.FastMode">
      <summary>Eine hohe Geschwindigkeit von 400 kHz.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cBusSpeed.StandardMode">
      <summary>Die Standardgeschwindigkeit von 100 Kilohertz (kHz). Diese Geschwindigkeit ist der Standardwert.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings">
      <summary>Stellt die Verbindungseinstellungen dar, die für ein Inter-Integrated Circuit (I2C)-Gerät verwendet werden sollen.</summary>
    </member>
    <member name="P:Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings.BusSpeed">
      <summary>Dient dazu, die Busgeschwindigkeit abzurufen oder festzulegen, die für die Verbindung mit einem (I2C-Gerät verwendet werden soll. Die Busgeschwindigkeit die Taktfrequenz auf dem I2C-Bus für den Zugriff auf das Gerät.</summary>
      <returns>Die Busgeschwindigkeit, die für das Herstellen einer Verbindung mit AnIl&lt;sup&gt;2&lt;/sup&gt; C#-Gerät verwendet wird.</returns>
    </member>
    <member name="P:Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings.SharingMode">
      <summary>Dient dazu, den Freigabemodus abzurufen oder festzulegen, der für die Verbindung mit der Inter-Integrated Circuit (I2C)-Busadresse verwendet werden soll. Dieser Modus bestimmt, ob andere Verbindungen mit der I2C-Busadresse geöffnet werden können, während eine Verbindung mit der I2C-Busadresse besteht.</summary>
      <returns>Der Freigabemodus, der verwendet wird, um die Verbindung mit deml&lt;sup&gt;2&lt;/sup&gt; C#-Bus-Adresse herzustellen.</returns>
    </member>
    <member name="P:Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings.SlaveAddress">
      <summary>Ruft die Busadresse des Inter-Integrated Circuit (I2C)-Geräts ab oder legt sie fest.</summary>
      <returns>Die Bus-Adresse desl&lt;sup&gt;2&lt;/sup&gt; C#-Geräts. Es wird nur 7-Bit-Adressierung unterstützt. Der Bereich gültiger Werte liegt also zwischen 8 und 119.</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cSharingMode">
      <summary>Beschreibt die Modi, mit denen eine Verbindung mit einer Inter-Integrated Circuit (I2C)-Busadresse hergestellt werden kann. Dieser Modus bestimmt, ob andere Verbindungen mit der I2C-Busadresse geöffnet werden können, während eine Verbindung mit der I2C-Busadresse besteht.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cSharingMode.Exclusive">
      <summary>Verbindet exklusiv mit der I&lt;sup&gt;2&lt;/sup&gt; C Bus-Adresse, so dass keine andere Verbindung mit der I2C-Busadresse geöffnet werden können, während eine Verbindung mit der I2C-Busadresse besteht. Dieser Modus ist der Standardmodus.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cSharingMode.Shared">
      <summary>Verbindet exklusiv mit der I&lt;sup&gt;2&lt;/sup&gt; C Bus-Adresse im freigegebenen Modus, so dass keine andere Verbindung mit der I2C-Busadresse geöffnet werden können, während eine Verbindung mit der I2C-Busadresse besteht.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cTransferResult">
      <summary>Stellt Informationen darüber bereit, ob die Datenübertragungen, die die ReadPartial-, WritePartial- oder WriteReadPartial-Methoden durchgeführt haben, erfolgreich waren und über die tatsächliche Anzahl von Bytes, die die Methode übertragen hat.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferResult.BytesTransferred">
      <summary>Die tatsächliche Anzahl von Bytes, die bei dem Vorgang tatsächlich übertragen wurden. Die folgende Tabelle beschreibt, was dieser Wert für jede Methode darstellt.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferResult.Status">
      <summary>Ein Enumerationswert, der angibt, ob der Lese- oder Schreibvorgang die volle Anzahl von Bytes übertragen hat, die die Methode angefordert hat oder den Grund, aus dem die vollständige Übertragung nicht erfolgreich war. Für WriteReadPartial gibt der Wert an, ob die Daten für die Schreib- und Lesevorgänge vollständig übertragen wurden.</summary>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cTransferStatus">
      <summary>Beschreibt, ob die Datenübertragungen, die von der ReadPartial-, WritePartial- oder WriteReadPartial-Methode durchgeführt wurden, erfolgreich waren oder stellt den Grund bereit, aus dem die Übertragung nicht erfolgreich war.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferStatus.FullTransfer">
      <summary>Die Daten wurden vollständig übertragen. Für WriteReadPartial wurden die Daten für die Schreib-und Lesevorgänge vollständig übertragen.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferStatus.PartialTransfer">
      <summary>Das I2C-Gerät bestätigte die Datenübertragung vor der Übertragung aller Daten als negativ.</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferStatus.SlaveAddressNotAcknowledged">
      <summary>Die Busadresse wurde nicht bestätigt.</summary>
    </member>
    <member name="T:Windows.Devices.Pwm.PwmController">
      <summary>Repräsentiert einen PWM-Controller, der mit dem System verbunden ist.</summary>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmController.ActualFrequency">
      <summary>Ruft die tatsächliche Frequenz des PWM ab.</summary>
      <returns>Die Frequenz in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmController.MaxFrequency">
      <summary>Ruft die maximale Frequenz ab, die vom Controller angeboten wird.</summary>
      <returns>Die maximale Frequenz in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmController.MinFrequency">
      <summary>Ruft die minimale Frequenz ab, die vom Controller angeboten wird.</summary>
      <returns>Die minimale Frequenz in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmController.PinCount">
      <summary>Ruft die Anzahl der Pins ab, die im System verfügbar sind.</summary>
      <returns>Die Anzahl der Pins.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.FromIdAsync(System.String)">
      <summary>Initialisiert eine PWM-Controller-Instanz basierend auf der angegebenen DeviceInformation-ID.</summary>
      <param name="deviceId">Die erworbene DeviceInformation-ID.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.GetControllersAsync(Windows.Devices.Pwm.Provider.IPwmProvider)">
      <summary>Ruft alle Controller auf dem System asynchron ab.</summary>
      <param name="provider">Der PWM-Anbieter, der sich im System befindet.</param>
      <returns>Wenn die Methode erfolgreich abgeschlossen wird, gibt sie eine Liste von Werten zurück, die die im System verfügbaren Controller repräsentieren.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.GetDefaultAsync">
      <summary>Ruft den Standard-PWM-Controller im System ab.</summary>
      <returns>Der Standard-PWM-Controller für das System oder NULL, wenn das System keinen PWM-Controller hat.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.GetDeviceSelector">
      <summary>Ruft eine Zeichenfolge Advanced Query Syntax, AQS für die PWM-Controller auf dem System ab. Sie können diese Zeichenfolge mit der DeviceInformation.FindAllAsync-Methode verwenden, um DeviceInformation-Objekte für diesen Controller abzurufen.</summary>
      <returns>
      </returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.GetDeviceSelector(System.String)">
      <summary>Ruft eine erweiterte Abfragesyntax (AQS)-Zeichenfolge für den PWM-Controller ab, der den angegebenen Anzeigenamen hat. Sie können diese Zeichenfolge mit der DeviceInformation.FindAllAsync-Methode verwenden, um DeviceInformation-Objekte für diesen Controller abzurufen.</summary>
      <param name="friendlyName">Einen Anzeigenamen für den bestimmten PWM-Controller für den Sie die entsprechende AQS-Zeichenfolge abrufen möchten.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.OpenPin(System.Int32)">
      <summary>Öffnet den Pin zur Verwendung.</summary>
      <param name="pinNumber">Der zu öffnende Pin.</param>
      <returns>Der angeforderte Pin, der jetzt zur Verwendung verfügbar ist.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.SetDesiredFrequency(System.Double)">
      <summary>Legt die PWM-Frequenz fest.</summary>
      <param name="desiredFrequency">Dann der Wert der gewünschten Frequenz in Hz.</param>
      <returns>Die eingestellte tatsächliche Frequenz. Dies ist die größte unterstützte Übereinstimmung, wie durch den Anbieter festgelegt.</returns>
    </member>
    <member name="T:Windows.Devices.Pwm.PwmPin">
      <summary>Repräsentiert einen einzelnen PWM-Pin im System.</summary>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmPin.Controller">
      <summary>Ruft den PWM-Controller ab, den dieser Pin verwendet.</summary>
      <returns>Der Controller.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmPin.IsStarted">
      <summary>Ruft den Startzustand des Pins ab.</summary>
      <returns>True, wenn das PWM auf diesem Pin gestartet wurde; andernfalls False.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmPin.Polarity">
      <summary>Ruft die Polarität des Pins ab oder legt sie fest.</summary>
      <returns>Die Pinpolarität.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.Close">
      <summary>Schließt die aktuelle Verbindung zu dem Pin, und gibt den Pin zum Öffnen durch andere frei.</summary>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.GetActiveDutyCyclePercentage">
      <summary>Ruft den Arbeitszyklusprozentsatz für diesen Pin ab.</summary>
      <returns>Der Arbeitszyklusprozentsatz, zwischen 0.0 und 1.0.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.SetActiveDutyCyclePercentage(System.Double)">
      <summary>Legt den Arbeitszyklusprozentsatz für diesen Pin fest.</summary>
      <param name="dutyCyclePercentage">Der gewünschte Arbeitszyklusprozentsatz, dargestellt als Wert zwischen 0.0 und 1.0.</param>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.Start">
      <summary>Startet das PWM auf diesem Pin.</summary>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.Stop">
      <summary>Beendet das PWM auf diesem Pin.</summary>
    </member>
    <member name="T:Windows.Devices.Pwm.PwmPulsePolarity">
      <summary>Beschreibt, mit welcher Polarität das PWM-Signal beginnen soll.</summary>
    </member>
    <member name="F:Windows.Devices.Pwm.PwmPulsePolarity.ActiveHigh">
      <summary>Konfiguriert das PWM-Signal zum Start im aktiven hohen Zustand.</summary>
    </member>
    <member name="F:Windows.Devices.Pwm.PwmPulsePolarity.ActiveLow">
      <summary>Konfiguriert das PWM-Signal zum Start im aktiven niedrigen Zustand.</summary>
    </member>
    <member name="T:Windows.Devices.Pwm.Provider.IPwmControllerProvider">
      <summary>Repräsentiert die Eigenschaften und Methoden, die allen PWM-Controllern gemeinsam sind.</summary>
    </member>
    <member name="P:Windows.Devices.Pwm.Provider.IPwmControllerProvider.ActualFrequency">
      <summary>Ruft die tatsächliche Frequenz des PWM ab.</summary>
      <returns>Die Frequenz in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.Provider.IPwmControllerProvider.MaxFrequency">
      <summary>Ruft die maximale Frequenz ab, die vom Controller angeboten wird.</summary>
      <returns>Die maximale Frequenz in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.Provider.IPwmControllerProvider.MinFrequency">
      <summary>Ruft die minimale Frequenz ab, die vom Controller angeboten wird.</summary>
      <returns>Die minimale Frequenz in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.Provider.IPwmControllerProvider.PinCount">
      <summary>Ruft die Anzahl der PWM-Pins ab, die im System verfügbar sind.</summary>
      <returns>Die Anzahl der verfügbaren Pins.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.AcquirePin(System.Int32)">
      <summary>Ruft den angegebenen Pin ab und öffnet ihn zur Verwendung.</summary>
      <param name="pin">Der Pin, mit dem eine PWM-Verbindung hergestellt werden soll.</param>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.DisablePin(System.Int32)">
      <summary>Beendet das PWM auf diesem Pin.</summary>
      <param name="pin">Der Pin, auf dem das PWM-Signal angehalten werden soll.</param>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.EnablePin(System.Int32)">
      <summary>Startet das PWM-Signal auf dem angegebenen Pin.</summary>
      <param name="pin">Der Pin, auf dem das PWM-Signal gestartet werden soll.</param>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.ReleasePin(System.Int32)">
      <summary>Gibt Verbindung zum angegebenen Pin frei und macht den Pin verfügbar für andere.</summary>
      <param name="pin">Der freizugebende Pin.</param>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.SetDesiredFrequency(System.Double)">
      <summary>Legt die gewünschte PWM-Frequenz fest.</summary>
      <param name="frequency">Die gewünschte Frequenz in Hz.</param>
      <returns>Die tatsächliche PWM-Frequenz nach der Einstellung auf den obigen Wert. Dies ist die größte unterstützte Übereinstimmung, wie durch den Anbieter festgelegt.</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.SetPulseParameters(System.Int32,System.Double,System.Boolean)">
      <summary>Legt die PWM-Parameter für Pin, Arbeitszyklus und Polarität fest.</summary>
      <param name="pin">Gibt an, für welchen Pin diese Werte gelten.</param>
      <param name="dutyCycle">Der Arbeitszyklusprozentsatz, mit Wert zwischen 0 und einschließlich 100.</param>
      <param name="invertPolarity">True, wenn die Polarität des Pins umgekehrt werden soll, andernfalls False.</param>
    </member>
    <member name="T:Windows.Devices.Pwm.Provider.IPwmProvider">
      <summary>Repräsentiert Methoden, die allen PWM-Anbietern gemeinsam sind.</summary>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmProvider.GetControllers">
      <summary>Ruft die im System verfügbaren Controller ab.</summary>
      <returns>Gibt eine Liste von PWM-Controllern zurück, die im System verfügbar sind.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.ISpiDeviceStatics">
      <summary>Stellt SPI-Gerätestatistik dar, die bei SPI-Geräten häufig sind.</summary>
    </member>
    <member name="M:Windows.Devices.Spi.ISpiDeviceStatics.FromIdAsync(System.String,Windows.Devices.Spi.SpiConnectionSettings)">
      <summary>Öffnet ein Gerät mit den bereitgestellten Verbindungseinstellungen.</summary>
      <param name="busId">Die ID des Buses.</param>
      <param name="settings">Die Verbindungseinstellungen.</param>
      <returns>Das SPI-Gerät.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.ISpiDeviceStatics.GetBusInfo(System.String)">
      <summary>Ruft die Informationen über einen bestimmten Bus ab.</summary>
      <param name="busId">Die ID des Buses.</param>
      <returns>Die angeforderten Businformationen.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.ISpiDeviceStatics.GetDeviceSelector">
      <summary>Ruft alle SPI-Busse ab, die auf dem System gefunden werden.</summary>
      <returns>Eine Zeichenfolge mit allen Bussen im System.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.ISpiDeviceStatics.GetDeviceSelector(System.String)">
      <summary>Ruft alle SPI-Busse ab, die auf dem System gefunden werden, die dem Eingabeparameter entsprechen.</summary>
      <param name="friendlyName">Der Eingabeparameter, der einen identifizierenden Namen für den gewünschten Bus angibt. Dies entspricht normalerweise einem Namen in der schematischen Darstellung.</param>
      <returns>Eine Zeichenfolge mit allen Bussen, mit der Eingabe im Namen.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.SpiBusInfo">
      <summary>Stellt die Informationen über einen SPI-Bus dar.</summary>
    </member>
    <member name="P:Windows.Devices.Spi.SpiBusInfo.ChipSelectLineCount">
      <summary>Ruft die Anzahl der Chipauswahlzeilen ab, die auf dem Bus verfügbar sind.</summary>
      <returns>Anzahl der Chipauswahlzeilen.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiBusInfo.MaxClockFrequency">
      <summary>Maximale Taktzyklushäufigkeit des Busses.</summary>
      <returns>Der Taktzyklus in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiBusInfo.MinClockFrequency">
      <summary>Minimale Taktzyklushäufigkeit des Busses.</summary>
      <returns>Der Taktzyklus in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiBusInfo.SupportedDataBitLengths">
      <summary>Ruft die Bitlängen ab, die auf dem Bus für das Senden von Daten verwendet werden können.</summary>
      <returns>Die unterstützten Datenlängen.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.SpiConnectionSettings">
      <summary>Stellt die Einstellungen für die Verbindung mit einem SpiDevice dar.</summary>
    </member>
    <member name="M:Windows.Devices.Spi.SpiConnectionSettings.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz von SpiConnectionSettings.</summary>
      <param name="chipSelectLine">Die Chipauswahlzeile, auf der die Verbindung hergestellt wird.</param>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.ChipSelectLine">
      <summary>Ruft die Chipauswahlzeile für die Verbindung mit dem SPI-Gerät ab oder legt diese fest.</summary>
      <returns>Die Chipauswahlzeile.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.ClockFrequency">
      <summary>Ruft die Taktfrequenz für die Verbindung ab oder legt diese fest.</summary>
      <returns>Der Wert der Taktfrequenz in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.DataBitLength">
      <summary>Ruft die Bitlänge für Daten auf dieser Verbindung ab oder legt diese fest.</summary>
      <returns>Die Datenbitlänge.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.Mode">
      <summary>Ruft den SpiMode für diese Verbindung ab oder legt diesen fest.</summary>
      <returns>Der Kommunikationsmodus.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.SharingMode">
      <summary>Ruft den Freigabemodus für die SPI-Verbindung ab oder legt diesen fest.</summary>
      <returns>Der Freigabenmodus.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.SpiController">
      <summary>Repräsentiert den SPI-Controller in dem System.</summary>
    </member>
    <member name="M:Windows.Devices.Spi.SpiController.GetControllersAsync(Windows.Devices.Spi.Provider.ISpiProvider)">
      <summary>Ruft alle SPI-Controller ab, die im System vorhanden sind.</summary>
      <param name="provider">Der SPI-Anbieter für die Controller in dem System.</param>
      <returns>Wenn die Methode erfolgreich abgeschlossen wird, gibt sie eine Liste von Werten zurück, die die im System verfügbaren SPI-Controller repräsentieren.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiController.GetDefaultAsync">
      <summary>Ruft den Standard-SPI-Controller im System ab.</summary>
      <returns>Der Standard-SPI-Controller für das System oder NULL, wenn das System keinen SPI-Controller hat.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiController.GetDevice(Windows.Devices.Spi.SpiConnectionSettings)">
      <summary>Ruft das SPI-Gerät mit den angegebenen Einstellungen ab.</summary>
      <param name="settings">Die gewünschten Verbindungseinstellungen.</param>
      <returns>Das SPI-Gerät.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.SpiDevice">
      <summary>Stellt ein Objekt dar, das über den SPI-Bus verbunden ist.</summary>
    </member>
    <member name="P:Windows.Devices.Spi.SpiDevice.ConnectionSettings">
      <summary>Ruft die Verbindungseinstellungen für das Gerät ab.</summary>
      <returns>Die Verbindungseinstellungen.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiDevice.DeviceId">
      <summary>Ruft die dem Gerät zugeordnete eindeutige ID ab.</summary>
      <returns>Die ID.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.Close">
      <summary>Schließt die Verbindung mit dem Gerät.</summary>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.FromIdAsync(System.String,Windows.Devices.Spi.SpiConnectionSettings)">
      <summary>Öffnet ein Gerät mit den bereitgestellten Verbindungseinstellungen.</summary>
      <param name="busId">Die ID des Buses.</param>
      <param name="settings">Die Verbindungseinstellungen.</param>
      <returns>Das angeforderte SPI-Gerät.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.GetBusInfo(System.String)">
      <summary>Ruft die Informationen über einen bestimmten Bus ab.</summary>
      <param name="busId">Die ID des Buses.</param>
      <returns>Die angeforderten Businformationen.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.GetDeviceSelector">
      <summary>Ruft alle SPI-Busse ab, die auf dem System gefunden werden.</summary>
      <returns>Eine Zeichenfolge mit allen im System gefundenen Bussen.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.GetDeviceSelector(System.String)">
      <summary>Ruft alle SPI-Busse ab, die auf dem System gefunden werden, die dem Eingabeparameter entsprechen.</summary>
      <param name="friendlyName">Der Eingabeparameter, der einen identifizierenden Namen für den gewünschten Bus angibt. Dies entspricht normalerweise einem Namen in der schematischen Darstellung.</param>
      <returns>Eine Zeichenfolge mit allen Bussen, mit der Eingabe im Namen.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.Read(System.Byte[])">
      <summary>Liest vom verbundenen Gerät.</summary>
      <param name="buffer">Das Array, das Daten vom Gerät enthält.</param>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.TransferFullDuplex(System.Byte[],System.Byte[])">
      <summary>Daten mithilfe eines Vollduplex-Kommunikationssystems übermitteln. Vollduplex ermöglicht dem Master und dem Slave die gleichzeitige Kommunikation.</summary>
      <param name="writeBuffer">Ein Array, das die auf das Gerät zu schreibenden Daten enthält.</param>
      <param name="readBuffer">Das Array, das Daten vom Gerät enthält.</param>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.TransferSequential(System.Byte[],System.Byte[])">
      <summary>Daten sequenziell auf das Gerät übertragen.</summary>
      <param name="writeBuffer">Ein Array, das die auf das Gerät zu schreibenden Daten enthält.</param>
      <param name="readBuffer">Das Array, das Daten vom Gerät enthält.</param>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.Write(System.Byte[])">
      <summary>Schreibt auf das verbundene Gerät.</summary>
      <param name="buffer">Ein Array, das die auf das Gerät zu schreibenden Daten enthält.</param>
    </member>
    <member name="T:Windows.Devices.Spi.SpiMode">
      <summary>Definiert den SPI-Kommunikationsmodus. Der Kommunikationsmodus definiert die Taktflanke, auf die der Master outline umschaltet, der Master inline Stichproben macht und das beständige Niveau des Signals des Signaltakts (genannt SCLK). Jeder Modus wird mit einem Parameterpaar namens Taktpolarität (CPOL) und Taktphase (CPHA) definiert.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiMode.Mode0">
      <summary>CPOL = 0, CPHA = 0.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiMode.Mode1">
      <summary>CPOL = 0, CPHA = 1.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiMode.Mode2">
      <summary>CPOL = 1, CPHA = 0.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiMode.Mode3">
      <summary>CPOL = 1, CPHA = 1.</summary>
    </member>
    <member name="T:Windows.Devices.Spi.SpiSharingMode">
      <summary>Definiert den Freigabenmodus für den SPI-Bus.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiSharingMode.Exclusive">
      <summary>Das SPI-Bussegment wird nicht freigegeben.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiSharingMode.Shared">
      <summary>Der SPI-Bus wird freigegeben.</summary>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ISpiControllerProvider">
      <summary>Repräsentiert die Aktionen, die allen SPI-Controllern gemeinsam sind.</summary>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiControllerProvider.GetDeviceProvider(Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings)">
      <summary>Ruft das SPI-Gerät mit den angegebenen Einstellungen ab.</summary>
      <param name="settings">Die gewünschten Verbindungseinstellungen.</param>
      <returns>Das SPI-Gerät.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ISpiDeviceProvider">
      <summary>Repräsentiert die Aktionen, die auf einem Gerät vorkommen, das über den SPI-Bus verbunden ist.</summary>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ISpiDeviceProvider.ConnectionSettings">
      <summary>Ruft die Verbindungseinstellungen für das Gerät ab.</summary>
      <returns>Die Verbindungseinstellungen.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ISpiDeviceProvider.DeviceId">
      <summary>Ruft die dem Gerät zugeordnete eindeutige ID ab.</summary>
      <returns>Die Geräte-ID.</returns>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiDeviceProvider.Read(System.Byte[])">
      <summary>Liest vom verbundenen Gerät.</summary>
      <param name="buffer">Das Array, das Daten vom Gerät enthält.</param>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiDeviceProvider.TransferFullDuplex(System.Byte[],System.Byte[])">
      <summary>Daten mithilfe eines Vollduplex-Kommunikationssystems übermitteln. Vollduplex ermöglicht dem Master und dem Slave die gleichzeitige Kommunikation.</summary>
      <param name="writeBuffer">Ein Array, das die auf das Gerät zu schreibenden Daten enthält.</param>
      <param name="readBuffer">Das Array, das Daten vom Gerät enthält.</param>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiDeviceProvider.TransferSequential(System.Byte[],System.Byte[])">
      <summary>Daten sequenziell auf das Gerät übertragen.</summary>
      <param name="writeBuffer">Ein Array, das die auf das Gerät zu schreibenden Daten enthält.</param>
      <param name="readBuffer">Das Array, das Daten vom Gerät enthält.</param>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiDeviceProvider.Write(System.Byte[])">
      <summary>Schreibt auf das verbundene Gerät.</summary>
      <param name="buffer">Ein Array, das die auf das Gerät zu schreibenden Daten enthält.</param>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ISpiProvider">
      <summary>Repräsentiert die Aktionen, die den SPI-Controller-Anbietern gemeinsam sind.</summary>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiProvider.GetControllersAsync">
      <summary>Ruft alle SPI-Controller im System für den Anbieter ab.</summary>
      <returns>Wenn die Methode erfolgreich abgeschlossen wird, gibt sie eine Liste von Werten zurück, die die im System verfügbaren SPI-Controller repräsentieren.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings">
      <summary>Repräsentiert die Anbietereinstellungen für die Verbindung mit einem Gerät.</summary>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der ProviderSpiConnectionSettings.</summary>
      <param name="chipSelectLine">Die Chipauswahlzeile, auf der die Verbindung hergestellt wird.</param>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.ChipSelectLine">
      <summary>Ruft die Chipauswahlzeile für die Verbindung mit dem SPI-Gerät ab oder legt diese fest.</summary>
      <returns>Die Chipauswahlzeile.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.ClockFrequency">
      <summary>Ruft die Taktfrequenz für die Verbindung ab oder legt diese fest.</summary>
      <returns>Der Wert der Taktfrequenz in Hz.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.DataBitLength">
      <summary>Ruft die Bitlänge für Daten auf dieser Verbindung ab oder legt diese fest.</summary>
      <returns>Die Datenbitlänge.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.Mode">
      <summary>Ruft den ProviderSpiMode für diese Verbindung ab oder legt diesen fest.</summary>
      <returns>Der Kommunikationsmodus.</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.SharingMode">
      <summary>Ruft den Freigabemodus für die SPI-Verbindung ab oder legt diesen fest.</summary>
      <returns>Der Freigabenmodus.</returns>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ProviderSpiMode">
      <summary>Definiert den SPI-Kommunikationsmodus. Der Kommunikationsmodus definiert die Taktflanke, auf die der Master outline umschaltet, der Master inline Stichproben macht und das beständige Niveau des Signals des Signaltakts (genannt SCLK). Jeder Modus wird mit einem Parameterpaar namens Taktpolarität (CPOL) und Taktphase (CPHA) definiert.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiMode.Mode0">
      <summary>CPOL = 0, CPHA = 0.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiMode.Mode1">
      <summary>CPOL = 0, CPHA = 1.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiMode.Mode2">
      <summary>CPOL = 1, CPHA = 0.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiMode.Mode3">
      <summary>CPOL = 1, CPHA = 1.</summary>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ProviderSpiSharingMode">
      <summary>Definiert den Freigabenmodus für den SPI-Bus.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiSharingMode.Exclusive">
      <summary>Das SPI-Bussegment wird nicht freigegeben.</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiSharingMode.Shared">
      <summary>Der SPI-Bus wird freigegeben.</summary>
    </member>
  </members>
</doc>