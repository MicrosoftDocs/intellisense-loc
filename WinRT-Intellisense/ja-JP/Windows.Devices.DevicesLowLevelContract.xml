<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Windows. Devices Lowlevelcontract</name>
  </assembly>
  <members>
    <member name="T:Windows.Devices.DevicesLowLevelContract">
      <summary>
      </summary>
    </member>
    <member name="T:Windows.Devices.ILowLevelDevicesAggregateProvider">
      <summary>すべての低レベルのデバイス集約プロバイダーに共通のプロパティを表します。</summary>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.AdcControllerProvider">
      <summary>既定の ADC プロバイダーを取得します。既定のプロバイダーが明示的に設定されていない場合は、通常のドライバー/コントローラーにフォールバックされます。</summary>
      <returns>ADC プロバイダーです。</returns>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.GpioControllerProvider">
      <summary>既定の GPIO プロバイダーを取得します。既定のプロバイダーが明示的に設定されていない場合は、通常のドライバー/コントローラーにフォールバックされます。</summary>
      <returns>GPIO プロバイダー。</returns>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.I2cControllerProvider">
      <summary>既定の I &lt; sup &gt; 2 &lt;/sup &gt; C プロバイダーを取得します。既定のプロバイダーが明示的に設定されていない場合は、通常のドライバー/コントローラーにフォールバックされます。</summary>
      <returns>&lt; Sup &gt; 2 &lt;/sup &gt; C プロバイダーです。</returns>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.PwmControllerProvider">
      <summary>既定の PWM プロバイダーを取得します。既定のプロバイダーが明示的に設定されていない場合は、通常のドライバー/コントローラーにフォールバックされます。</summary>
      <returns>PWM プロバイダーです。</returns>
    </member>
    <member name="P:Windows.Devices.ILowLevelDevicesAggregateProvider.SpiControllerProvider">
      <summary>既定の SPI プロバイダーを取得します。既定のプロバイダーが明示的に設定されていない場合は、通常のドライバー/コントローラーにフォールバックされます。</summary>
      <returns>SPI プロバイダー。</returns>
    </member>
    <member name="T:Windows.Devices.LowLevelDevicesAggregateProvider">
      <summary>低レベルのバスデバイスプロバイダーを表します。このクラスは、低レベルのバスコントローラーの既定のプロバイダーへのアクセスを提供します。</summary>
    </member>
    <member name="M:Windows.Devices.LowLevelDevicesAggregateProvider.#ctor(Windows.Devices.Adc.Provider.IAdcControllerProvider,Windows.Devices.Pwm.Provider.IPwmControllerProvider,Windows.Devices.Gpio.Provider.IGpioControllerProvider,Windows.Devices.I2c.Provider.II2cControllerProvider,Windows.Devices.Spi.Provider.ISpiControllerProvider)">
      <summary>LowLevelDevicesAggregateProvider のインスタンスを作成し、指定されたプロバイダーをそれぞれのバスの既定値として設定します。</summary>
      <param name="adc">ADC プロバイダーです。</param>
      <param name="pwm">PWM プロバイダーです。</param>
      <param name="gpio">GPIO プロバイダー。</param>
      <param name="i2c">&lt; Sup &gt; 2 &lt;/sup &gt; C プロバイダーです。</param>
      <param name="spi">SPI プロバイダー。</param>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.AdcControllerProvider">
      <summary>既定の ADC プロバイダーを取得します。既定のプロバイダーが明示的に設定されていない場合は、通常のドライバー/コントローラーにフォールバックされます。</summary>
      <returns>ADC プロバイダーです。</returns>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.GpioControllerProvider">
      <summary>既定の GPIO プロバイダーを取得します。既定のプロバイダーが明示的に設定されていない場合は、通常のドライバー/コントローラーにフォールバックされます。</summary>
      <returns>GPIO プロバイダー。</returns>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.I2cControllerProvider">
      <summary>既定の I &lt; sup &gt; 2 &lt;/sup &gt; C プロバイダーを取得します。既定のプロバイダーが明示的に設定されていない場合は、通常のドライバー/コントローラーにフォールバックされます。</summary>
      <returns>&lt; Sup &gt; 2 &lt;/sup &gt; C プロバイダーです。</returns>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.PwmControllerProvider">
      <summary>既定の PWM プロバイダーを取得します。既定のプロバイダーが明示的に設定されていない場合は、通常のドライバー/コントローラーにフォールバックされます。</summary>
      <returns>PWM プロバイダーです。</returns>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesAggregateProvider.SpiControllerProvider">
      <summary>既定の SPI プロバイダーを取得します。既定のプロバイダーが明示的に設定されていない場合は、通常のドライバー/コントローラーにフォールバックされます。</summary>
      <returns>SPI プロバイダー。</returns>
    </member>
    <member name="T:Windows.Devices.LowLevelDevicesController">
      <summary>低レベルのバスデバイスコントローラーとそれに関連付けられているプロバイダーを表します。</summary>
    </member>
    <member name="P:Windows.Devices.LowLevelDevicesController.DefaultProvider">
      <summary>コントローラーの既定のプロバイダーを取得または設定します。</summary>
      <returns>デバイス集計プロバイダー。</returns>
    </member>
    <member name="T:Windows.Devices.Adc.AdcChannel">
      <summary>単一の ADC チャネルを表します。</summary>
    </member>
    <member name="P:Windows.Devices.Adc.AdcChannel.Controller">
      <summary>このチャネルの ADC コントローラーを取得します。</summary>
      <returns>ADC コントローラー。</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcChannel.Close">
      <summary>このチャネルの接続を閉じて、他のユーザーが開くことができるようにします。</summary>
    </member>
    <member name="M:Windows.Devices.Adc.AdcChannel.ReadRatio">
      <summary>このコントローラーで可能な最大値に対する割合として値を読み取ります。</summary>
      <returns>値を最大値に対するパーセンテージとして指定します。</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcChannel.ReadValue">
      <summary>ADC からアナログ値のデジタル表現を読み取ります。</summary>
      <returns>デジタル値。</returns>
    </member>
    <member name="T:Windows.Devices.Adc.AdcChannelMode">
      <summary>ADC コントローラーが入力に使用できるチャネルモードについて説明します。</summary>
    </member>
    <member name="F:Windows.Devices.Adc.AdcChannelMode.Differential">
      <summary>2つのピンの差。</summary>
    </member>
    <member name="F:Windows.Devices.Adc.AdcChannelMode.SingleEnded">
      <summary>特定の pin の単純な値。</summary>
    </member>
    <member name="T:Windows.Devices.Adc.AdcController">
      <summary>システム上の ADC コントローラーを表します。</summary>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.ChannelCount">
      <summary>ADC コントローラーで使用できるチャネルの数。</summary>
      <returns>チャネルの数。</returns>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.ChannelMode">
      <summary>ADC コントローラーのチャネルモードを取得または設定します。</summary>
      <returns>ADC チャネルモード。</returns>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.MaxValue">
      <summary>コントローラーが報告できる最大値を取得します。</summary>
      <returns>最大値。</returns>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.MinValue">
      <summary>コントローラーが報告できる最小値。</summary>
      <returns>最小値。</returns>
    </member>
    <member name="P:Windows.Devices.Adc.AdcController.ResolutionInBits">
      <summary>コントローラーの解像度を、そのビット数として取得します。たとえば、10ビットの ADC がある場合、1024 (2 ^ 10) の不連続レベルが検出されることを意味します。</summary>
      <returns>ADC コントローラーが持つビット数。</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcController.GetControllersAsync(Windows.Devices.Adc.Provider.IAdcProvider)">
      <summary>システムに非同期的に接続されているすべてのコントローラーを取得します。</summary>
      <param name="provider">システム上のコントローラーの ADC プロバイダー。</param>
      <returns>メソッドが正常に完了すると、システムで使用可能なコントローラーを表す値の一覧が返されます。</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcController.GetDefaultAsync">
      <summary>システム上の既定の ADC コントローラーを取得します。</summary>
      <returns>システム上の既定の ADC コントローラー。システムに ADC コントローラーがない場合は null。</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcController.IsChannelModeSupported(Windows.Devices.Adc.AdcChannelMode)">
      <summary>指定されたチャネルモードがコントローラーによってサポートされていることを確認します。</summary>
      <param name="channelMode">チャネルモード。</param>
      <returns>指定したチャネルモードがサポートされている場合は True、それ以外の場合は false。</returns>
    </member>
    <member name="M:Windows.Devices.Adc.AdcController.OpenChannel(System.Int32)">
      <summary>指定された ADC チャネルへの接続を開きます。</summary>
      <param name="channelNumber">接続先のチャネル。</param>
      <returns>ADC チャネル。</returns>
    </member>
    <member name="T:Windows.Devices.Adc.Provider.IAdcControllerProvider">
      <summary>すべての ADC コントローラーに共通のプロパティとメソッドを表します。</summary>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.ChannelCount">
      <summary>コントローラーので使用できるチャネルの数を取得します。</summary>
      <returns>チャネルの数。</returns>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.ChannelMode">
      <summary>コントローラーチャネルモードを取得または設定します。</summary>
      <returns>チャネルモード。</returns>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.MaxValue">
      <summary>コントローラーが返すことができる最大値を取得します。</summary>
      <returns>最大値。</returns>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.MinValue">
      <summary>コントローラーが返すことができる最小値を取得します。</summary>
      <returns>最小値。</returns>
    </member>
    <member name="P:Windows.Devices.Adc.Provider.IAdcControllerProvider.ResolutionInBits">
      <summary>コントローラーの解像度を、そのビット数として取得します。</summary>
      <returns>ビット数としての解像度。</returns>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcControllerProvider.AcquireChannel(System.Int32)">
      <summary>指定されたチャネルへの接続を取得します。</summary>
      <param name="channel">接続先のチャネル。</param>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcControllerProvider.IsChannelModeSupported(Windows.Devices.Adc.Provider.ProviderAdcChannelMode)">
      <summary>指定したチャネルモードがコントローラーによってサポートされているかどうかを判断します。</summary>
      <param name="channelMode">対象のチャネルモード。</param>
      <returns>指定したチャネルモードがサポートされている場合は True、それ以外の場合は false。</returns>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcControllerProvider.ReadValue(System.Int32)">
      <summary>指定したチャネルのアナログ値のデジタル表現を取得します。</summary>
      <param name="channelNumber">読み取るチャネル。</param>
      <returns>アナログ値のデジタル表現。</returns>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcControllerProvider.ReleaseChannel(System.Int32)">
      <summary>チャネル接続を解放し、他のユーザーが使用できるようにそのチャネルを開きます。</summary>
      <param name="channel">接続を閉じるチャネル。</param>
    </member>
    <member name="T:Windows.Devices.Adc.Provider.IAdcProvider">
      <summary>すべての ADC プロバイダーに共通のメソッドを表します。</summary>
    </member>
    <member name="M:Windows.Devices.Adc.Provider.IAdcProvider.GetControllers">
      <summary>システムで使用可能な ADC コントローラーを取得します。</summary>
      <returns>このメソッドが完了すると、システム上の使用可能なすべてのコントローラーの一覧が返されます。</returns>
    </member>
    <member name="T:Windows.Devices.Adc.Provider.ProviderAdcChannelMode">
      <summary>Pin 値の表示方法を決定します。詳細の実装はプロバイダーによって決定されるため、差分は完全または擬似的な差分になります。</summary>
    </member>
    <member name="F:Windows.Devices.Adc.Provider.ProviderAdcChannelMode.Differential">
      <summary>2つのピンの差。</summary>
    </member>
    <member name="F:Windows.Devices.Adc.Provider.ProviderAdcChannelMode.SingleEnded">
      <summary>特定の pin の単純な値。</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangeCount">
      <summary>Pin が変更された回数と、このカウントがサンプリングされた時刻をほぼ同時にサンプリングした値を表します。この構造を使用して、一定期間における pin 値の変更の数を確認できます。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangeCount.Count">
      <summary>GpioChangeCounter によって指定された極性の切り替えがピンで発生した回数。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangeCount.RelativeTime">
      <summary>このカウントがサンプリングされた時刻。この時刻はカウントに近い状態でサンプリングされます。このタイムスタンプを使用して、2つの GpioChangeCount レコード間の経過時間を調べることができます。絶対時刻またはシステム時刻には対応していません。</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangeCounter">
      <summary>汎用 i/o (GPIO) pin の指定した極性の変更をカウントします。</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.#ctor(Windows.Devices.Gpio.GpioPin)">
      <summary>指定した pin に関連付けられた新しい GpioChangeCounter を作成します。特定の時点では、1つの GpioChangeCounter のみを pin に関連付けることができます。</summary>
      <param name="pin">変更をカウントするピン。この pin は、排他モードで開かれている必要があり、別の GpioChangeCounter に関連付けることはできません。</param>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeCounter.IsStarted">
      <summary>Pin の変更カウントが現在アクティブかどうかを取得します。</summary>
      <returns>
      </returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeCounter.Polarity">
      <summary>カウントされる遷移の極性を取得または設定します。極性は、pin のカウントが開始されていない場合にのみ変更できます。</summary>
      <returns>
      </returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Close">
      <summary>変更カウンターを閉じて、そのピンから関連付けを解除します。</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Read">
      <summary>極性の変更の現在の数を読み取ります。カウントが開始される前に、0が返されます。</summary>
      <returns>カウントと関連付けられたタイムスタンプを含む GpioChangeCount 構造体。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Reset">
      <summary>カウントを0にリセットし、前のカウントを返します。</summary>
      <returns>カウントと関連付けられたタイムスタンプを含む GpioChangeCount 構造体。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Start">
      <summary>Pin 極性の変更のカウントを開始します。このメソッドは、変更カウントがまだアクティブでない場合にのみ呼び出すことができます。</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeCounter.Stop">
      <summary>ピン極性の変化のカウントを停止します。このメソッドは、変更カウントが現在アクティブになっている場合にのみ呼び出すことができます。</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangePolarity">
      <summary>関連付けられたアクションに関連する変更の極性を表します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangePolarity.Both">
      <summary>低から高、高から低の両方に遷移すると、関連付けられたアクションがトリガーされます。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangePolarity.Falling">
      <summary>高から低に遷移すると、関連付けられたアクションがトリガーされます。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangePolarity.Rising">
      <summary>Low から high に遷移すると、関連付けられたアクションがトリガーされます。</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangeReader">
      <summary>汎用 i/o (GPIO) pin が変更されたときに高解像度のタイムスタンプが配置される、カーネルモードとユーザーモードの間の共有円形バッファーを表します。</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.#ctor(Windows.Devices.Gpio.GpioPin)">
      <summary>指定した pin に関連付けられた新しい GpioChangeReader を作成します。特定の時点では、1つの GpioChangeReader のみを pin に関連付けることができます。</summary>
      <param name="pin">変更を読み取るピン。Pin は、排他モードで開かれている必要があり、別の変更リーダーに関連付けることはできません。</param>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.#ctor(Windows.Devices.Gpio.GpioPin,System.Int32)">
      <summary>指定された pin に関連付けられ、変更レコードの最小容量が指定された新しい GpioChangeReader を作成します。特定の時点では、1つの GpioChangeReader のみを pin に関連付けることができます。</summary>
      <param name="pin">変更を読み取るピン。Pin は、排他モードで開かれている必要があり、別の変更リーダーに関連付けることはできません。</param>
      <param name="minCapacity">リーダーが保持できる必要がある変更レコードの最小数。</param>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.Capacity">
      <summary>GpioChangeReader が一度に格納できる変更レコードの最大数を取得します。</summary>
      <returns>変更レコードの最大数。</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.IsEmpty">
      <summary>リーダーに現在0の変更レコードがあるかどうかを取得します。</summary>
      <returns>リーダーに変更項目がない場合は true、それ以外の場合は false を返します。</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.IsOverflowed">
      <summary>バッファーがいっぱいのため、リーダーのバッファーに変更レコードを配置しようとしたときに失敗したかどうかを取得します。</summary>
      <returns>配置の試行が失敗した場合は true、それ以外の場合は false を返します。</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.IsStarted">
      <summary>Pin の変更の記録が現在アクティブかどうかを取得します。</summary>
      <returns>Pin の変更が現在記録されている場合は true、それ以外の場合は false を返します。</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.Length">
      <summary>変更リーダー内の現在のレコード数を取得します。</summary>
      <returns>現在の変更レコードの数。</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioChangeReader.Polarity">
      <summary>記録される遷移の極性を取得または設定します。極性は、pin の変更の記録が開始されていない場合にのみ変更できます。</summary>
      <returns>上昇または下降。既定の極性値は下降しています。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.Clear">
      <summary>リーダーのバッファーからすべての変更レコードを破棄します。</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.Close">
      <summary>変更リーダーを閉じて、関連付けられているメモリバッファーを解放し、その pin からリーダーの関連付けを解除します。</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.GetAllItems">
      <summary>リーダーのバッファー内の現在のすべての項目を削除して返します。</summary>
      <returns>IVector &lt; GpioChangeRecord &gt;</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.GetNextItem">
      <summary>リーダーのバッファーから、最も古い挿入された変更レコードを取得して削除します。</summary>
      <returns>変更のタイムスタンプと極性 (上昇または下降) を含む GpioChangeRecord 構造体。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.PeekNextItem">
      <summary>以前に挿入された変更レコードを、リーダーのバッファーから削除せずに取得します。</summary>
      <returns>変更のタイムスタンプと極性 (上昇または下降) を含む GpioChangeRecord 構造体。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.Start">
      <summary>Pin 極性での変更の記録を開始します。このメソッドは、変更の記録がまだアクティブでない場合にのみ呼び出すことができます。</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.Stop">
      <summary>Pin 極性での変更の記録を停止します。このメソッドは、変更の記録が現在アクティブになっている場合にのみ呼び出すことができます。</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioChangeReader.WaitForItemsAsync(System.Int32)">
      <summary>バッファーが少なくとも * count * 個の項目を格納するまで待機し、その時点で非同期アクションが完了します。この操作はキャンセル可能です。</summary>
      <param name="count">非同期操作が完了する前にバッファーがいっぱいになる必要がある項目の数。</param>
      <returns>
      </returns>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioChangeRecord">
      <summary>汎用 i/o (GPIO) pin 値の変更の相対 timestap と、ピンが低から高または高から低の間に移動したかどうかを格納します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangeRecord.Edge">
      <summary>遷移の種類に対応する GpioPinEdge オブジェクト。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioChangeRecord.RelativeTime">
      <summary>2つの変更レコード間の時間の差を判断するために使用できる相対タイムスタンプ。このタイムスタンプは、絶対時刻またはシステム時刻には対応していません。</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioController">
      <summary>システムの既定の汎用 i/o (GPIO) コントローラーを表します。</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioController.PinCount">
      <summary>汎用 i/o (GPIO) コントローラーの pin の数を取得します。</summary>
      <returns>GPIO コントローラーのピン数。一部の pin がユーザーモードで使用できない可能性があります。Pin 番号と物理 pin の対応については、お使いのサーキットボードのドキュメントを参照してください。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.GetControllersAsync(Windows.Devices.Gpio.Provider.IGpioProvider)">
      <summary>システムに非同期的に接続されているすべてのコントローラーを取得します。</summary>
      <param name="provider">システム上のコントローラーの GPIO プロバイダー。</param>
      <returns>メソッドが正常に完了すると、システムで使用可能なコントローラーを表す値の一覧が返されます。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.GetDefault">
      <summary>システムの既定の汎用 i/o (GPIO) コントローラーを取得します。</summary>
      <returns>システムの既定の GPIO コントローラー。システムに GPIO コントローラーがない場合は null。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.GetDefaultAsync">
      <summary>システムの既定の汎用 i/o (GPIO) コントローラーを取得します。</summary>
      <returns>システムの既定の GPIO コントローラー。システムに GPIO コントローラーがない場合は null。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.OpenPin(System.Int32)">
      <summary>指定した汎用 i/o (GPIO) pin への接続を排他モードで開きます。</summary>
      <param name="pinNumber">開く GPIO pin の pin 番号です。Pin 番号はである必要があります</param>
      <returns>開いている GPIO pin。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.OpenPin(System.Int32,Windows.Devices.Gpio.GpioSharingMode)">
      <summary>指定されたモードで、指定された汎用 i/o (GPIO) pin を開きます。</summary>
      <param name="pinNumber">開く GPIO pin の pin 番号です。Pin 番号はである必要があります</param>
      <param name="sharingMode">GPIO pin を開くモード。 pin を開いているときに、pin への他の接続を開くことができるかどうかを指定します。</param>
      <returns>開いている GPIO pin。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioController.TryOpenPin(System.Int32,Windows.Devices.Gpio.GpioSharingMode,Windows.Devices.Gpio.GpioPin@,Windows.Devices.Gpio.GpioOpenStatus@)">
      <summary>指定したモードで指定した汎用 i/o (GPIO) pin を開き、pin をプログラムによって開くことができないというエラーを処理するために使用できる状態値を取得します。</summary>
      <param name="pinNumber">開く GPIO pin の pin 番号です。一部の pin がユーザーモードで使用できない可能性があります。Pin 番号と物理 pin の対応については、お使いのサーキットボードのドキュメントを参照してください。</param>
      <param name="sharingMode">GPIO pin を開くモード。 pin を開いているときに、pin への他の接続を開くことができるかどうかを指定します。</param>
      <param name="pin">戻り値が true の場合は、開いている GPIO ピン。それ以外の場合は null。</param>
      <param name="openStatus">GPIO pin を正常に開く試みが成功したか、または GPIO pin を開こうとして失敗した理由を示す列挙値。</param>
      <returns>メソッドが pin を正常に開いた場合は True。それ以外の場合は false。</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioOpenStatus">
      <summary>GpioController. TryOpenPin メソッドを使用して pin を開くことによって得られる結果について説明します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.MuxingConflict">
      <summary>現在、pin は別の関数 (* * I2c * *、* * Spi * *、* * UART * * など) で開かれています。Pin が別の機能で使用されていないことを確認してください。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.PinOpened">
      <summary>GPIO pin が正常に開かれました。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.PinUnavailable">
      <summary>Pin はシステムによって予約されており、ユーザーモードで実行されるアプリでは使用できません。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.SharingViolation">
      <summary>現在、この pin は互換性のない共有モードで開かれています。例えば：</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioOpenStatus.UnknownError">
      <summary>Pin を開けませんでした。</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPin">
      <summary>汎用 i/o (GPIO) pin を表します。</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioPin.DebounceTimeout">
      <summary>汎用 i/o (GPIO) pin の debounce タイムアウトを取得または設定します。これは、pin の値の変更がフィルターで除外され、ValueChanged イベントが生成されない間隔です。</summary>
      <returns>GPIO ピンの debounce タイムアウト (TimeSpan 型)。この間隔の長さが0の場合、pin の値を変更すると、ValueChanged イベントが生成されます。</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioPin.PinNumber">
      <summary>汎用 i/o (GPIO) pin の pin 番号を取得します。</summary>
      <returns>GPIO pin の pin 番号。</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioPin.SharingMode">
      <summary>汎用 i/o (GPIO) ピンが開いている共有モードを取得します。</summary>
      <returns>GPIO pin が開いている共有モード。</returns>
    </member>
    <member name="E:Windows.Devices.Gpio.GpioPin.ValueChanged">
      <summary>Pin が入力として構成されている場合、または pin が出力として構成されている場合に値が pin に書き込まれたときに、汎用 i/o (GPIO) pin の値が変更されたときに発生します。</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.Close">
      <summary>汎用 i/o (GPIO) ピンを閉じ、関連付けられているリソースを解放します。</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.GetDriveMode">
      <summary>汎用 i/o (GPIO) pin の現在のドライブモードを取得します。ドライブモードは、pin を入力または出力として構成するかどうかを指定し、値をどのようにピン留めするかを決定します。</summary>
      <returns>GPIO pin の現在のドライブモードを示す列挙値。ドライブモードは、pin を入力または出力として構成するかどうかを指定し、値をどのようにピン留めするかを決定します。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.IsDriveModeSupported(Windows.Devices.Gpio.GpioPinDriveMode)">
      <summary>汎用 i/o (GPIO) pin が、指定されたドライブモードをサポートしているかどうかを取得します。</summary>
      <param name="driveMode">サポートを確認するドライブモード。</param>
      <returns>GPIO pin が、* driveMode * によって指定されるドライブモードをサポートしている場合は True。それ以外の場合は false。SetDriveMode を呼び出したときにこのメソッドが false を返すドライブモードを指定すると、SetDriveMode は例外を生成します。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.Read">
      <summary>汎用 i/o (GPIO) pin の現在の値を読み取ります。</summary>
      <returns>GPIO pin の現在の値。Pin が出力として構成されている場合、この値は pin に最後に書き込まれた値になります。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.SetDriveMode(Windows.Devices.Gpio.GpioPinDriveMode)">
      <summary>汎用 i/o (GPIO) pin のドライブモードを設定します。ドライブモードは、pin を入力または出力として構成するかどうかを指定し、値をどのようにピン留めするかを決定します。</summary>
      <param name="value">GPIO pin に使用するドライブモードを指定する列挙値。ドライブモードは、pin を入力または出力として構成するかどうかを指定し、値をどのようにピン留めするかを決定します。</param>
    </member>
    <member name="M:Windows.Devices.Gpio.GpioPin.Write(Windows.Devices.Gpio.GpioPinValue)">
      <summary>Pin が出力として構成されている場合は、pin の現在のドライブモードに従って、指定された値を汎用 i/o (GPIO) pin にドライブします。または、pin が入力として構成されている場合は、ピンのラッチ出力値を更新します。</summary>
      <param name="value">GPIO pin に書き込む列挙値。</param>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPinDriveMode">
      <summary>汎用 i/o (GPIO) ピンが入力または出力として構成されているかどうか、および値がどのようにピンに対して駆動されるかを説明します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.Input">
      <summary>大きなインピーダンスを使用して、浮動小数点モードで GPIO pin を構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.InputPullDown">
      <summary>GPIO ピンを高いインピーダンスとして構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.InputPullUp">
      <summary>電圧の充電接続 (VCC) へのプルアップの抵抗で、GPIO ピンを高インピーダンスとして構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.Output">
      <summary>GPIO ピンを強力なドライブモードで構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.OutputOpenDrain">
      <summary>GPIO in open ドレインモードを構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.OutputOpenDrainPullUp">
      <summary>抵抗膜方式プルアップモードで open drain モードで GPIO pin を構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.OutputOpenSource">
      <summary>オープンコレクターモードで GPIO pin を構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinDriveMode.OutputOpenSourcePullDown">
      <summary>抵抗膜方式プルダウンモードで open collector モードで GPIO pin を構成します。</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPinEdge">
      <summary>ValueChanged イベントの汎用 i/o (GPIO) pin の値に対して発生する可能性のある変更の種類について説明します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinEdge.FallingEdge">
      <summary>GPIO ピンの値が高から低に変わりました。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinEdge.RisingEdge">
      <summary>GPIO ピンの値が low から high に変更されました。</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPinValue">
      <summary>汎用 i/o (GPIO) pin に使用できる値について説明します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinValue.High">
      <summary>GPIO pin の値が高くなっています。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioPinValue.Low">
      <summary>GPIO pin の値が低です。</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioPinValueChangedEventArgs">
      <summary>Pin が入力として構成されている場合、または pin がとして構成されている場合に値が pin に書き込まれたときに、汎用 i/o (GPIO) pin の値が変更されたときに発生する ValueChanged イベントに関するデータを提供します。出力。</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.GpioPinValueChangedEventArgs.Edge">
      <summary>GpioPin イベントの汎用 i/o (GPIO) pin の値に発生した変更の種類を取得または設定します。</summary>
      <returns>GpioPin イベントの GPIO pin の値に対して発生した変更の種類を示す列挙値。</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.GpioSharingMode">
      <summary>汎用 i/o (GPIO) pin を開くことができるモードについて説明します。これらのモードでは、ピンが開いている間に、GPIO ピンへの他の接続を開くことができるかどうかが決定されます。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioSharingMode.Exclusive">
      <summary>GPIO pin を排他的に開いて、pin への他の接続を開くことができないようにします。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.GpioSharingMode.SharedReadOnly">
      <summary>GPIO pin を共有として開き、* * SharedReadOnly * * モードでの他の接続を pin に開くことができるようにします。</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.GpioPinProviderValueChangedEventArgs">
      <summary>ValueChanged イベントに関する情報を提供します。</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.GpioPinProviderValueChangedEventArgs.#ctor(Windows.Devices.Gpio.Provider.ProviderGpioPinEdge)">
      <summary>指定されたエッジ値を使用して、GpioPinProviderValueChangedEventArgs クラスを Contructs します。</summary>
      <param name="edge">目的の pin の端。</param>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.GpioPinProviderValueChangedEventArgs.Edge">
      <summary>Pin が変更された値を取得します。</summary>
      <returns>Pin の端。</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.IGpioControllerProvider">
      <summary>すべての汎用 i/o (GPIO) コントローラーに共通のアクションを表します。</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.IGpioControllerProvider.PinCount">
      <summary>使用可能な汎用 i/o (GPIO) ピンの数を取得します。</summary>
      <returns>使用可能な GPIO ピンの数。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioControllerProvider.OpenPinProvider(System.Int32,Windows.Devices.Gpio.Provider.ProviderGpioSharingMode)">
      <summary>特定の pin の汎用 i/o (GPIO) pin プロバイダーを開き、返します。</summary>
      <param name="pin">必要な GPIO pin 番号。</param>
      <param name="sharingMode">Pin をとして開くための共有モード。</param>
      <returns>指定された pin の GPIO pin プロバイダー。</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.IGpioPinProvider">
      <summary>汎用 i/o (GPIO) ピンプロバイダーに共通のアクションを表します。</summary>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.IGpioPinProvider.DebounceTimeout">
      <summary>汎用 i/o (GPIO) pin の debounce タイムアウトを取得または設定します。これは、ピンの値の変更がフィルターで除外され、ValueChanged イベントが生成されない間隔です。</summary>
      <returns>GPIO ピンの debounce タイムアウト。これは、ピンの値の変更がフィルターで除外され、ValueChanged イベントが生成されない間隔です。この間隔の長さが0の場合、ピンの値を変更すると、ValueChanged イベントが生成されます。</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.IGpioPinProvider.PinNumber">
      <summary>汎用 i/o (GPIO) pin の pin 番号を取得します。</summary>
      <returns>GPIO pin の pin 番号。</returns>
    </member>
    <member name="P:Windows.Devices.Gpio.Provider.IGpioPinProvider.SharingMode">
      <summary>汎用 i/o (GPIO) ピンが開いている共有モードを取得します。</summary>
      <returns>GPIO pin が開いている共有モード。</returns>
    </member>
    <member name="E:Windows.Devices.Gpio.Provider.IGpioPinProvider.ValueChanged">
      <summary>Pin の値が変更されたときに発生するイベントです。</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.GetDriveMode">
      <summary>Pin の現在構成されているドライブモードを取得します。</summary>
      <returns>Pin のドライブモード。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.IsDriveModeSupported(Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode)">
      <summary>ドライブモードが pin でサポートされているかどうかを判断します。</summary>
      <param name="driveMode">目的のドライブモード。</param>
      <returns>ドライブモードがサポートされている場合は True。それ以外の場合は false。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.Read">
      <summary>Pin の現在の値を読み取ります。</summary>
      <returns>Pin の値。</returns>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.SetDriveMode(Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode)">
      <summary>Pin のドライブモードを設定します。</summary>
      <param name="value">Pin に必要なドライブモード。</param>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioPinProvider.Write(Windows.Devices.Gpio.Provider.ProviderGpioPinValue)">
      <summary>ピンに値を書き込みます。</summary>
      <param name="value">書き込む値。</param>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.IGpioProvider">
      <summary>汎用 i/o (GPIO) コントローラープロバイダーに共通のアクションを表します。</summary>
    </member>
    <member name="M:Windows.Devices.Gpio.Provider.IGpioProvider.GetControllers">
      <summary>システムで使用可能なコントローラーを取得します。</summary>
      <returns>システムで使用可能なコントローラーを表す値の一覧。</returns>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode">
      <summary>汎用 i/o (GPIO) ピンが入力または出力として構成されているかどうか、および値がどのようにピンに対して駆動されるかを説明します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.Input">
      <summary>大きなインピーダンスを使用して、浮動小数点モードで GPIO pin を構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.InputPullDown">
      <summary>GPIO ピンを高いインピーダンスとして構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.InputPullUp">
      <summary>電圧の充電接続 (VCC) へのプルアップの抵抗で、GPIO ピンを高インピーダンスとして構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.Output">
      <summary>GPIO ピンを強力なドライブモードで構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.OutputOpenDrain">
      <summary>GPIO in open ドレインモードを構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.OutputOpenDrainPullUp">
      <summary>抵抗膜方式プルアップモードで open drain モードで GPIO pin を構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.OutputOpenSource">
      <summary>オープンコレクターモードで GPIO pin を構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinDriveMode.OutputOpenSourcePullDown">
      <summary>抵抗膜方式プルダウンモードで open collector モードで GPIO pin を構成します。</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.ProviderGpioPinEdge">
      <summary>汎用 i/o (GPIO) ピンの値に対して発生する可能性がある変更の種類について説明します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinEdge.FallingEdge">
      <summary>下端 (値が大きい方から低い方)。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinEdge.RisingEdge">
      <summary>上昇するエッジ。値が低から高の場合は。</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.ProviderGpioPinValue">
      <summary>汎用 i/o (GPIO) pin に使用できる値について説明します。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinValue.High">
      <summary>GPIO pin の値が高くなっています。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioPinValue.Low">
      <summary>GPIO pin の値が低です。</summary>
    </member>
    <member name="T:Windows.Devices.Gpio.Provider.ProviderGpioSharingMode">
      <summary>汎用 i/o (GPIO) pin を開くことができるモードについて説明します。これらのモードでは、ピンが開いている間に、GPIO ピンへの他の接続を開くことができるかどうかが決定されます。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioSharingMode.Exclusive">
      <summary>GPIO pin を排他的に開いて、pin への他の接続を開くことができないようにします。</summary>
    </member>
    <member name="F:Windows.Devices.Gpio.Provider.ProviderGpioSharingMode.SharedReadOnly">
      <summary>GPIO pin を共有として開き、* * SharedReadOnly * * モードでの他の接続を pin に開くことができるようにします。Pin の状態を変更しない操作だけを実行できます。</summary>
    </member>
    <member name="T:Windows.Devices.I2c.I2cBusSpeed">
      <summary>統合された回線に接続するために使用できるバス速度について説明します (&lt; sup &gt; 2 &lt;/sup &gt; C)。バス速度は、デバイスにアクセスするときに、I &lt; sup &gt; 2 &lt;/sup &gt; C バスをクロックする頻度です。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cBusSpeed.FastMode">
      <summary>400 kHz の高速な速度。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cBusSpeed.StandardMode">
      <summary>100キロヘルツ (kHz) の標準速度。この速度が既定値です。</summary>
    </member>
    <member name="T:Windows.Devices.I2c.I2cConnectionSettings">
      <summary>統合された回線に使用する接続設定を表します (I &lt; sup &gt; 2 &lt;/sup &gt; C)。</summary>
    </member>
    <member name="M:Windows.Devices.I2c.I2cConnectionSettings.#ctor(System.Int32)">
      <summary>バス速度と排他的共有モードの標準モードの既定の設定を使用して、指定したバスアドレスを使用して、I2cConnectionSettings &gt; &lt; &gt; &lt; クラスの新しいインスタンスを作成し、指定したバスアドレスを使用して、そのデバイスを初期化します。.</summary>
      <param name="slaveAddress">I2cConnectionSettings の設定の適用先となる、統合された回線のバスアドレス &lt; (&gt; 2 &lt;/sup &gt; C) デバイス。7ビットのアドレス指定のみがサポートされているため、有効な値の範囲は 8 ~ 119 です。</param>
    </member>
    <member name="P:Windows.Devices.I2c.I2cConnectionSettings.BusSpeed">
      <summary>統合された回線に接続するために使用するバス速度を取得または設定します (I &lt; sup &gt; 2 &lt;/sup &gt; C)。バス速度は、デバイスにアクセスするときに、I &lt; sup &gt; 2 &lt;/sup &gt; C バスをクロックする頻度です。</summary>
      <returns>AnI &lt; sup &gt; 2 &lt;/sup &gt; C デバイスに接続するために使用するバス速度。</returns>
    </member>
    <member name="P:Windows.Devices.I2c.I2cConnectionSettings.SharingMode">
      <summary>統合された回線に接続するために使用する共有モードを取得または設定します (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスアドレス。このモードでは、i &lt; sup &gt; 2 &lt;/sup &gt; C bus アドレスに接続しているときに、I &lt; sup &gt; 2 &lt;/sup &gt; C バスアドレスへの他の接続を開くことができるかどうかを指定します。</summary>
      <returns>I &lt; に接続するために使用する共有モードは、&gt; 2 &lt;/sup &gt; C bus アドレスです。</returns>
    </member>
    <member name="P:Windows.Devices.I2c.I2cConnectionSettings.SlaveAddress">
      <summary>統合された回線のバスアドレスを取得または設定します (I &lt; sup &gt; 2 &lt;/sup &gt; C) デバイス。</summary>
      <returns>I &lt; のバスアドレスは、&gt; 2 &lt;/sup &gt; C デバイスです。7ビットのアドレス指定のみがサポートされているため、有効な値の範囲は 8 ~ 119 です。</returns>
    </member>
    <member name="T:Windows.Devices.I2c.I2cController">
      <summary>システムの &lt; sup &gt; 2 &lt;/sup &gt; C コントローラーを表します。</summary>
    </member>
    <member name="M:Windows.Devices.I2c.I2cController.GetControllersAsync(Windows.Devices.I2c.Provider.II2cProvider)">
      <summary>システム上のすべての &lt; sup &gt; 2 &lt;/sup &gt; C コントローラーを取得します。</summary>
      <param name="provider">私は、システム上のコントローラーに対して、&gt; 2 &lt;/sup &gt; C プロバイダーを &lt; しています。</param>
      <returns>メソッドが正常に完了すると、システム上で使用可能な &lt; sup &gt; 2 &lt;/sup &gt; C コントローラーを表す値の一覧が返されます。</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cController.GetDefaultAsync">
      <summary>システム上の既定の I &lt; sup &gt; 2 &lt;/sup &gt; C コントローラーを取得します。</summary>
      <returns>既定では、システム上では &gt; 2 &lt;/sup &gt; C コントローラーが &lt;、システムに I &lt; sup &gt; 2 &lt; C コントローラーがない場合は null になります。</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cController.GetDevice(Windows.Devices.I2c.I2cConnectionSettings)">
      <summary>指定された設定で &lt; sup &gt; 2 &lt;/sup &gt; C デバイスを取得します。</summary>
      <param name="settings">目的の接続設定。</param>
      <returns>私は &lt; sup &gt; 2 &lt;/sup &gt; C デバイスです。</returns>
    </member>
    <member name="T:Windows.Devices.I2c.I2cDevice">
      <summary>クロス統合回線上のデバイスへの通信チャネルを表します (I &lt; sup &gt; 2 &lt;/sup &gt; C) バス。</summary>
    </member>
    <member name="P:Windows.Devices.I2c.I2cDevice.ConnectionSettings">
      <summary>統合された回線との通信に使用される接続設定 (I &lt; sup &gt; 2 &lt;/sup &gt; C) デバイスを取得します。</summary>
      <returns>統合された回線との通信に使用される接続設定 (I &lt; sup &gt; 2 &lt;/sup &gt; C) デバイス。</returns>
    </member>
    <member name="P:Windows.Devices.I2c.I2cDevice.DeviceId">
      <summary>デバイスのプラグアンドプレイデバイス id を取得します (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスコントローラー。</summary>
      <returns>デバイスのプラグアンドプレイデバイス識別子 (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスコントローラーのデバイス id。</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.Close">
      <summary>統合された回線への接続を閉じます (I &lt; sup &gt; 2 &lt;/sup &gt; C) デバイス。</summary>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.FromIdAsync(System.String,Windows.Devices.I2c.I2cConnectionSettings)">
      <summary>指定された接続設定を使用して、指定されたプラグアンドプレイデバイス id を持つ I2cDevice オブジェクトを、統合されている回線 (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスコントローラーに対して非同期的に取得します。</summary>
      <param name="deviceId">I &lt; のプラグアンドプレイデバイス識別子は、I2cDevice オブジェクトを作成する &gt; 2 &lt;/sup &gt; C バスコントローラーです。</param>
      <param name="settings">I &lt; sup &gt; 2 &lt;/sup &gt; C バスコントローラーとの通信に使用する接続設定。 * deviceId * によって指定されます。</param>
      <returns>I2cDevice オブジェクトを返す非同期操作。</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.GetDeviceSelector">
      <summary>システム上のすべての統合回線 (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスコントローラーの高度なクエリ構文 (AQS) 文字列を取得します。この文字列を DeviceInformation. FindAllAsync メソッドと共に使用すると、これらのバスコントローラーの DeviceInformation オブジェクトを取得できます。</summary>
      <returns>すべての I &lt; &gt; 2 &lt;/&gt; sup の AQS 文字列はシステム上にあります。これを DeviceInformation. FindAllAsync メソッドと共に使用して、これらのバスコントローラーの DeviceInformation オブジェクトを取得できます。</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.GetDeviceSelector(System.String)">
      <summary>指定したフレンドリ名を持つ、統合された回線間 (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスの高度なクエリ構文 (AQS) 文字列を取得します。この文字列を DeviceInformation. FindAllAsync メソッドと共に使用すると、そのバスの DeviceInformation オブジェクトを取得できます。</summary>
      <param name="friendlyName">特定のハードウェアプラットフォーム上で、AQS 文字列を取得するために &lt; sup &gt; 2 &lt;/sup &gt; C バスのフレンドリ名。</param>
      <returns>I &lt; sup の AQS 文字列 &gt; 2 &lt;/sup &gt; C バスを指定します。 * friendlyName * は、このバスの DeviceInformation オブジェクトを取得するために、DeviceInformation. FindAllAsync メソッドと共に使用できます。</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.Read(System.Byte[])">
      <summary>デバイスが指定されたバッファーに接続されている場合、統合された回線 (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスからデータを読み取ります。</summary>
      <param name="buffer">I &lt; からデータを読み取るバッファー。 sup &gt; 2 &lt;/sup &gt; C bus です。バッファーの長さによって、デバイスから要求するデータの量が決まります。</param>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.ReadPartial(System.Byte[])">
      <summary>デバイスが指定されたバッファーに接続されている、統合された回線 (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスからデータを読み取り、エラー処理に使用できる操作の成功に関する情報を返します。</summary>
      <param name="buffer">I &lt; からデータを読み取るバッファー。 sup &gt; 2 &lt;/sup &gt; C bus です。バッファーの長さによって、デバイスから要求するデータの量が決まります。</param>
      <returns>読み取り操作の成功と、操作がバッファーに読み取られた実際のバイト数に関する情報を格納する構造体。</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.Write(System.Byte[])">
      <summary>I2cDevice オブジェクトの作成に使用した I2cConnectionSetting s オブジェクトに指定されているバスアドレスに基づいて、デバイスが接続されている統合回線にデータを書き込みます (I &lt; sup &gt; 2 &lt;/sup &gt; C)。</summary>
      <param name="buffer">I &lt; sup &gt; 2 &lt;/sup &gt; C デバイスに書き込むデータを格納しているバッファー。このデータには、バスアドレスを含めないでください。</param>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.WritePartial(System.Byte[])">
      <summary>デバイスが接続されている統合回線 &lt; (&gt; 2 &lt;/sup &gt; C) バスにデータを書き込み、エラー処理に使用できる操作の成功に関する情報を返します。</summary>
      <param name="buffer">I &lt; sup &gt; 2 &lt;/sup &gt; C デバイスに書き込むデータを格納しているバッファー。このデータには、バスアドレスを含めないでください。</param>
      <returns>書き込み操作の成功と、操作がバッファーに書き込んだ実際のバイト数に関する情報を格納する構造体。</returns>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.WriteRead(System.Byte[],System.Byte[])">
      <summary>アトミックな操作を実行して、統合された回線にデータを書き込んだ後、そのデータをデバイスが接続されている &lt; sup &gt; 2 &lt;/sup &gt; C) バスに書き込み、書き込み操作と読み取り操作の間で再起動条件を送信します。</summary>
      <param name="writeBuffer">I &lt; sup &gt; 2 &lt;/sup &gt; C デバイスに書き込むデータを格納しているバッファー。このデータには、バスアドレスを含めないでください。</param>
      <param name="readBuffer">I &lt; からデータを読み取るバッファー。 sup &gt; 2 &lt;/sup &gt; C bus です。バッファーの長さによって、デバイスから要求するデータの量が決まります。</param>
    </member>
    <member name="M:Windows.Devices.I2c.I2cDevice.WriteReadPartial(System.Byte[],System.Byte[])">
      <summary>アトミックな操作を実行して、統合された回線にデータを書き込んだ後、そのデータをデバイスが接続されている &lt; sup &gt; 2 &lt;/sup &gt; C) バスに書き込み、エラー処理に使用できる操作の成功に関する情報を返します。</summary>
      <param name="writeBuffer">I &lt; sup &gt; 2 &lt;/sup &gt; C デバイスに書き込むデータを格納しているバッファー。このデータには、バスアドレスを含めないでください。</param>
      <param name="readBuffer">I &lt; からデータを読み取るバッファー。 sup &gt; 2 &lt;/sup &gt; C bus です。バッファーの長さによって、デバイスから要求するデータの量が決まります。</param>
      <returns>操作の読み取りと書き込みの両方の部分が成功したかどうかと、操作によって書き込まれた実際のバイト数の合計、および操作が読み取る実際のバイト数に関する情報を格納する構造体。</returns>
    </member>
    <member name="T:Windows.Devices.I2c.I2cSharingMode">
      <summary>統合された回線に接続できるモードについて説明します (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスアドレス。これらのモードは、i &lt; sup &gt; 2 &lt;/sup &gt; C bus アドレスに接続しているときに、I &lt; sup &gt; 2 &lt;/sup &gt; C バスアドレスへの他の接続を開くことができるかどうかを決定します。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cSharingMode.Exclusive">
      <summary>I &lt; sup &gt; 2 &lt;/sup &gt; C バスアドレスに接続します。これにより、接続したままでも、I &lt; sup &gt; 2 &lt;/sup &gt; C バスアドレスに接続できなくなります。このモードは既定のモードです。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cSharingMode.Shared">
      <summary>共有モードで I &lt; sup &gt; 2 &lt;/sup &gt; C バスアドレスに接続します。これにより、接続を維持したまま、I &lt; sup &gt; 2 &lt;/sup &gt; C バスアドレスへの他の接続を確立できるようになります。</summary>
    </member>
    <member name="T:Windows.Devices.I2c.I2cTransferResult">
      <summary>ReadPartial、WritePartial、または WriteReadPartial メソッドが成功したデータ転送、およびメソッドが実際に転送したバイト数に関する情報を提供します。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferResult.BytesTransferred">
      <summary>操作によって実際に転送された実際のバイト数。次の表は、この値が各メソッドにどのように表されるかを示しています。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferResult.Status">
      <summary>読み取りまたは書き込み操作が、メソッドによって要求された最大バイト数を転送したか、または完全転送が成功しなかった理由を示す列挙値。WriteReadPartial の場合、この値は、書き込み操作と読み取り操作の両方のデータが完全に転送されたかどうかを示します。</summary>
    </member>
    <member name="T:Windows.Devices.I2c.I2cTransferStatus">
      <summary>ReadPartial、WritePartial、または WriteReadPartial メソッドが正常に実行したデータ転送が成功したかどうか、または転送が成功しなかった理由を示します。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.ClockStretchTimeout">
      <summary>クロックの拡張が長すぎるため、転送に失敗しました。時計の線が少なくなっていないことを確認します。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.FullTransfer">
      <summary>データは完全に転送されました。WriteReadPartial の場合、書き込み操作と読み取り操作の両方のデータが完全に転送されました。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.PartialTransfer">
      <summary>私 &lt; sup &gt; 2 &lt;/sup &gt; C デバイスは、すべてのデータが転送される前に、データ転送を否定受信確認しました。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.SlaveAddressNotAcknowledged">
      <summary>バスアドレスが確認されませんでした。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.I2cTransferStatus.UnknownError">
      <summary>不明な理由により、転送に失敗しました。</summary>
    </member>
    <member name="T:Windows.Devices.I2c.II2cDeviceStatics">
      <summary>統合回線上のデバイスへの通信チャネルを開く方法を提供します (I &lt; sup &gt; 2 &lt;/sup &gt; C) バス。</summary>
    </member>
    <member name="M:Windows.Devices.I2c.II2cDeviceStatics.FromIdAsync(System.String,Windows.Devices.I2c.I2cConnectionSettings)">
      <summary>指定された接続設定を使用して、指定されたプラグアンドプレイデバイス id を持つ I2cDevice オブジェクトを、統合されている回線 (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスコントローラーに対して非同期的に取得します。</summary>
      <param name="deviceId">I &lt; のプラグアンドプレイデバイス識別子は、I2cDevice オブジェクトを作成する &gt; 2 &lt;/sup &gt; C バスコントローラーです。</param>
      <param name="settings">I &lt; sup &gt; 2 &lt;/sup &gt; C バスコントローラーとの通信に使用する接続設定。 * deviceId * によって指定されます。</param>
      <returns>I2cDevice オブジェクトを返す非同期操作。</returns>
    </member>
    <member name="M:Windows.Devices.I2c.II2cDeviceStatics.GetDeviceSelector">
      <summary>システム上のすべての統合回線 (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスコントローラーの高度なクエリ構文 (AQS) 文字列を取得します。この文字列を DeviceInformation. FindAllAsync メソッドと共に使用すると、これらのバスコントローラーの DeviceInformation オブジェクトを取得できます。</summary>
      <returns>すべての I &lt; &gt; 2 &lt;/&gt; sup の AQS 文字列はシステム上にあります。これを DeviceInformation. FindAllAsync メソッドと共に使用して、これらのバスコントローラーの DeviceInformation オブジェクトを取得できます。</returns>
    </member>
    <member name="M:Windows.Devices.I2c.II2cDeviceStatics.GetDeviceSelector(System.String)">
      <summary>指定したフレンドリ名を持つ、統合された回線間 (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスの高度なクエリ構文 (AQS) 文字列を取得します。この文字列を DeviceInformation. FindAllAsync メソッドと共に使用すると、そのバスの DeviceInformation オブジェクトを取得できます。</summary>
      <param name="friendlyName">特定のハードウェアプラットフォーム上で、AQS 文字列を取得するために &lt; sup &gt; 2 &lt;/sup &gt; C バスのフレンドリ名。</param>
      <returns>I &lt; sup の AQS 文字列 &gt; 2 &lt;/sup &gt; C バスを指定します。 * friendlyName * は、このバスの DeviceInformation オブジェクトを取得するために、DeviceInformation. FindAllAsync メソッドと共に使用できます。</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.II2cControllerProvider">
      <summary>&gt; 2 &lt;/sup &gt; C コントローラーのすべて &lt; に共通のプロパティとメソッドを表します。</summary>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cControllerProvider.GetDeviceProvider(Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings)">
      <summary>指定された設定で &lt; sup &gt; 2 &lt;/sup &gt; C デバイスプロバイダーを取得します。</summary>
      <param name="settings">必要な設定。</param>
      <returns>私は &lt; sup &gt; 2 &lt;/sup &gt; C デバイスプロバイダーです。</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.II2cDeviceProvider">
      <summary>&gt; 2 &lt;/sup &gt; C デバイスプロバイダーに共通 &lt; するメソッドを表します。</summary>
    </member>
    <member name="P:Windows.Devices.I2c.Provider.II2cDeviceProvider.DeviceId">
      <summary>デバイスのプラグアンドプレイデバイス id を取得します (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスコントローラー。</summary>
      <returns>デバイスのプラグアンドプレイデバイス識別子 (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスコントローラーのデバイス id。</returns>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.Read(System.Byte[])">
      <summary>デバイスが指定されたバッファーに接続されている場合、統合された回線 (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスからデータを読み取ります。</summary>
      <param name="buffer">I &lt; からデータを読み取るバッファー。 sup &gt; 2 &lt;/sup &gt; C bus です。バッファーの長さによって、デバイスから要求するデータの量が決まります。</param>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.ReadPartial(System.Byte[])">
      <summary>デバイスが指定されたバッファーに接続されている、統合された回線 (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスからデータを読み取り、エラー処理に使用できる操作の成功に関する情報を返します。</summary>
      <param name="buffer">I &lt; からデータを読み取るバッファー。 sup &gt; 2 &lt;/sup &gt; C bus です。バッファーの長さによって、デバイスから要求するデータの量が決まります。</param>
      <returns>読み取り操作の成功と、操作がバッファーに読み取られた実際のバイト数に関する情報を格納する構造体。</returns>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.Write(System.Byte[])">
      <summary>デバイスが接続されている、統合された回線にデータを書き込みます (I &lt; sup &gt; 2 &lt;/sup &gt; C)。</summary>
      <param name="buffer">I &lt; sup &gt; 2 &lt;/sup &gt; C デバイスに書き込むデータを格納しているバッファー。このデータには、バスアドレスを含めないでください。</param>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.WritePartial(System.Byte[])">
      <summary>デバイスが接続されている統合回線 &lt; (&gt; 2 &lt;/sup &gt; C) バスにデータを書き込み、エラー処理に使用できる操作の成功に関する情報を返します。</summary>
      <param name="buffer">I &lt; sup &gt; 2 &lt;/sup &gt; C デバイスに書き込むデータを格納しているバッファー。このデータには、バスアドレスを含めないでください。</param>
      <returns>書き込み操作の成功と、操作がバッファーに書き込んだ実際のバイト数に関する情報を格納する構造体。</returns>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.WriteRead(System.Byte[],System.Byte[])">
      <summary>アトミックな操作を実行して、統合された回線にデータを書き込んだ後、そのデータをデバイスが接続されている &lt; sup &gt; 2 &lt;/sup &gt; C) バスに書き込み、書き込み操作と読み取り操作の間で再起動条件を送信します。</summary>
      <param name="writeBuffer">I &lt; sup &gt; 2 &lt;/sup &gt; C デバイスに書き込むデータを格納しているバッファー。このデータには、バスアドレスを含めないでください。</param>
      <param name="readBuffer">I &lt; からデータを読み取るバッファー。 sup &gt; 2 &lt;/sup &gt; C bus です。バッファーの長さによって、デバイスから要求するデータの量が決まります。</param>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cDeviceProvider.WriteReadPartial(System.Byte[],System.Byte[])">
      <summary>アトミックな操作を実行して、統合された回線にデータを書き込んだ後、そのデータをデバイスが接続されている &lt; sup &gt; 2 &lt;/sup &gt; C) バスに書き込み、エラー処理に使用できる操作の成功に関する情報を返します。</summary>
      <param name="writeBuffer">I &lt; sup &gt; 2 &lt;/sup &gt; C デバイスに書き込むデータを格納しているバッファー。このデータには、バスアドレスを含めないでください。</param>
      <param name="readBuffer">I &lt; からデータを読み取るバッファー。 sup &gt; 2 &lt;/sup &gt; C bus です。バッファーの長さによって、デバイスから要求するデータの量が決まります。</param>
      <returns>操作の読み取りと書き込みの両方の部分が成功したかどうかと、操作によって書き込まれた実際のバイト数の合計、および操作が読み取る実際のバイト数に関する情報を格納する構造体。</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.II2cProvider">
      <summary>&gt; 2 &lt;/sup &gt; C プロバイダー &lt; すべてに共通するアクションを表します。</summary>
    </member>
    <member name="M:Windows.Devices.I2c.Provider.II2cProvider.GetControllersAsync">
      <summary>システム上のすべての &lt; sup &gt; 2 &lt;/sup &gt; C コントローラーを取得します。</summary>
      <returns>メソッドが正常に完了すると、システム上で使用可能な &lt; sup &gt; 2 &lt;/sup &gt; C コントローラーを表す値の一覧が返されます。</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cBusSpeed">
      <summary>統合された回線に接続するために使用できるバス速度について説明します (&lt; sup &gt; 2 &lt;/sup &gt; C)。バス速度は、デバイスにアクセスするときに、I &lt; sup &gt; 2 &lt;/sup &gt; C バスをクロックする頻度です。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cBusSpeed.FastMode">
      <summary>400 kHz の高速な速度。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cBusSpeed.StandardMode">
      <summary>100キロヘルツ (kHz) の標準速度。この速度が既定値です。</summary>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings">
      <summary>統合された回線に使用する接続設定を表します (I &lt; sup &gt; 2 &lt;/sup &gt; C)。</summary>
    </member>
    <member name="P:Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings.BusSpeed">
      <summary>統合された回線に接続するために使用するバス速度を取得または設定します (I &lt; sup &gt; 2 &lt;/sup &gt; C)。バス速度は、デバイスにアクセスするときに、I &lt; sup &gt; 2 &lt;/sup &gt; C バスをクロックする頻度です。</summary>
      <returns>I &lt; に接続するために使用するバス速度は、&gt; 2 &lt;/sup &gt; C デバイスです。</returns>
    </member>
    <member name="P:Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings.SharingMode">
      <summary>統合された回線に接続するために使用する共有モードを取得または設定します (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスアドレス。このモードでは、i &lt; sup &gt; 2 &lt;/sup &gt; C bus アドレスに接続しているときに、I &lt; sup &gt; 2 &lt;/sup &gt; C バスアドレスへの他の接続を開くことができるかどうかを指定します。</summary>
      <returns>I &lt; に接続するために使用する共有モードは、&gt; 2 &lt;/sup &gt; C bus アドレスです。</returns>
    </member>
    <member name="P:Windows.Devices.I2c.Provider.ProviderI2cConnectionSettings.SlaveAddress">
      <summary>統合された回線のバスアドレスを取得または設定します (I &lt; sup &gt; 2 &lt;/sup &gt; C) デバイス。</summary>
      <returns>I &lt; のバスアドレスは、&gt; 2 &lt;/sup &gt; C デバイスです。7ビットのアドレス指定のみがサポートされているため、有効な値の範囲は 8 ~ 119 です。</returns>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cSharingMode">
      <summary>統合された回線に接続できるモードについて説明します (I &lt; sup &gt; 2 &lt;/sup &gt; C) バスアドレス。これらのモードは、i &lt; sup &gt; 2 &lt;/sup &gt; C bus アドレスに接続しているときに、I &lt; sup &gt; 2 &lt;/sup &gt; C バスアドレスへの他の接続を開くことができるかどうかを決定します。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cSharingMode.Exclusive">
      <summary>I &lt; sup &gt; 2 &lt;/sup &gt; C バスアドレスに接続します。これにより、接続したままでも、I &lt; sup &gt; 2 &lt;/sup &gt; C バスアドレスに接続できなくなります。このモードは既定のモードです。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cSharingMode.Shared">
      <summary>共有モードで I &lt; sup &gt; 2 &lt;/sup &gt; C バスアドレスに接続します。これにより、接続を維持したまま、I &lt; sup &gt; 2 &lt;/sup &gt; C バスアドレスへの他の接続を確立できるようになります。</summary>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cTransferResult">
      <summary>ReadPartial、WritePartial、または WriteReadPartial メソッドが成功したデータ転送、およびメソッドが実際に転送したバイト数に関する情報を提供します。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferResult.BytesTransferred">
      <summary>操作によって実際に転送された実際のバイト数。次の表は、この値が各メソッドにどのように表されるかを示しています。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferResult.Status">
      <summary>読み取りまたは書き込み操作が、メソッドによって要求された最大バイト数を転送したか、または完全転送が成功しなかった理由を示す列挙値。WriteReadPartial の場合、この値は、書き込み操作と読み取り操作の両方のデータが完全に転送されたかどうかを示します。</summary>
    </member>
    <member name="T:Windows.Devices.I2c.Provider.ProviderI2cTransferStatus">
      <summary>ReadPartial、WritePartial、または WriteReadPartial メソッドが正常に実行したデータ転送が成功したかどうか、または転送が成功しなかった理由を示します。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferStatus.FullTransfer">
      <summary>データは完全に転送されました。WriteReadPartial の場合、書き込み操作と読み取り操作の両方のデータが完全に転送されました。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferStatus.PartialTransfer">
      <summary>私 &lt; sup &gt; 2 &lt;/sup &gt; C デバイスは、すべてのデータが転送される前に、データ転送を否定受信確認しました。</summary>
    </member>
    <member name="F:Windows.Devices.I2c.Provider.ProviderI2cTransferStatus.SlaveAddressNotAcknowledged">
      <summary>バスアドレスが確認されませんでした。</summary>
    </member>
    <member name="T:Windows.Devices.Pwm.PwmController">
      <summary>システムに接続されている PWM コントローラーを表します。</summary>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmController.ActualFrequency">
      <summary>PWM の実際の頻度を取得します。</summary>
      <returns>周波数 (Hz)。</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmController.MaxFrequency">
      <summary>コントローラーによって提供される最大周波数を取得します。</summary>
      <returns>最大周波数 (Hz)。</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmController.MinFrequency">
      <summary>コントローラーによって提供される最小周波数を取得します。</summary>
      <returns>最小周波数 (Hz)。</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmController.PinCount">
      <summary>システムで使用可能な pin の数を取得します。</summary>
      <returns>Pin の数。</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.FromIdAsync(System.String)">
      <summary>指定された DeviceInformation ID に基づいて PWM controller インスタンスを初期化します。</summary>
      <param name="deviceId">取得された DeviceInformation ID。</param>
      <returns>
      </returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.GetControllersAsync(Windows.Devices.Pwm.Provider.IPwmProvider)">
      <summary>システム上のすべてのコントローラーを非同期的に取得します。</summary>
      <param name="provider">システム上の PWM プロバイダー。</param>
      <returns>メソッドが正常に完了すると、システムで使用可能なコントローラーを表す値の一覧が返されます。</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.GetDefaultAsync">
      <summary>システム上の既定の PWM コントローラーを取得します。</summary>
      <returns>システム上の既定の PWM コントローラー。システムに PWM コントローラーがない場合は null。</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.GetDeviceSelector">
      <summary>システム上のすべての PWM コントローラーの高度なクエリ構文 (AQS) 文字列を取得します。この文字列を DeviceInformation. FindAllAsync メソッドと共に使用すると、これらのコントローラーの DeviceInformation オブジェクトを取得できます。</summary>
      <returns>
      </returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.GetDeviceSelector(System.String)">
      <summary>指定されたフレンドリ名を持つ PWM コントローラーの高度なクエリ構文 (AQS) 文字列を取得します。この文字列を DeviceInformation. FindAllAsync メソッドと共に使用すると、これらのコントローラーの DeviceInformation オブジェクトを取得できます。</summary>
      <param name="friendlyName">対応する AQS 文字列を取得する特定の PWM controller のフレンドリ名。</param>
      <returns>
      </returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.OpenPin(System.Int32)">
      <summary>使用するために pin を開きます。</summary>
      <param name="pinNumber">開くピン。</param>
      <returns>要求された pin を使用できるようになりました。</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmController.SetDesiredFrequency(System.Double)">
      <summary>PWM frequency を設定します。</summary>
      <param name="desiredFrequency">次に、必要な周波数の値を Hz 単位で指定します。</param>
      <returns>設定された実際の頻度。これは、プロバイダーによって決定される、サポートされている最も近い一致です。</returns>
    </member>
    <member name="T:Windows.Devices.Pwm.PwmPin">
      <summary>システム上の単一の PWM pin を表します。</summary>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmPin.Controller">
      <summary>この pin によって使用されている PWM コントローラーを取得します。</summary>
      <returns>コントローラー。</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmPin.IsStarted">
      <summary>Pin の開始状態を取得します。</summary>
      <returns>この pin で PWM が開始されている場合は True、それ以外の場合は false。</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.PwmPin.Polarity">
      <summary>ピンの極性を取得または設定します。</summary>
      <returns>ピン極性。</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.Close">
      <summary>Pin への現在の接続を閉じ、他のユーザーがピンを開けるようにします。</summary>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.GetActiveDutyCyclePercentage">
      <summary>この pin の関税サイクルの割合を取得します。</summary>
      <returns>関税サイクルの割合。 0.0 ~ 1.0 です。</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.SetActiveDutyCyclePercentage(System.Double)">
      <summary>この pin の関税サイクルの割合を設定します。</summary>
      <param name="dutyCyclePercentage">目的のデューティサイクルの割合。 0.0 ~ 1.0 の値で表されます。</param>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.Start">
      <summary>この pin の PWM を開始します。</summary>
    </member>
    <member name="M:Windows.Devices.Pwm.PwmPin.Stop">
      <summary>この pin の PWM を停止します。</summary>
    </member>
    <member name="T:Windows.Devices.Pwm.PwmPulsePolarity">
      <summary>PWM 信号を開始する極性について説明します。</summary>
    </member>
    <member name="F:Windows.Devices.Pwm.PwmPulsePolarity.ActiveHigh">
      <summary>PWM シグナルをアクティブな高状態で開始するように構成します。</summary>
    </member>
    <member name="F:Windows.Devices.Pwm.PwmPulsePolarity.ActiveLow">
      <summary>PWM シグナルをアクティブな低状態で開始するように構成します。</summary>
    </member>
    <member name="T:Windows.Devices.Pwm.Provider.IPwmControllerProvider">
      <summary>すべての PWM コントローラーに共通のプロパティとメソッドを表します。</summary>
    </member>
    <member name="P:Windows.Devices.Pwm.Provider.IPwmControllerProvider.ActualFrequency">
      <summary>PWM の実際の頻度を取得します。</summary>
      <returns>周波数 (Hz)。</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.Provider.IPwmControllerProvider.MaxFrequency">
      <summary>コントローラーによって提供される最大周波数を取得します。</summary>
      <returns>最大周波数 (Hz)。</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.Provider.IPwmControllerProvider.MinFrequency">
      <summary>コントローラーによって提供される最小周波数を取得します。</summary>
      <returns>最小周波数 (Hz)。</returns>
    </member>
    <member name="P:Windows.Devices.Pwm.Provider.IPwmControllerProvider.PinCount">
      <summary>システムで使用可能な PWM ピンの数を取得します。</summary>
      <returns>使用可能な pin の数。</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.AcquirePin(System.Int32)">
      <summary>指定された pin を取得し、その pin を使用して開きます。</summary>
      <param name="pin">PWM 接続を開くピンを指定します。</param>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.DisablePin(System.Int32)">
      <summary>この pin の PWM を停止します。</summary>
      <param name="pin">PWM シグナルを停止するピン。</param>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.EnablePin(System.Int32)">
      <summary>指定されたピンで PWM 信号を開始します。</summary>
      <param name="pin">PWM シグナルを開始するピンを指定します。</param>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.ReleasePin(System.Int32)">
      <summary>指定された pin への接続を解放し、他のユーザーがその pin を使用できるようにします。</summary>
      <param name="pin">リリースにピン留めします。</param>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.SetDesiredFrequency(System.Double)">
      <summary>目的の PWM 頻度を設定します。</summary>
      <param name="frequency">目的の周波数 (Hz 単位)。</param>
      <returns>上記の値に設定した後の実際の PWM frequency。これは、プロバイダーによって決定される、サポートされている最も近い一致です。</returns>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmControllerProvider.SetPulseParameters(System.Int32,System.Double,System.Boolean)">
      <summary>Pin、デューティサイクル、および極性の PWM パラメーターを設定します。</summary>
      <param name="pin">これらの値が適用される pin を示します。</param>
      <param name="dutyCycle">関税サイクルの割合。 0 ~ 100 の範囲の値が含まれます。</param>
      <param name="invertPolarity">ピンの極性を反転する必要がある場合は True、それ以外の場合は false。</param>
    </member>
    <member name="T:Windows.Devices.Pwm.Provider.IPwmProvider">
      <summary>すべての PWM プロバイダーに共通のメソッドを表します。</summary>
    </member>
    <member name="M:Windows.Devices.Pwm.Provider.IPwmProvider.GetControllers">
      <summary>システムで使用可能なコントローラーを取得します。</summary>
      <returns>システムで使用可能な PWM コントローラーの一覧を返します。</returns>
    </member>
    <member name="T:Windows.Devices.Spi.ISpiDeviceStatics">
      <summary>SPI デバイスに共通の SPI デバイス統計を表します。</summary>
    </member>
    <member name="M:Windows.Devices.Spi.ISpiDeviceStatics.FromIdAsync(System.String,Windows.Devices.Spi.SpiConnectionSettings)">
      <summary>指定された接続設定を使用してデバイスを開きます。</summary>
      <param name="busId">バスの id。</param>
      <param name="settings">接続設定です。</param>
      <returns>SPI デバイス。</returns>
    </member>
    <member name="M:Windows.Devices.Spi.ISpiDeviceStatics.GetBusInfo(System.String)">
      <summary>特定のバスに関する情報を取得します。</summary>
      <param name="busId">バスの id。</param>
      <returns>要求されたバス情報。</returns>
    </member>
    <member name="M:Windows.Devices.Spi.ISpiDeviceStatics.GetDeviceSelector">
      <summary>システムで検出されたすべての SPI バスを取得します。</summary>
      <returns>システム上のすべてのバスを含む文字列。</returns>
    </member>
    <member name="M:Windows.Devices.Spi.ISpiDeviceStatics.GetDeviceSelector(System.String)">
      <summary>システム上で検出された、入力パラメーターと一致するすべての SPI バスを取得します。</summary>
      <param name="friendlyName">目的のバスの識別名を指定する入力パラメーター。これは通常、スケマティックの名前に対応しています。</param>
      <returns>名前に入力があるすべてのバスを含む文字列。</returns>
    </member>
    <member name="T:Windows.Devices.Spi.SpiBusInfo">
      <summary>SPI バスに関する情報を表します。</summary>
    </member>
    <member name="P:Windows.Devices.Spi.SpiBusInfo.ChipSelectLineCount">
      <summary>バスで使用できるチップ選択行の数を取得します。</summary>
      <returns>チップ選択行の数。</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiBusInfo.MaxClockFrequency">
      <summary>バスの最大クロックサイクル周波数。</summary>
      <returns>クロックサイクル (Hz)。</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiBusInfo.MinClockFrequency">
      <summary>バスの最小クロックサイクル周波数。</summary>
      <returns>クロックサイクル (Hz)。</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiBusInfo.SupportedDataBitLengths">
      <summary>データを送信するためにバスで使用できるビット長を取得します。</summary>
      <returns>サポートされているデータ長。</returns>
    </member>
    <member name="T:Windows.Devices.Spi.SpiConnectionSettings">
      <summary>SpiDevice を使用した接続の設定を表します。</summary>
    </member>
    <member name="M:Windows.Devices.Spi.SpiConnectionSettings.#ctor(System.Int32)">
      <summary>SpiConnectionSettings の新しいインスタンスを初期化します。</summary>
      <param name="chipSelectLine">接続を確立するチップ選択線。</param>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.ChipSelectLine">
      <summary>SPI デバイスへの接続に使用するチップ選択行を取得または設定します。</summary>
      <returns>チップの選択線。</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.ClockFrequency">
      <summary>接続のクロック周波数を取得します。値の設定もできます。</summary>
      <returns>クロック周波数の値 (Hz 単位)。</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.DataBitLength">
      <summary>この接続のデータのビット長を取得または設定します。</summary>
      <returns>データビット長。</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.Mode">
      <summary>この接続の SpiMode を取得または設定します。</summary>
      <returns>通信モード。</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiConnectionSettings.SharingMode">
      <summary>SPI 接続の共有モードを取得または設定します。</summary>
      <returns>共有モード。</returns>
    </member>
    <member name="T:Windows.Devices.Spi.SpiController">
      <summary>システム上の SPI コントローラーを表します。</summary>
    </member>
    <member name="M:Windows.Devices.Spi.SpiController.GetControllersAsync(Windows.Devices.Spi.Provider.ISpiProvider)">
      <summary>システム上のすべての SPI コントローラーを取得します。</summary>
      <param name="provider">システム上のコントローラーの SPI プロバイダー。</param>
      <returns>メソッドが正常に完了すると、システム上で使用可能な SPI コントローラーを表す値の一覧が返されます。</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiController.GetDefaultAsync">
      <summary>システム上の既定の SPI コントローラーを取得します。</summary>
      <returns>システム上の既定の SPI コントローラー。システムに SPI コントローラーがない場合は null。</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiController.GetDevice(Windows.Devices.Spi.SpiConnectionSettings)">
      <summary>指定された設定で SPI デバイスを取得します。</summary>
      <param name="settings">目的の接続設定。</param>
      <returns>SPI デバイス。</returns>
    </member>
    <member name="T:Windows.Devices.Spi.SpiDevice">
      <summary>SPI バスを介して接続されているデバイスを表します。</summary>
    </member>
    <member name="P:Windows.Devices.Spi.SpiDevice.ConnectionSettings">
      <summary>デバイスの接続設定を取得します。</summary>
      <returns>接続設定です。</returns>
    </member>
    <member name="P:Windows.Devices.Spi.SpiDevice.DeviceId">
      <summary>デバイスに関連付けられている一意の ID を取得します。</summary>
      <returns>ID。</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.Close">
      <summary>デバイスへの接続を閉じます。</summary>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.FromIdAsync(System.String,Windows.Devices.Spi.SpiConnectionSettings)">
      <summary>指定された接続設定を使用してデバイスを開きます。</summary>
      <param name="busId">バスの id。</param>
      <param name="settings">接続設定です。</param>
      <returns>要求された SPI デバイス。</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.GetBusInfo(System.String)">
      <summary>特定のバスに関する情報を取得します。</summary>
      <param name="busId">バスの id。</param>
      <returns>要求されたバス情報。</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.GetDeviceSelector">
      <summary>システムで検出されたすべての SPI バスを取得します。</summary>
      <returns>システムで検出されたすべてのバスを含む文字列。</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.GetDeviceSelector(System.String)">
      <summary>システム上で検出された、入力パラメーターと一致するすべての SPI バスを取得します。</summary>
      <param name="friendlyName">目的のバスの識別名を指定する入力パラメーター。これは通常、スケマティックの名前に対応しています。</param>
      <returns>名前に入力があるすべてのバスを含む文字列。</returns>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.Read(System.Byte[])">
      <summary>接続されているデバイスから読み取ります。</summary>
      <param name="buffer">デバイスから読み取られたデータを格納している配列。</param>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.TransferFullDuplex(System.Byte[],System.Byte[])">
      <summary>全二重通信システムを使用してデータを転送します。全二重では、マスターとスレーブの両方が同時に通信できます。</summary>
      <param name="writeBuffer">デバイスに書き込むデータを格納している配列。</param>
      <param name="readBuffer">デバイスから読み取られたデータを格納している配列。</param>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.TransferSequential(System.Byte[],System.Byte[])">
      <summary>デバイスにデータを順番に転送します。</summary>
      <param name="writeBuffer">デバイスに書き込むデータを格納している配列。</param>
      <param name="readBuffer">デバイスから読み取られたデータを格納している配列。</param>
    </member>
    <member name="M:Windows.Devices.Spi.SpiDevice.Write(System.Byte[])">
      <summary>接続されているデバイスに書き込みます。</summary>
      <param name="buffer">デバイスに書き込むデータを格納している配列。</param>
    </member>
    <member name="T:Windows.Devices.Spi.SpiMode">
      <summary>SPI 通信モードを定義します。通信モードでは、マスターアウトラインが切り替えられるクロックエッジ、マスターのサンプルと、信号クロックの信号の安定レベル (SCLK という名前) が定義されています。各モードは、クロック極性 (CPOL) とクロックフェーズ (CPHA) と呼ばれるパラメーターのペアで定義されます。</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiMode.Mode0">
      <summary>CPOL = 0、CPHA = 0。</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiMode.Mode1">
      <summary>CPOL = 0、CPHA = 1。</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiMode.Mode2">
      <summary>CPOL = 1、CPHA = 0。</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiMode.Mode3">
      <summary>CPOL = 1、CPHA = 1。</summary>
    </member>
    <member name="T:Windows.Devices.Spi.SpiSharingMode">
      <summary>SPI バスの共有モードを定義します。</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiSharingMode.Exclusive">
      <summary>SPI バスセグメントは共有されていません。</summary>
    </member>
    <member name="F:Windows.Devices.Spi.SpiSharingMode.Shared">
      <summary>SPI バスは共有されています。</summary>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ISpiControllerProvider">
      <summary>すべての SPI コントローラーに共通のアクションを表します。</summary>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiControllerProvider.GetDeviceProvider(Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings)">
      <summary>指定された設定で SPI デバイスを取得します。</summary>
      <param name="settings">目的の接続設定。</param>
      <returns>SPI デバイス。</returns>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ISpiDeviceProvider">
      <summary>SPI バスを介して接続されているデバイスに共通するアクションを表します。</summary>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ISpiDeviceProvider.ConnectionSettings">
      <summary>デバイスの接続設定を取得します。</summary>
      <returns>接続設定です。</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ISpiDeviceProvider.DeviceId">
      <summary>デバイスに関連付けられている一意の ID を取得します。</summary>
      <returns>デバイス ID。</returns>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiDeviceProvider.Read(System.Byte[])">
      <summary>接続されているデバイスから読み取ります。</summary>
      <param name="buffer">デバイスから読み取られたデータを格納している配列。</param>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiDeviceProvider.TransferFullDuplex(System.Byte[],System.Byte[])">
      <summary>全二重通信システムを使用してデータを転送します。全二重では、マスターとスレーブの両方が同時に通信できます。</summary>
      <param name="writeBuffer">デバイスに書き込むデータを格納している配列。</param>
      <param name="readBuffer">デバイスから読み取られたデータを格納している配列。</param>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiDeviceProvider.TransferSequential(System.Byte[],System.Byte[])">
      <summary>デバイスにデータを順番に転送します。</summary>
      <param name="writeBuffer">デバイスに書き込むデータを格納している配列。</param>
      <param name="readBuffer">デバイスから読み取られたデータを格納している配列。</param>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiDeviceProvider.Write(System.Byte[])">
      <summary>接続されているデバイスに書き込みます。</summary>
      <param name="buffer">デバイスに書き込むデータを格納している配列。</param>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ISpiProvider">
      <summary>SPI コントローラープロバイダーに共通のアクションを表します。</summary>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ISpiProvider.GetControllersAsync">
      <summary>プロバイダーのシステム上のすべての SPI コントローラーを取得します。</summary>
      <returns>メソッドが正常に完了すると、システム上で使用可能な SPI コントローラーを表す値の一覧が返されます。</returns>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings">
      <summary>デバイスへの接続のプロバイダー設定を表します。</summary>
    </member>
    <member name="M:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.#ctor(System.Int32)">
      <summary>ProviderSpiConnectionSettings の新しいインスタンスを初期化します。</summary>
      <param name="chipSelectLine">接続を確立するチップ選択線。</param>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.ChipSelectLine">
      <summary>SPI デバイスへの接続に使用するチップ選択行を取得または設定します。</summary>
      <returns>チップの選択線。</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.ClockFrequency">
      <summary>接続のクロック周波数を取得します。値の設定もできます。</summary>
      <returns>クロック周波数の値 (Hz 単位)。</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.DataBitLength">
      <summary>この接続のデータのビット長を取得または設定します。</summary>
      <returns>データビット長。</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.Mode">
      <summary>この接続の ProviderSpiMode を取得または設定します。</summary>
      <returns>通信モード。</returns>
    </member>
    <member name="P:Windows.Devices.Spi.Provider.ProviderSpiConnectionSettings.SharingMode">
      <summary>SPI 接続の共有モードを取得または設定します。</summary>
      <returns>共有モード。</returns>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ProviderSpiMode">
      <summary>SPI 通信モードを定義します。通信モードでは、マスターアウトラインが切り替えられるクロックエッジ、マスターのサンプルと、信号クロックの信号の安定レベル (SCLK という名前) が定義されています。各モードは、クロック極性 (CPOL) とクロックフェーズ (CPHA) と呼ばれるパラメーターのペアで定義されます。</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiMode.Mode0">
      <summary>CPOL = 0、CPHA = 0。</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiMode.Mode1">
      <summary>CPOL = 0、CPHA = 1。</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiMode.Mode2">
      <summary>CPOL = 1、CPHA = 0。</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiMode.Mode3">
      <summary>CPOL = 1、CPHA = 1。</summary>
    </member>
    <member name="T:Windows.Devices.Spi.Provider.ProviderSpiSharingMode">
      <summary>SPI バスの共有モードを定義します。</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiSharingMode.Exclusive">
      <summary>SPI バスセグメントは共有されていません。</summary>
    </member>
    <member name="F:Windows.Devices.Spi.Provider.ProviderSpiSharingMode.Shared">
      <summary>SPI バスは共有されています。</summary>
    </member>
  </members>
</doc>