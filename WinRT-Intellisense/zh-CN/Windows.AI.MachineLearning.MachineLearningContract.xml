<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Default-machinelearning-southcentralus. MachineLearningContract</name>
  </assembly>
  <members>
    <member name="T:Windows.AI.MachineLearning.ILearningModelFeatureDescriptor">
      <summary>描述所有功能具有的公共属性。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.ILearningModelFeatureDescriptor.Description">
      <summary>此功能在模型中使用的说明。</summary>
      <returns>此功能在模型中使用的说明。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.ILearningModelFeatureDescriptor.IsRequired">
      <summary>如果为 true，则必须在调用 LearningModelSession 之前将值绑定到此功能。</summary>
      <returns>如果为 true，则必须在调用 * * LearningModelSession * * 之前将值绑定到此功能。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.ILearningModelFeatureDescriptor.Kind">
      <summary>功能的类型-使用此功能来了解要使用的派生类。</summary>
      <returns>功能的类型-使用此功能来了解要使用的派生类。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.ILearningModelFeatureDescriptor.Name">
      <summary>用于将值绑定到此功能的名称。</summary>
      <returns>用于将值绑定到此功能的名称。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.ILearningModelFeatureValue">
      <summary>功能的实例化值。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.ILearningModelFeatureValue.Kind">
      <summary>功能的数据类型。</summary>
      <returns>功能的数据类型。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.ILearningModelOperatorProvider">
      <summary>
      </summary>
    </member>
    <member name="T:Windows.AI.MachineLearning.ImageFeatureDescriptor">
      <summary>描述模型所需的图像的属性。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.ImageFeatureDescriptor.BitmapAlphaMode">
      <summary>指定图像的预期 alpha 模式。</summary>
      <returns>图像的 alpha 模式。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.ImageFeatureDescriptor.BitmapPixelFormat">
      <summary>指定所需的像素格式（通道顺序、位深度和数据类型）。</summary>
      <returns>图像的像素格式。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.ImageFeatureDescriptor.Description">
      <summary>此功能在模型中使用的说明。</summary>
      <returns>此功能在模型中使用的说明。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.ImageFeatureDescriptor.Height">
      <summary>预期的图像高度。</summary>
      <returns>预期的图像高度。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.ImageFeatureDescriptor.IsRequired">
      <summary>如果为 true，则必须在调用 LearningModelSession 之前将值绑定到此功能。</summary>
      <returns>如果在调用 LearningModelSession 之前必须将值绑定到此功能，则为 True; 否则为 false。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.ImageFeatureDescriptor.Kind">
      <summary>功能的类型-使用此功能来了解要使用的派生类。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.ImageFeatureDescriptor.Name">
      <summary>用于将值绑定到此功能的名称。</summary>
      <returns>用于将值绑定到此功能的名称。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.ImageFeatureDescriptor.Width">
      <summary>预期图像宽度。</summary>
      <returns>预期图像宽度。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.ImageFeatureValue">
      <summary>描述用于传递到模型的图像的属性。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.ImageFeatureValue.Kind">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.ImageFeatureValue.VideoFrame">
      <summary>获取视频帧。</summary>
      <returns>视频帧。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.ImageFeatureValue.CreateFromVideoFrame(Windows.Media.VideoFrame)">
      <summary>使用给定的视频帧创建一个 ImageFeatureValue。</summary>
      <param name="image">用于创建 * * ImageFeatureValue * * 的视频帧。</param>
      <returns>从给定的视频帧创建的 * * ImageFeatureValue * *。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.ITensor">
      <summary>Tensors 为多维值。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.ITensor.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>Tensor 的每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.ITensor.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.LearningModel">
      <summary>表示训练的机器学习模型。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModel.Author">
      <summary>模型作者的名称。</summary>
      <returns>模型作者的名称。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModel.Description">
      <summary>模型的说明。</summary>
      <returns>模型的说明。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModel.Domain">
      <summary>模型的域。</summary>
      <returns>模型的域。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModel.InputFeatures">
      <summary>模型的输入功能的列表。</summary>
      <returns>模型的输入功能的列表。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModel.Metadata">
      <summary>ONNX 模型中的原始 &lt; 字符串 &gt; 元数据。</summary>
      <returns>ONNX 模型中的原始 &lt; 字符串 &gt; 元数据。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModel.Name">
      <summary>模型的名称。</summary>
      <returns>模型的名称。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModel.OutputFeatures">
      <summary>模型的输出功能的列表。</summary>
      <returns>模型的输出功能的列表。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModel.Version">
      <summary>模型的版本。</summary>
      <returns>模型的版本。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModel.Close">
      <summary>释放内存中 ONNX 模型。调用此后，不能再创建 LearningModelSession 对象。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModel.LoadFromFilePath(System.String)">
      <summary>从磁盘上的文件加载 ONNX 模型。</summary>
      <param name="filePath">磁盘上的 ONNX 模型文件的路径。</param>
      <returns>表示模型的对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModel.LoadFromFilePath(System.String,Windows.AI.MachineLearning.ILearningModelOperatorProvider)">
      <summary>从磁盘上的文件加载 ONNX 模型。</summary>
      <param name="filePath">磁盘上的 ONNX 模型文件的路径。</param>
      <param name="operatorProvider">
      </param>
      <returns>表示模型的对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModel.LoadFromStorageFileAsync(Windows.Storage.IStorageFile)">
      <summary>异步加载来自 IStorageFile 的 ONNX 模型。</summary>
      <param name="modelFile">模型文件的位置。</param>
      <returns>基于模型文件的 LearningModel。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModel.LoadFromStorageFileAsync(Windows.Storage.IStorageFile,Windows.AI.MachineLearning.ILearningModelOperatorProvider)">
      <summary>异步加载来自 IStorageFile 的 ONNX 模型。</summary>
      <param name="modelFile">模型文件的位置。</param>
      <param name="operatorProvider">
      </param>
      <returns>基于模型文件的 LearningModel。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModel.LoadFromStream(Windows.Storage.Streams.IRandomAccessStreamReference)">
      <summary>从流中加载 ONNX 模型。</summary>
      <param name="modelStream">要从中加载模型的流。</param>
      <returns>表示模型文件的对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModel.LoadFromStream(Windows.Storage.Streams.IRandomAccessStreamReference,Windows.AI.MachineLearning.ILearningModelOperatorProvider)">
      <summary>从流中加载 ONNX 模型。</summary>
      <param name="modelStream">要从中加载模型的流。</param>
      <param name="operatorProvider">
      </param>
      <returns>表示模型文件的对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModel.LoadFromStreamAsync(Windows.Storage.Streams.IRandomAccessStreamReference)">
      <summary>以异步方式从流加载 ONNX 模型。</summary>
      <param name="modelStream">要从中加载模型的流。</param>
      <returns>表示模型的对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModel.LoadFromStreamAsync(Windows.Storage.Streams.IRandomAccessStreamReference,Windows.AI.MachineLearning.ILearningModelOperatorProvider)">
      <summary>以异步方式从流加载 ONNX 模型。</summary>
      <param name="modelStream">要从中加载模型的流。</param>
      <param name="operatorProvider">
      </param>
      <returns>表示模型的对象。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.LearningModelBinding">
      <summary>用于将值绑定到命名的输入和输出功能。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelBinding.#ctor(Windows.AI.MachineLearning.LearningModelSession)">
      <summary>从指定的 LearningModelSession 创建 LearningModelBinding。</summary>
      <param name="session">要从中创建 * * LearningModelBinding * * 的 * * LearningModelSession * *。</param>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModelBinding.Size">
      <summary>获取映射中的元素数。</summary>
      <returns>映射中的元素数。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelBinding.Bind(System.String,System.Object)">
      <summary>将值绑定到指定的功能。</summary>
      <param name="name">功能的名称。</param>
      <param name="value">要绑定的值。</param>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelBinding.Bind(System.String,System.Object,Windows.Foundation.Collections.IPropertySet)">
      <summary>使用属性将值绑定到命名功能以控制绑定。</summary>
      <param name="name">要绑定到的功能的名称。</param>
      <param name="value">要绑定到该功能的值。</param>
      <param name="props">用于控制绑定的属性。</param>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelBinding.Clear">
      <summary>删除所有绑定。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelBinding.First">
      <summary>返回初始化为映射视图中第一个元素的迭代器。</summary>
      <returns>初始化为映射视图中第一个元素的迭代器。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelBinding.HasKey(System.String)">
      <summary>确定地图视图是否包含指定的键。</summary>
      <param name="key">要检查其是否包含在地图视图中的键。</param>
      <returns>如果地图视图包含指定的键，则为 True; 否则为。否则为 false。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelBinding.Lookup(System.String)">
      <summary>返回地图视图中指定键处的项。</summary>
      <param name="key">要查找的映射视图中的键。</param>
      <returns>地图视图中指定键处的项。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelBinding.Split(Windows.Foundation.Collections.IMapView{System.String,System.Object}@,Windows.Foundation.Collections.IMapView{System.String,System.Object}@)">
      <summary>将地图视图拆分为两个视图。</summary>
      <param name="first">原始地图的一半。</param>
      <param name="second">原始地图的后半部分。</param>
    </member>
    <member name="T:Windows.AI.MachineLearning.LearningModelDevice">
      <summary>用于评估机器学习模型的设备。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelDevice.#ctor(Windows.AI.MachineLearning.LearningModelDeviceKind)">
      <summary>从指定的 LearningModelDeviceKind 创建 LearningModelDevice。</summary>
      <param name="deviceKind">要对其进行计算的指定 * * LearningModelDeviceKind * *。</param>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModelDevice.AdapterId">
      <summary>返回设备的唯一标识符。</summary>
      <returns>设备的唯一标识符。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModelDevice.Direct3D11Device">
      <summary>返回设备的 IDirect3DDevice。</summary>
      <returns>设备的 * * IDirect3DDevice * *。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelDevice.CreateFromDirect3D11Device(Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice)">
      <summary>从指定的 IDirect3DDevice 创建 LearningModelDevice。</summary>
      <param name="device">要从中创建 * * LearningModelDevice * * 的 * * IDirect3DDevice * *。</param>
      <returns>从指定的 * * IDirect3DDevice * * 创建的 * * LearningModelDevice * *。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.LearningModelDeviceKind">
      <summary>定义可评估机器学习模型的设备类型的列表。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.LearningModelDeviceKind.Cpu">
      <summary>使用 CPU 评估模型。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.LearningModelDeviceKind.Default">
      <summary>让系统决定要使用哪种设备。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.LearningModelDeviceKind.DirectX">
      <summary>使用 GPU 或其他 DirectX 设备对模型进行评估。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.LearningModelDeviceKind.DirectXHighPerformance">
      <summary>使用系统策略定义的设备来实现高性能。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.LearningModelDeviceKind.DirectXMinPower">
      <summary>使用系统策略定义的设备来实现最小电量。</summary>
    </member>
    <member name="T:Windows.AI.MachineLearning.LearningModelEvaluationResult">
      <summary>获取计算结果。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModelEvaluationResult.CorrelationId">
      <summary>传递给 LearningModelSession 的可选字符串。</summary>
      <returns>传递给 * * LearningModelSession * * 的可选字符串。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModelEvaluationResult.ErrorStatus">
      <summary>如果评估失败，将返回导致失败的错误代码。</summary>
      <returns>导致失败的错误代码。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModelEvaluationResult.Outputs">
      <summary>获取模型的输出功能。</summary>
      <returns>模型的输出功能。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModelEvaluationResult.Succeeded">
      <summary>如果评估已成功完成，则为 True;否则为 false。</summary>
      <returns>如果评估已成功完成，则为 True;否则为 false。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.LearningModelFeatureKind">
      <summary>机器学习模型的输入和输出功能种类。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.LearningModelFeatureKind.Image">
      <summary>此功能是一个映像，因此请使用 ImageFeatureDescriptor。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.LearningModelFeatureKind.Map">
      <summary>此功能是一个映射，因此请使用 MapFeatureDescriptor。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.LearningModelFeatureKind.Sequence">
      <summary>此功能是一个序列，因此请使用 SequenceFeatureDescriptor。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.LearningModelFeatureKind.Tensor">
      <summary>此功能是一个 tensor，因此请使用 TensorFeatureDescriptor。</summary>
    </member>
    <member name="T:Windows.AI.MachineLearning.LearningModelSession">
      <summary>用于评估机器学习模型。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelSession.#ctor(Windows.AI.MachineLearning.LearningModel)">
      <summary>使用默认设备创建会话。</summary>
      <param name="model">此会话的经过训练的机器学习模型。</param>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelSession.#ctor(Windows.AI.MachineLearning.LearningModel,Windows.AI.MachineLearning.LearningModelDevice)">
      <summary>使用指定设备创建会话。</summary>
      <param name="model">此会话的经过训练的机器学习模型。</param>
      <param name="deviceToRunOn">会话的评估设备。</param>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelSession.#ctor(Windows.AI.MachineLearning.LearningModel,Windows.AI.MachineLearning.LearningModelDevice,Windows.AI.MachineLearning.LearningModelSessionOptions)">
      <summary>使用指定设备和其他推理选项创建会话。</summary>
      <param name="model">此会话的经过训练的机器学习模型。</param>
      <param name="deviceToRunOn">会话的评估设备。</param>
      <param name="learningModelSessionOptions">用于配置会话创建和评估的选项。</param>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModelSession.Device">
      <summary>返回会话的评估设备。</summary>
      <returns>会话的评估设备。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModelSession.EvaluationProperties">
      <summary>控制模型计算的属性集。</summary>
      <returns>控制模型计算的属性集。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModelSession.Model">
      <summary>返回此会话的经过训练的机器学习模型。</summary>
      <returns>此会话的经过训练的机器学习模型。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelSession.Close">
      <summary>
      </summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelSession.Evaluate(Windows.AI.MachineLearning.LearningModelBinding,System.String)">
      <summary>使用 * bindings * 中绑定的功能值评估机器学习模型。</summary>
      <param name="bindings">模型输入和变量实例之间的关联的持有者。</param>
      <param name="correlationId">用于连接输出结果的用户提供的可选字符串。</param>
      <returns>计算的结果。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelSession.EvaluateAsync(Windows.AI.MachineLearning.LearningModelBinding,System.String)">
      <summary>使用 * bindings * 中已绑定的功能值异步评估机器学习模型。</summary>
      <param name="bindings">绑定到命名的输入和输出功能的值。</param>
      <param name="correlationId">用于连接输出结果的用户提供的可选字符串。</param>
      <returns>计算中的 LearningModelEvaluationResult。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelSession.EvaluateFeatures(Windows.Foundation.Collections.IMap{System.String,System.Object},System.String)">
      <summary>使用 * features * 中的功能值评估机器学习模型。</summary>
      <param name="features">用于计算模型的特征的地图。</param>
      <param name="correlationId">可选用户提供的用于连接输出结果的字符串。</param>
      <returns>计算的结果。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelSession.EvaluateFeaturesAsync(Windows.Foundation.Collections.IMap{System.String,System.Object},System.String)">
      <summary>使用 * features * 中的功能值以异步方式评估机器学习模型。</summary>
      <param name="features">用于计算模型的特征的地图。</param>
      <param name="correlationId">可选用户提供的用于连接输出结果的字符串。</param>
      <returns>计算的结果。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.LearningModelSessionOptions">
      <summary>描述在创建 LearningModelSession 对象期间使用的推理选项。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.LearningModelSessionOptions.#ctor">
      <summary>创建用于配置 LearningModelSession 的创建的选项。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModelSessionOptions.BatchSizeOverride">
      <summary>一个数字值，该值指定目标模型的常量批大小替代值。</summary>
      <returns>用于绑定的调用所需的模型输入功能值的常量批大小。* * BatchSizeOverride * * 的默认值将为1，表示静态批大小为1。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.LearningModelSessionOptions.CloseModelOnSessionCreation">
      <summary>指定在创建 LearningModelSession 时，是否应关闭关联的学习模型。</summary>
      <returns>指示是否应在创建会话时关闭模型。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.MachineLearningContract">
      <summary>
      </summary>
    </member>
    <member name="T:Windows.AI.MachineLearning.MapFeatureDescriptor">
      <summary>映射是（键，值）对的集合。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.MapFeatureDescriptor.Description">
      <summary>此功能在模型中使用的说明。</summary>
      <returns>此功能在模型中使用的说明。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.MapFeatureDescriptor.IsRequired">
      <summary>如果为 true，则必须在调用 LearningModelSession 之前将值绑定到此功能。</summary>
      <returns>如果必须在调用 * * LearningModelSession * * 之前将值绑定到此功能，则为 True;否则为 false。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.MapFeatureDescriptor.KeyKind">
      <summary>映射键可以是 tensor 类型。</summary>
      <returns>此映射键 tensor 的类型为。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.MapFeatureDescriptor.Kind">
      <summary>功能的类型;使用此来了解要使用的派生类。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.MapFeatureDescriptor.Name">
      <summary>用于将值绑定到此功能的名称。</summary>
      <returns>用于将值绑定到此功能的名称。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.MapFeatureDescriptor.ValueDescriptor">
      <summary>映射值可以是功能类型。</summary>
      <returns>此映射值的功能。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.SequenceFeatureDescriptor">
      <summary>序列是元素数组。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.SequenceFeatureDescriptor.Description">
      <summary>此功能在模型中使用的说明。</summary>
      <returns>此功能在模型中使用的说明。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.SequenceFeatureDescriptor.ElementDescriptor">
      <summary>序列元素可以是功能类型。</summary>
      <returns>此序列元素的功能描述符。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.SequenceFeatureDescriptor.IsRequired">
      <summary>如果为 true，则必须在调用 LearningModelSession 之前将值绑定到此功能。</summary>
      <returns>如果必须在调用 * * LearningModelSession * * 之前将值绑定到此功能，则为 True;否则为 false。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.SequenceFeatureDescriptor.Kind">
      <summary>功能的类型;使用此来了解要使用的派生类。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.SequenceFeatureDescriptor.Name">
      <summary>用于将值绑定到此功能的名称。</summary>
      <returns>用于将值绑定到此功能的名称。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorBoolean">
      <summary>布尔 tensor 对象。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorBoolean.Kind">
      <summary>功能的类型。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorBoolean.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorBoolean.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorBoolean.Close">
      <summary>如果没有通过此对象创建的未完成的 IMemoryBufferReference 对象，则 * * Close * * 将释放对象并销毁其关联的资源。否则，* * Close * * 将与其关联的资源分离，并在最后一个 IMemoryBufferReference 关闭时被销毁。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorBoolean.Create">
      <summary>创建布尔 tensor 对象，而不分配缓冲区。</summary>
      <returns>布尔 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorBoolean.Create(Windows.Foundation.Collections.IIterable{System.Int64})">
      <summary>创建一个布尔 tensor 对象，并分配大小为 * shape * 的缓冲区。</summary>
      <param name="shape">缓冲区的大小。</param>
      <returns>具有给定大小的缓冲区的布尔 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorBoolean.CreateFromArray(Windows.Foundation.Collections.IIterable{System.Int64},System.Boolean[])">
      <summary>创建一个布尔 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>具有包含给定数据的缓冲区的布尔 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorBoolean.CreateFromBuffer(System.Int64[],Windows.Storage.Streams.IBuffer)">
      <summary>使用给定的 * 形状 * 创建一个布尔 tensor 对象，并使用 * data * 中的基础缓冲区进行后续计算。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="buffer">要在计算过程中使用的缓冲区。</param>
      <returns>由对提供的 IBuffer * data * 的缓冲区引用支持的布尔 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorBoolean.CreateFromIterable(Windows.Foundation.Collections.IIterable{System.Int64},Windows.Foundation.Collections.IIterable{System.Boolean})">
      <summary>创建一个布尔 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>具有包含给定数据的缓冲区的布尔 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorBoolean.CreateFromShapeArrayAndDataArray(System.Int64[],System.Boolean[])">
      <summary>创建一个布尔 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>具有包含给定数据的缓冲区的布尔 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorBoolean.CreateReference">
      <summary>返回支持布尔 tensor 对象的缓冲区的 IMemoryBufferReference 表示形式。</summary>
      <returns>Tensor 缓冲区的 IMemoryBufferReference 表示形式。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorBoolean.GetAsVectorView">
      <summary>返回数据的只读视图。</summary>
      <returns>数据的只读视图。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorDouble">
      <summary>64位 float tensor 对象。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorDouble.Kind">
      <summary>功能的类型。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorDouble.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorDouble.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorDouble.Close">
      <summary>如果没有通过此对象创建的未完成的 IMemoryBufferReference 对象，则 * * Close * * 将释放对象并销毁其关联的资源。否则，* * Close * * 将与其关联的资源分离，并在最后一个 IMemoryBufferReference 关闭时被销毁。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorDouble.Create">
      <summary>创建64位 float tensor 对象，而不分配缓冲区。</summary>
      <returns>64位 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorDouble.Create(Windows.Foundation.Collections.IIterable{System.Int64})">
      <summary>创建64位 float tensor 对象，并分配大小为 * shape * 的缓冲区。</summary>
      <param name="shape">缓冲区的大小。</param>
      <returns>具有给定大小的缓冲区的64位 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorDouble.CreateFromArray(Windows.Foundation.Collections.IIterable{System.Int64},System.Double[])">
      <summary>创建64位 float tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的64位 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorDouble.CreateFromBuffer(System.Int64[],Windows.Storage.Streams.IBuffer)">
      <summary>使用给定的 * 形状 * 创建一个双 tensor 对象，并使用 * data * 中的基础缓冲区进行后续计算。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="buffer">要在计算过程中使用的缓冲区。</param>
      <returns>一个双 tensor 对象，由对提供的 IBuffer * data * 的缓冲区引用支持。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorDouble.CreateFromIterable(Windows.Foundation.Collections.IIterable{System.Int64},Windows.Foundation.Collections.IIterable{System.Double})">
      <summary>创建64位 float tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的64位 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorDouble.CreateFromShapeArrayAndDataArray(System.Int64[],System.Double[])">
      <summary>创建64位 float tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的64位 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorDouble.CreateReference">
      <summary>返回后备 double tensor 对象的缓冲区的 IMemoryBufferReference 表示形式。</summary>
      <returns>Tensor 缓冲区的 IMemoryBufferReference 表示形式。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorDouble.GetAsVectorView">
      <summary>返回数据的只读视图。</summary>
      <returns>数据的只读视图。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorFeatureDescriptor">
      <summary>Tensors 是值的多维数组。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorFeatureDescriptor.Description">
      <summary>此功能在模型中使用的说明。</summary>
      <returns>此功能在模型中使用的说明。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorFeatureDescriptor.IsRequired">
      <summary>如果为 true，则必须在调用 LearningModelSession 之前将值绑定到此功能。</summary>
      <returns>如果必须在调用 * * LearningModelSession * * 之前将值绑定到此功能，则为 True;否则为 false。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorFeatureDescriptor.Kind">
      <summary>功能的类型;使用此来了解要使用的派生类。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorFeatureDescriptor.Name">
      <summary>用于将值绑定到此功能的名称。</summary>
      <returns>用于将值绑定到此功能的名称。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorFeatureDescriptor.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorFeatureDescriptor.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorFloat">
      <summary>32位 float tensor 对象。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorFloat.Kind">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorFloat.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorFloat.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat.Close">
      <summary>
      </summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat.Create">
      <summary>创建32位 float tensor 对象，而不分配缓冲区。</summary>
      <returns>32位 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat.Create(Windows.Foundation.Collections.IIterable{System.Int64})">
      <summary>创建32位 float tensor 对象，并分配大小为 * shape * 的缓冲区。</summary>
      <param name="shape">缓冲区的大小。</param>
      <returns>具有给定大小的缓冲区的32位 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat.CreateFromArray(Windows.Foundation.Collections.IIterable{System.Int64},System.Single[])">
      <summary>创建32位 float tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的32位 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat.CreateFromBuffer(System.Int64[],Windows.Storage.Streams.IBuffer)">
      <summary>使用给定的 * 形状 * 创建 float tensor 对象，并使用 * data * 中的基础缓冲区进行后续计算。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="buffer">要在计算过程中使用的缓冲区。</param>
      <returns>由对提供的 IBuffer * data * 的缓冲区引用支持的 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat.CreateFromIterable(Windows.Foundation.Collections.IIterable{System.Int64},Windows.Foundation.Collections.IIterable{System.Single})">
      <summary>创建32位 float tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的32位 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat.CreateFromShapeArrayAndDataArray(System.Int64[],System.Single[])">
      <summary>创建32位 float tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的32位 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat.CreateReference">
      <summary>返回支持32位 float tensor 对象的缓冲区的 IMemoryBufferReference 表示形式。</summary>
      <returns>Tensor 缓冲区的 IMemoryBufferReference 表示形式。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat.GetAsVectorView">
      <summary>返回数据的只读视图。</summary>
      <returns>数据的只读视图。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorFloat16Bit">
      <summary>16位浮点 tensor 对象。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorFloat16Bit.Kind">
      <summary>功能的类型。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorFloat16Bit.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorFloat16Bit.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat16Bit.Close">
      <summary>如果没有通过此对象创建的未完成的 IMemoryBufferReference 对象，则 * * Close * * 将释放对象并销毁其关联的资源。否则，* * Close * * 将与其关联的资源分离，并在最后一个 IMemoryBufferReference 关闭时被销毁。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat16Bit.Create">
      <summary>创建16位 float tensor 对象，而不分配缓冲区。</summary>
      <returns>16位浮点 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat16Bit.Create(Windows.Foundation.Collections.IIterable{System.Int64})">
      <summary>创建一个16位 float tensor 对象，并分配大小为 * shape * 的缓冲区。</summary>
      <param name="shape">缓冲区的大小。</param>
      <returns>具有给定大小的缓冲区的16位 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat16Bit.CreateFromArray(Windows.Foundation.Collections.IIterable{System.Int64},System.Single[])">
      <summary>创建16位 float tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的16位 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat16Bit.CreateFromBuffer(System.Int64[],Windows.Storage.Streams.IBuffer)">
      <summary>使用给定的 * 形状 * 创建16位 float tensor 对象，并使用 * data * 中的基础缓冲区进行后续计算。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="buffer">要在计算过程中使用的缓冲区。</param>
      <returns>由对提供的 IBuffer * data * 的缓冲区引用支持的16位浮点 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat16Bit.CreateFromIterable(Windows.Foundation.Collections.IIterable{System.Int64},Windows.Foundation.Collections.IIterable{System.Single})">
      <summary>创建16位 float tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的16位 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat16Bit.CreateFromShapeArrayAndDataArray(System.Int64[],System.Single[])">
      <summary>创建16位 float tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的16位 float tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat16Bit.CreateReference">
      <summary>返回支持16位 float tensor 对象的缓冲区的 IMemoryBufferReference 表示形式。</summary>
      <returns>Tensor 缓冲区的 IMemoryBufferReference 表示形式。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorFloat16Bit.GetAsVectorView">
      <summary>返回数据的只读视图。</summary>
      <returns>数据的只读视图。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorInt16Bit">
      <summary>16位带符号整数 tensor 对象。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorInt16Bit.Kind">
      <summary>功能的类型。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorInt16Bit.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorInt16Bit.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt16Bit.Close">
      <summary>如果没有通过此对象创建的未完成的 IMemoryBufferReference 对象，则 * * Close * * 将释放对象并销毁其关联的资源。否则，* * Close * * 将与其关联的资源分离，并在最后一个 IMemoryBufferReference 关闭时被销毁。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt16Bit.Create">
      <summary>创建16位有符号整数 tensor 对象，而不分配缓冲区。</summary>
      <returns>16位带符号整数 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt16Bit.Create(Windows.Foundation.Collections.IIterable{System.Int64})">
      <summary>创建一个16位有符号整数 tensor 对象，并分配大小为 * shape * 的缓冲区。</summary>
      <param name="shape">缓冲区的大小。</param>
      <returns>带有给定大小的缓冲区的16位带符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt16Bit.CreateFromArray(Windows.Foundation.Collections.IIterable{System.Int64},System.Int16[])">
      <summary>创建一个16位有符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的16位带符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt16Bit.CreateFromBuffer(System.Int64[],Windows.Storage.Streams.IBuffer)">
      <summary>创建具有给定 * 形状 * 的16位带符号整数 tensor 对象，并使用 * buffer * 中的基础缓冲区进行后续计算。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="buffer">要在计算过程中使用的缓冲区。</param>
      <returns>一个16位有符号整数 tensor 对象，由对提供的 IBuffer * 缓冲区 * 的缓冲区引用支持。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt16Bit.CreateFromIterable(Windows.Foundation.Collections.IIterable{System.Int64},Windows.Foundation.Collections.IIterable{System.Int16})">
      <summary>创建一个16位有符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的16位带符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt16Bit.CreateFromShapeArrayAndDataArray(System.Int64[],System.Int16[])">
      <summary>创建一个16位有符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的16位带符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt16Bit.CreateReference">
      <summary>返回支持16位有符号整数 tensor 对象的缓冲区的 IMemoryBufferReference 表示形式。</summary>
      <returns>Tensor 缓冲区的 IMemoryBufferReference 表示形式。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt16Bit.GetAsVectorView">
      <summary>返回数据的只读视图。</summary>
      <returns>数据的只读视图。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorInt32Bit">
      <summary>32位有符号整数 tensor 对象。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorInt32Bit.Kind">
      <summary>功能的类型。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorInt32Bit.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorInt32Bit.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt32Bit.Close">
      <summary>如果没有通过此对象创建的未完成的 IMemoryBufferReference 对象，则 * * Close * * 将释放对象并销毁其关联的资源。否则，* * Close * * 将与其关联的资源分离，并在最后一个 IMemoryBufferReference 关闭时被销毁。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt32Bit.Create">
      <summary>创建32位有符号整数 tensor 对象，而不分配缓冲区。</summary>
      <returns>32位有符号整数 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt32Bit.Create(Windows.Foundation.Collections.IIterable{System.Int64})">
      <summary>创建32位有符号整数 tensor 对象，并分配大小为 * shape * 的缓冲区。</summary>
      <param name="shape">缓冲区的大小。</param>
      <returns>带有给定大小的缓冲区的32位有符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt32Bit.CreateFromArray(Windows.Foundation.Collections.IIterable{System.Int64},System.Int32[])">
      <summary>创建32位有符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的32位有符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt32Bit.CreateFromBuffer(System.Int64[],Windows.Storage.Streams.IBuffer)">
      <summary>使用给定的 * 形状 * 创建32位有符号整数 tensor 对象，并使用 * buffer * 中的基础缓冲区进行后续计算。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="buffer">要在计算过程中使用的缓冲区。</param>
      <returns>32位有符号整数 tensor 对象，由对提供的 IBuffer * 缓冲区 * 的缓冲区引用支持。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt32Bit.CreateFromIterable(Windows.Foundation.Collections.IIterable{System.Int64},Windows.Foundation.Collections.IIterable{System.Int32})">
      <summary>创建32位有符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的32位有符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt32Bit.CreateFromShapeArrayAndDataArray(System.Int64[],System.Int32[])">
      <summary>创建32位有符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的32位有符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt32Bit.CreateReference">
      <summary>返回支持32位有符号整数 tensor 对象的缓冲区的 IMemoryBufferReference 表示形式。</summary>
      <returns>Tensor 缓冲区的 IMemoryBufferReference 表示形式。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt32Bit.GetAsVectorView">
      <summary>返回数据的只读视图。</summary>
      <returns>数据的只读视图。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorInt64Bit">
      <summary>64位有符号整数 tensor 对象。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorInt64Bit.Kind">
      <summary>功能的类型。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorInt64Bit.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorInt64Bit.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt64Bit.Close">
      <summary>如果没有通过此对象创建的未完成的 IMemoryBufferReference 对象，则 * * Close * * 将释放对象并销毁其关联的资源。否则，* * Close * * 将与其关联的资源分离，并在最后一个 IMemoryBufferReference 关闭时被销毁。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt64Bit.Create">
      <summary>创建64位有符号整数 tensor 对象，而不分配缓冲区。</summary>
      <returns>64位有符号整数 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt64Bit.Create(Windows.Foundation.Collections.IIterable{System.Int64})">
      <summary>创建64位有符号整数 tensor 对象，并分配大小为 * shape * 的缓冲区。</summary>
      <param name="shape">缓冲区的大小。</param>
      <returns>带有给定大小的缓冲区的64位有符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt64Bit.CreateFromArray(Windows.Foundation.Collections.IIterable{System.Int64},System.Int64[])">
      <summary>创建64位有符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的64位有符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt64Bit.CreateFromBuffer(System.Int64[],Windows.Storage.Streams.IBuffer)">
      <summary>使用给定的 * 形状 * 创建64位有符号整数 tensor 对象，并使用 * buffer * 中的基础缓冲区进行后续计算。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="buffer">要在计算过程中使用的缓冲区。</param>
      <returns>64位有符号整数 tensor 对象，由对提供的 IBuffer * 缓冲区 * 的缓冲区引用支持。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt64Bit.CreateFromIterable(Windows.Foundation.Collections.IIterable{System.Int64},Windows.Foundation.Collections.IIterable{System.Int64})">
      <summary>创建64位有符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的64位有符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt64Bit.CreateFromShapeArrayAndDataArray(System.Int64[],System.Int64[])">
      <summary>创建64位有符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的64位有符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt64Bit.CreateReference">
      <summary>返回支持64位有符号整数 tensor 对象的缓冲区的 IMemoryBufferReference 表示形式。</summary>
      <returns>Tensor 缓冲区的 IMemoryBufferReference 表示形式。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt64Bit.GetAsVectorView">
      <summary>返回数据的只读视图。</summary>
      <returns>数据的只读视图。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorInt8Bit">
      <summary>8位有符号整数 tensor 对象。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorInt8Bit.Kind">
      <summary>功能的类型。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorInt8Bit.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorInt8Bit.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt8Bit.Close">
      <summary>如果没有通过此对象创建的未完成的 IMemoryBufferReference 对象，则 * * Close * * 将释放对象并销毁其关联的资源。否则，* * Close * * 将与其关联的资源分离，并在最后一个 IMemoryBufferReference 关闭时被销毁。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt8Bit.Create">
      <summary>创建8位有符号整数 tensor 对象，而不分配缓冲区。</summary>
      <returns>8位有符号整数 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt8Bit.Create(Windows.Foundation.Collections.IIterable{System.Int64})">
      <summary>创建8位有符号整数 tensor 对象，并分配大小为 * shape * 的缓冲区。</summary>
      <param name="shape">缓冲区的大小。</param>
      <returns>8位有符号整数 tensor 对象，其缓冲区具有给定大小。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt8Bit.CreateFromArray(Windows.Foundation.Collections.IIterable{System.Int64},System.Byte[])">
      <summary>创建一个8位有符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>一个8位带符号整数 tensor 对象，它具有包含给定数据的缓冲区。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt8Bit.CreateFromBuffer(System.Int64[],Windows.Storage.Streams.IBuffer)">
      <summary>使用给定的 * 形状 * 创建一个8位带符号整数 tensor 对象，并使用 * buffer * 中的基础缓冲区进行后续计算。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="buffer">要在计算过程中使用的缓冲区。</param>
      <returns>8位有符号整数 tensor 对象，由对提供的 IBuffer * 缓冲区 * 的缓冲区引用支持。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt8Bit.CreateFromIterable(Windows.Foundation.Collections.IIterable{System.Int64},Windows.Foundation.Collections.IIterable{System.Byte})">
      <summary>创建一个8位有符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>一个8位带符号整数 tensor 对象，它具有包含给定数据的缓冲区。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt8Bit.CreateFromShapeArrayAndDataArray(System.Int64[],System.Byte[])">
      <summary>创建一个8位有符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>一个8位带符号整数 tensor 对象，它具有包含给定数据的缓冲区。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt8Bit.CreateReference">
      <summary>返回支持8位有符号整数 tensor 对象的缓冲区的 IMemoryBufferReference 表示形式。</summary>
      <returns>Tensor 缓冲区的 IMemoryBufferReference 表示形式。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorInt8Bit.GetAsVectorView">
      <summary>返回数据的只读视图。</summary>
      <returns>数据的只读视图。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorKind">
      <summary>定义支持的 tensor 数据类型的列表。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.Boolean">
      <summary>Tensor 类型为 * * Boolean * *。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.Complex128">
      <summary>无效类型。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.Complex64">
      <summary>无效类型。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.Double">
      <summary>Tensor 类型为64位浮点。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.Float">
      <summary>Tensor 类型为32位浮点。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.Float16">
      <summary>Tensor 类型为16位浮点。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.Int16">
      <summary>Tensor 类型为16位带符号整数。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.Int32">
      <summary>Tensor 类型为32位有符号整数。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.Int64">
      <summary>Tensor 类型为64位有符号整数。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.Int8">
      <summary>Tensor 类型是8位有符号整数。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.String">
      <summary>Tensor 类型为 * * String * *。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.UInt16">
      <summary>Tensor 类型为16位无符号整数。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.UInt32">
      <summary>Tensor 类型为32位无符号整数。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.UInt64">
      <summary>Tensor 类型为64位无符号整数。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.UInt8">
      <summary>Tensor 类型是8位无符号整数。</summary>
    </member>
    <member name="F:Windows.AI.MachineLearning.TensorKind.Undefined">
      <summary>无效类型。</summary>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorString">
      <summary>Tensor 对象的字符串。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorString.Kind">
      <summary>功能的类型。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorString.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorString.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorString.Close">
      <summary>如果没有通过此对象创建的未完成的 IMemoryBufferReference 对象，则 * * Close * * 将释放对象并销毁其关联的资源。否则，* * Close * * 将与其关联的资源分离，并在最后一个 IMemoryBufferReference 关闭时被销毁。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorString.Create">
      <summary>创建一个字符串 tensor 对象，而不分配缓冲区。</summary>
      <returns>Tensor 对象的字符串。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorString.Create(Windows.Foundation.Collections.IIterable{System.Int64})">
      <summary>创建一个字符串 tensor 对象，并分配大小为 * shape * 的缓冲区。</summary>
      <param name="shape">缓冲区的大小。</param>
      <returns>具有给定大小的缓冲区的字符串 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorString.CreateFromArray(Windows.Foundation.Collections.IIterable{System.Int64},System.String[])">
      <summary>创建一个字符串 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>一个字符串 tensor 对象，其中包含包含给定数据的缓冲区。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorString.CreateFromIterable(Windows.Foundation.Collections.IIterable{System.Int64},Windows.Foundation.Collections.IIterable{System.String})">
      <summary>创建一个字符串 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>一个字符串 tensor 对象，其中包含包含给定数据的缓冲区。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorString.CreateFromShapeArrayAndDataArray(System.Int64[],System.String[])">
      <summary>创建一个字符串 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>一个字符串 tensor 对象，其中包含包含给定数据的缓冲区。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorString.CreateReference">
      <summary>TensorString 对象不允许使用此方法，因此不应使用此方法。</summary>
      <returns>返回的 IMemoryBufferReference 始终为 * * null * *。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorString.GetAsVectorView">
      <summary>返回数据的只读视图。</summary>
      <returns>数据的只读视图。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorUInt16Bit">
      <summary>Tensor 对象的16位无符号整数。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorUInt16Bit.Kind">
      <summary>功能的类型。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorUInt16Bit.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorUInt16Bit.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt16Bit.Close">
      <summary>如果没有通过此对象创建的未完成的 IMemoryBufferReference 对象，则 * * Close * * 将释放对象并销毁其关联的资源。否则，* * Close * * 将与其关联的资源分离，并在最后一个 IMemoryBufferReference 关闭时被销毁。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt16Bit.Create">
      <summary>创建16位无符号整数 tensor 对象，而不分配缓冲区。</summary>
      <returns>Tensor 对象的16位无符号整数。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt16Bit.Create(Windows.Foundation.Collections.IIterable{System.Int64})">
      <summary>创建一个16位无符号整数 tensor 对象，并分配大小为 * shape * 的缓冲区。</summary>
      <param name="shape">缓冲区的大小。</param>
      <returns>具有给定大小的缓冲区的16位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt16Bit.CreateFromArray(Windows.Foundation.Collections.IIterable{System.Int64},System.UInt16[])">
      <summary>创建一个16位无符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的16位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt16Bit.CreateFromBuffer(System.Int64[],Windows.Storage.Streams.IBuffer)">
      <summary>创建具有给定 * 形状 * 的16位无符号整数 tensor 对象，并使用 * buffer * 中的基础缓冲区进行后续计算。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="buffer">要在计算过程中使用的缓冲区。</param>
      <returns>一个16位无符号整数 tensor 对象，由对提供的 IBuffer * 缓冲区 * 的缓冲区引用支持。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt16Bit.CreateFromIterable(Windows.Foundation.Collections.IIterable{System.Int64},Windows.Foundation.Collections.IIterable{System.UInt16})">
      <summary>创建一个16位无符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的16位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt16Bit.CreateFromShapeArrayAndDataArray(System.Int64[],System.UInt16[])">
      <summary>创建一个16位无符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的16位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt16Bit.CreateReference">
      <summary>返回支持16位无符号整数 tensor 对象的缓冲区的 IMemoryBufferReference 表示形式。</summary>
      <returns>Tensor 缓冲区的 IMemoryBufferReference 表示形式。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt16Bit.GetAsVectorView">
      <summary>返回数据的只读视图。</summary>
      <returns>数据的只读视图。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorUInt32Bit">
      <summary>32位无符号整数 tensor 对象。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorUInt32Bit.Kind">
      <summary>功能的类型。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorUInt32Bit.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorUInt32Bit.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt32Bit.Close">
      <summary>如果没有通过此对象创建的未完成的 IMemoryBufferReference 对象，则 * * Close * * 将释放对象并销毁其关联的资源。否则，* * Close * * 将与其关联的资源分离，并在最后一个 IMemoryBufferReference 关闭时被销毁。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt32Bit.Create">
      <summary>创建32位无符号整数 tensor 对象，而不分配缓冲区。</summary>
      <returns>32位无符号整数 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt32Bit.Create(Windows.Foundation.Collections.IIterable{System.Int64})">
      <summary>创建32位无符号整数 tensor 对象，并分配大小为 * shape * 的缓冲区。</summary>
      <param name="shape">缓冲区的大小。</param>
      <returns>带有给定大小的缓冲区的32位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt32Bit.CreateFromArray(Windows.Foundation.Collections.IIterable{System.Int64},System.UInt32[])">
      <summary>创建32位无符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的32位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt32Bit.CreateFromBuffer(System.Int64[],Windows.Storage.Streams.IBuffer)">
      <summary>使用给定的 * 形状 * 创建一个32位无符号整数 tensor 对象，并使用 * buffer * 中的基础缓冲区进行后续计算。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="buffer">要在计算过程中使用的缓冲区。</param>
      <returns>32位无符号整数 tensor 对象，由对提供的 IBuffer * 缓冲区 * 的缓冲区引用支持。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt32Bit.CreateFromIterable(Windows.Foundation.Collections.IIterable{System.Int64},Windows.Foundation.Collections.IIterable{System.UInt32})">
      <summary>创建32位无符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的32位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt32Bit.CreateFromShapeArrayAndDataArray(System.Int64[],System.UInt32[])">
      <summary>创建32位无符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的32位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt32Bit.CreateReference">
      <summary>返回支持32位无符号整数 tensor 对象的缓冲区的 IMemoryBufferReference 表示形式。</summary>
      <returns>Tensor 缓冲区的 IMemoryBufferReference 表示形式。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt32Bit.GetAsVectorView">
      <summary>返回数据的只读视图。</summary>
      <returns>数据的只读视图。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorUInt64Bit">
      <summary>64位无符号整数 tensor 对象。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorUInt64Bit.Kind">
      <summary>功能的类型。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorUInt64Bit.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorUInt64Bit.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt64Bit.Close">
      <summary>如果没有通过此对象创建的未完成的 IMemoryBufferReference 对象，则 * * Close * * 将释放对象并销毁其关联的资源。否则，* * Close * * 将与其关联的资源分离，并在最后一个 IMemoryBufferReference 关闭时被销毁。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt64Bit.Create">
      <summary>创建64位无符号整数 tensor 对象，而不分配缓冲区。</summary>
      <returns>64位无符号整数 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt64Bit.Create(Windows.Foundation.Collections.IIterable{System.Int64})">
      <summary>创建64位无符号整数 tensor 对象，并分配大小为 * shape * 的缓冲区。</summary>
      <param name="shape">缓冲区的大小。</param>
      <returns>带有给定大小的缓冲区的64位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt64Bit.CreateFromArray(Windows.Foundation.Collections.IIterable{System.Int64},System.UInt64[])">
      <summary>创建64位无符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的64位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt64Bit.CreateFromBuffer(System.Int64[],Windows.Storage.Streams.IBuffer)">
      <summary>使用给定的 * 形状 * 创建一个64位无符号整数 tensor 对象，并使用 * buffer * 中的基础缓冲区进行后续计算。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="buffer">要在计算过程中使用的缓冲区。</param>
      <returns>64位无符号整数 tensor 对象，由对提供的 IBuffer * 缓冲区 * 的缓冲区引用支持。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt64Bit.CreateFromIterable(Windows.Foundation.Collections.IIterable{System.Int64},Windows.Foundation.Collections.IIterable{System.UInt64})">
      <summary>创建64位无符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的64位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt64Bit.CreateFromShapeArrayAndDataArray(System.Int64[],System.UInt64[])">
      <summary>创建64位无符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的64位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt64Bit.CreateReference">
      <summary>返回支持64位无符号整数 tensor 对象的缓冲区的 IMemoryBufferReference 表示形式。</summary>
      <returns>Tensor 缓冲区的 IMemoryBufferReference 表示形式。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt64Bit.GetAsVectorView">
      <summary>返回数据的只读视图。</summary>
      <returns>数据的只读视图。</returns>
    </member>
    <member name="T:Windows.AI.MachineLearning.TensorUInt8Bit">
      <summary>8位无符号整数 tensor 对象。</summary>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorUInt8Bit.Kind">
      <summary>功能的类型。</summary>
      <returns>功能的类型。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorUInt8Bit.Shape">
      <summary>返回每个维度的计数和大小。</summary>
      <returns>每个维度的计数和大小。</returns>
    </member>
    <member name="P:Windows.AI.MachineLearning.TensorUInt8Bit.TensorKind">
      <summary>返回 tensor 的数据类型。</summary>
      <returns>Tensor 的数据类型。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt8Bit.Close">
      <summary>如果没有通过此对象创建的未完成的 IMemoryBufferReference 对象，则 * * Close * * 将释放对象并销毁其关联的资源。否则，* * Close * * 将与其关联的资源分离，并在最后一个 IMemoryBufferReference 关闭时被销毁。</summary>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt8Bit.Create">
      <summary>创建8位无符号整数 tensor 对象，而不分配缓冲区。</summary>
      <returns>8位无符号整数 tensor 对象。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt8Bit.Create(Windows.Foundation.Collections.IIterable{System.Int64})">
      <summary>创建一个8位无符号整数 tensor 对象，并分配大小为 * shape * 的缓冲区。</summary>
      <param name="shape">缓冲区的大小。</param>
      <returns>具有给定大小的缓冲区的8位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt8Bit.CreateFromArray(Windows.Foundation.Collections.IIterable{System.Int64},System.Byte[])">
      <summary>创建一个8位无符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的8位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt8Bit.CreateFromBuffer(System.Int64[],Windows.Storage.Streams.IBuffer)">
      <summary>使用给定的 * 形状 * 创建一个8位无符号整数 tensor 对象，并使用 * buffer * 中的基础缓冲区进行后续计算。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="buffer">要在计算过程中使用的缓冲区。</param>
      <returns>一个8位无符号整数 tensor 对象，由对提供的 IBuffer * 缓冲区 * 的缓冲区引用支持。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt8Bit.CreateFromIterable(Windows.Foundation.Collections.IIterable{System.Int64},Windows.Foundation.Collections.IIterable{System.Byte})">
      <summary>创建一个8位无符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的8位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt8Bit.CreateFromShapeArrayAndDataArray(System.Int64[],System.Byte[])">
      <summary>创建一个8位无符号整数 tensor 对象，分配大小为 * shape * 的缓冲区，并将所有 * 数据 * 复制到其中。</summary>
      <param name="shape">缓冲区的大小。</param>
      <param name="data">要复制到缓冲区的数据。</param>
      <returns>带有包含给定数据的缓冲区的8位无符号整数 tensor。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt8Bit.CreateReference">
      <summary>返回支持8位无符号 tensor 对象的缓冲区的 IMemoryBufferReference 表示形式。</summary>
      <returns>Tensor 缓冲区的 IMemoryBufferReference 表示形式。</returns>
    </member>
    <member name="M:Windows.AI.MachineLearning.TensorUInt8Bit.GetAsVectorView">
      <summary>返回数据的只读视图。</summary>
      <returns>数据的只读视图。</returns>
    </member>
  </members>
</doc>